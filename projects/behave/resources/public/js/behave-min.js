// include: shell.js
// The Module object: Our interface to the outside world. We import
// and export values on it. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(moduleArg) => Promise<Module>
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to check if Module already exists (e.g. case 3 above).
// Substitution will be replaced with actual code on later stage of the build,
// this way Closure Compiler will not mangle it (e.g. case 4. above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module = typeof Module != 'undefined' ? Module : {};

// Determine the runtime environment we are in. You can customize this by
// setting the ENVIRONMENT setting at compile time (see settings.js).

// Attempt to auto-detect the environment
var ENVIRONMENT_IS_WEB = typeof window == 'object';
var ENVIRONMENT_IS_WORKER = typeof WorkerGlobalScope != 'undefined';
// N.b. Electron.js environment is simultaneously a NODE-environment, but
// also a web environment.
var ENVIRONMENT_IS_NODE = typeof process == 'object' && process.versions?.node && process.type != 'renderer';
var ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;

// --pre-jses are emitted after the Module integration code, so that they can
// refer to Module (if they choose; they can also define Module)
// include: /Users/rsheperd/code/sig/behave-app/behave-lib/include/js/pre.js
Module["onRuntimeInitialized"] = window.onWASMModuleLoaded;
// end include: /Users/rsheperd/code/sig/behave-app/behave-lib/include/js/pre.js


var arguments_ = [];
var thisProgram = './this.program';
var quit_ = (status, toThrow) => {
  throw toThrow;
};

// In MODULARIZE mode _scriptName needs to be captured already at the very top of the page immediately when the page is parsed, so it is generated there
// before the page load. In non-MODULARIZE modes generate it here.
var _scriptName = typeof document != 'undefined' ? document.currentScript?.src : undefined;

if (typeof __filename != 'undefined') { // Node
  _scriptName = __filename;
} else
if (ENVIRONMENT_IS_WORKER) {
  _scriptName = self.location.href;
}

// `/` should be present at the end if `scriptDirectory` is not empty
var scriptDirectory = '';
function locateFile(path) {
  if (Module['locateFile']) {
    return Module['locateFile'](path, scriptDirectory);
  }
  return scriptDirectory + path;
}

// Hooks that are implemented differently in different runtime environments.
var readAsync, readBinary;

if (ENVIRONMENT_IS_NODE) {
  const isNode = typeof process == 'object' && process.versions?.node && process.type != 'renderer';
  if (!isNode) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

  var nodeVersion = process.versions.node;
  var numericVersion = nodeVersion.split('.').slice(0, 3);
  numericVersion = (numericVersion[0] * 10000) + (numericVersion[1] * 100) + (numericVersion[2].split('-')[0] * 1);
  if (numericVersion < 160000) {
    throw new Error('This emscripten-generated code requires node v16.0.0 (detected v' + nodeVersion + ')');
  }

  // These modules will usually be used on Node.js. Load them eagerly to avoid
  // the complexity of lazy-loading.
  var fs = require('fs');

  scriptDirectory = __dirname + '/';

// include: node_shell_read.js
readBinary = (filename) => {
  // We need to re-wrap `file://` strings to URLs.
  filename = isFileURI(filename) ? new URL(filename) : filename;
  var ret = fs.readFileSync(filename);
  assert(Buffer.isBuffer(ret));
  return ret;
};

readAsync = async (filename, binary = true) => {
  // See the comment in the `readBinary` function.
  filename = isFileURI(filename) ? new URL(filename) : filename;
  var ret = fs.readFileSync(filename, binary ? undefined : 'utf8');
  assert(binary ? Buffer.isBuffer(ret) : typeof ret == 'string');
  return ret;
};
// end include: node_shell_read.js
  if (process.argv.length > 1) {
    thisProgram = process.argv[1].replace(/\\/g, '/');
  }

  arguments_ = process.argv.slice(2);

  // MODULARIZE will export the module in the proper place outside, we don't need to export here
  if (typeof module != 'undefined') {
    module['exports'] = Module;
  }

  quit_ = (status, toThrow) => {
    process.exitCode = status;
    throw toThrow;
  };

} else
if (ENVIRONMENT_IS_SHELL) {

  const isNode = typeof process == 'object' && process.versions?.node && process.type != 'renderer';
  if (isNode || typeof window == 'object' || typeof WorkerGlobalScope != 'undefined') throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

} else

// Note that this includes Node.js workers when relevant (pthreads is enabled).
// Node.js workers are detected as a combination of ENVIRONMENT_IS_WORKER and
// ENVIRONMENT_IS_NODE.
if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  try {
    scriptDirectory = new URL('.', _scriptName).href; // includes trailing slash
  } catch {
    // Must be a `blob:` or `data:` URL (e.g. `blob:http://site.com/etc/etc`), we cannot
    // infer anything from them.
  }

  if (!(typeof window == 'object' || typeof WorkerGlobalScope != 'undefined')) throw new Error('not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)');

  {
// include: web_or_worker_shell_read.js
if (ENVIRONMENT_IS_WORKER) {
    readBinary = (url) => {
      var xhr = new XMLHttpRequest();
      xhr.open('GET', url, false);
      xhr.responseType = 'arraybuffer';
      xhr.send(null);
      return new Uint8Array(/** @type{!ArrayBuffer} */(xhr.response));
    };
  }

  readAsync = async (url) => {
    // Fetch has some additional restrictions over XHR, like it can't be used on a file:// url.
    // See https://github.com/github/fetch/pull/92#issuecomment-140665932
    // Cordova or Electron apps are typically loaded from a file:// url.
    // So use XHR on webview if URL is a file URL.
    if (isFileURI(url)) {
      return new Promise((resolve, reject) => {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'arraybuffer';
        xhr.onload = () => {
          if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
            resolve(xhr.response);
            return;
          }
          reject(xhr.status);
        };
        xhr.onerror = reject;
        xhr.send(null);
      });
    }
    var response = await fetch(url, { credentials: 'same-origin' });
    if (response.ok) {
      return response.arrayBuffer();
    }
    throw new Error(response.status + ' : ' + response.url);
  };
// end include: web_or_worker_shell_read.js
  }
} else
{
  throw new Error('environment detection error');
}

var out = console.log.bind(console);
var err = console.error.bind(console);

var IDBFS = 'IDBFS is no longer included by default; build with -lidbfs.js';
var PROXYFS = 'PROXYFS is no longer included by default; build with -lproxyfs.js';
var WORKERFS = 'WORKERFS is no longer included by default; build with -lworkerfs.js';
var FETCHFS = 'FETCHFS is no longer included by default; build with -lfetchfs.js';
var ICASEFS = 'ICASEFS is no longer included by default; build with -licasefs.js';
var JSFILEFS = 'JSFILEFS is no longer included by default; build with -ljsfilefs.js';
var OPFS = 'OPFS is no longer included by default; build with -lopfs.js';

var NODEFS = 'NODEFS is no longer included by default; build with -lnodefs.js';

// perform assertions in shell.js after we set up out() and err(), as otherwise
// if an assertion fails it cannot print the message

assert(!ENVIRONMENT_IS_SHELL, 'shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable.');

// end include: shell.js

// include: preamble.js
// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in:
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at:
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

var wasmBinary;

if (typeof WebAssembly != 'object') {
  err('no native wasm support detected');
}

// Wasm globals

//========================================
// Runtime essentials
//========================================

// whether we are quitting the application. no code should run after this.
// set in exit() and abort()
var ABORT = false;

// set by exit() and abort().  Passed to 'onExit' handler.
// NOTE: This is also used as the process return code code in shell environments
// but only when noExitRuntime is false.
var EXITSTATUS;

// In STRICT mode, we only define assert() when ASSERTIONS is set.  i.e. we
// don't define it at all in release modes.  This matches the behaviour of
// MINIMAL_RUNTIME.
// TODO(sbc): Make this the default even without STRICT enabled.
/** @type {function(*, string=)} */
function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed' + (text ? ': ' + text : ''));
  }
}

// We used to include malloc/free by default in the past. Show a helpful error in
// builds with assertions.

/**
 * Indicates whether filename is delivered via file protocol (as opposed to http/https)
 * @noinline
 */
var isFileURI = (filename) => filename.startsWith('file://');

// include: runtime_common.js
// include: runtime_stack_check.js
// Initializes the stack cookie. Called at the startup of main and at the startup of each thread in pthreads mode.
function writeStackCookie() {
  var max = _emscripten_stack_get_end();
  assert((max & 3) == 0);
  // If the stack ends at address zero we write our cookies 4 bytes into the
  // stack.  This prevents interference with SAFE_HEAP and ASAN which also
  // monitor writes to address zero.
  if (max == 0) {
    max += 4;
  }
  // The stack grow downwards towards _emscripten_stack_get_end.
  // We write cookies to the final two words in the stack and detect if they are
  // ever overwritten.
  HEAPU32[((max)>>2)] = 0x02135467;
  HEAPU32[(((max)+(4))>>2)] = 0x89BACDFE;
  // Also test the global address 0 for integrity.
  HEAPU32[((0)>>2)] = 1668509029;
}

function checkStackCookie() {
  if (ABORT) return;
  var max = _emscripten_stack_get_end();
  // See writeStackCookie().
  if (max == 0) {
    max += 4;
  }
  var cookie1 = HEAPU32[((max)>>2)];
  var cookie2 = HEAPU32[(((max)+(4))>>2)];
  if (cookie1 != 0x02135467 || cookie2 != 0x89BACDFE) {
    abort(`Stack overflow! Stack cookie has been overwritten at ${ptrToString(max)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${ptrToString(cookie2)} ${ptrToString(cookie1)}`);
  }
  // Also test the global address 0 for integrity.
  if (HEAPU32[((0)>>2)] != 0x63736d65 /* 'emsc' */) {
    abort('Runtime error: The application has corrupted its heap memory area (address zero)!');
  }
}
// end include: runtime_stack_check.js
// include: runtime_exceptions.js
// Base Emscripten EH error class
class EmscriptenEH extends Error {}

class EmscriptenSjLj extends EmscriptenEH {}

class CppException extends EmscriptenEH {
  constructor(excPtr) {
    super(excPtr);
    this.excPtr = excPtr;
    const excInfo = getExceptionMessage(excPtr);
    this.name = excInfo[0];
    this.message = excInfo[1];
  }
}
// end include: runtime_exceptions.js
// include: runtime_debug.js
var runtimeDebug = true; // Switch to false at runtime to disable logging at the right times

// Used by XXXXX_DEBUG settings to output debug messages.
function dbg(...args) {
  if (!runtimeDebug && typeof runtimeDebug != 'undefined') return;
  // TODO(sbc): Make this configurable somehow.  Its not always convenient for
  // logging to show up as warnings.
  console.warn(...args);
}

// Endianness check
(() => {
  var h16 = new Int16Array(1);
  var h8 = new Int8Array(h16.buffer);
  h16[0] = 0x6373;
  if (h8[0] !== 0x73 || h8[1] !== 0x63) throw 'Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)';
})();

function consumedModuleProp(prop) {
  if (!Object.getOwnPropertyDescriptor(Module, prop)) {
    Object.defineProperty(Module, prop, {
      configurable: true,
      set() {
        abort(`Attempt to set \`Module.${prop}\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`);

      }
    });
  }
}

function makeInvalidEarlyAccess(name) {
  return () => assert(false, `call to '${name}' via reference taken before Wasm module initialization`);

}

function ignoredModuleProp(prop) {
  if (Object.getOwnPropertyDescriptor(Module, prop)) {
    abort(`\`Module.${prop}\` was supplied but \`${prop}\` not included in INCOMING_MODULE_JS_API`);
  }
}

// forcing the filesystem exports a few things by default
function isExportedByForceFilesystem(name) {
  return name === 'FS_createPath' ||
         name === 'FS_createDataFile' ||
         name === 'FS_createPreloadedFile' ||
         name === 'FS_unlink' ||
         name === 'addRunDependency' ||
         // The old FS has some functionality that WasmFS lacks.
         name === 'FS_createLazyFile' ||
         name === 'FS_createDevice' ||
         name === 'removeRunDependency';
}

/**
 * Intercept access to a global symbol.  This enables us to give informative
 * warnings/errors when folks attempt to use symbols they did not include in
 * their build, or no symbols that no longer exist.
 */
function hookGlobalSymbolAccess(sym, func) {
  if (typeof globalThis != 'undefined' && !Object.getOwnPropertyDescriptor(globalThis, sym)) {
    Object.defineProperty(globalThis, sym, {
      configurable: true,
      get() {
        func();
        return undefined;
      }
    });
  }
}

function missingGlobal(sym, msg) {
  hookGlobalSymbolAccess(sym, () => {
    warnOnce(`\`${sym}\` is not longer defined by emscripten. ${msg}`);
  });
}

missingGlobal('buffer', 'Please use HEAP8.buffer or wasmMemory.buffer');
missingGlobal('asm', 'Please use wasmExports instead');

function missingLibrarySymbol(sym) {
  hookGlobalSymbolAccess(sym, () => {
    // Can't `abort()` here because it would break code that does runtime
    // checks.  e.g. `if (typeof SDL === 'undefined')`.
    var msg = `\`${sym}\` is a library symbol and not included by default; add it to your library.js __deps or to DEFAULT_LIBRARY_FUNCS_TO_INCLUDE on the command line`;
    // DEFAULT_LIBRARY_FUNCS_TO_INCLUDE requires the name as it appears in
    // library.js, which means $name for a JS name with no prefix, or name
    // for a JS name like _name.
    var librarySymbol = sym;
    if (!librarySymbol.startsWith('_')) {
      librarySymbol = '$' + sym;
    }
    msg += ` (e.g. -sDEFAULT_LIBRARY_FUNCS_TO_INCLUDE='${librarySymbol}')`;
    if (isExportedByForceFilesystem(sym)) {
      msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';
    }
    warnOnce(msg);
  });

  // Any symbol that is not included from the JS library is also (by definition)
  // not exported on the Module object.
  unexportedRuntimeSymbol(sym);
}

function unexportedRuntimeSymbol(sym) {
  if (!Object.getOwnPropertyDescriptor(Module, sym)) {
    Object.defineProperty(Module, sym, {
      configurable: true,
      get() {
        var msg = `'${sym}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;
        if (isExportedByForceFilesystem(sym)) {
          msg += '. Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you';
        }
        abort(msg);
      }
    });
  }
}

// end include: runtime_debug.js
// Memory management

var wasmMemory;

var
/** @type {!Int8Array} */
  HEAP8,
/** @type {!Uint8Array} */
  HEAPU8,
/** @type {!Int16Array} */
  HEAP16,
/** @type {!Uint16Array} */
  HEAPU16,
/** @type {!Int32Array} */
  HEAP32,
/** @type {!Uint32Array} */
  HEAPU32,
/** @type {!Float32Array} */
  HEAPF32,
/** @type {!Float64Array} */
  HEAPF64;

// BigInt64Array type is not correctly defined in closure
var
/** not-@type {!BigInt64Array} */
  HEAP64,
/* BigUint64Array type is not correctly defined in closure
/** not-@type {!BigUint64Array} */
  HEAPU64;

var runtimeInitialized = false;



function updateMemoryViews() {
  var b = wasmMemory.buffer;
  HEAP8 = new Int8Array(b);
  HEAP16 = new Int16Array(b);
  HEAPU8 = new Uint8Array(b);
  HEAPU16 = new Uint16Array(b);
  HEAP32 = new Int32Array(b);
  HEAPU32 = new Uint32Array(b);
  HEAPF32 = new Float32Array(b);
  HEAPF64 = new Float64Array(b);
  HEAP64 = new BigInt64Array(b);
  HEAPU64 = new BigUint64Array(b);
}

// include: memoryprofiler.js
// end include: memoryprofiler.js
// end include: runtime_common.js
assert(typeof Int32Array != 'undefined' && typeof Float64Array !== 'undefined' && Int32Array.prototype.subarray != undefined && Int32Array.prototype.set != undefined,
       'JS engine does not provide full typed array support');

function preRun() {
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  consumedModuleProp('preRun');
  // Begin ATPRERUNS hooks
  callRuntimeCallbacks(onPreRuns);
  // End ATPRERUNS hooks
}

function initRuntime() {
  assert(!runtimeInitialized);
  runtimeInitialized = true;

  checkStackCookie();

  // Begin ATINITS hooks
  callRuntimeCallbacks(onInits);
if (!Module['noFSInit'] && !FS.initialized) FS.init();
TTY.init();
  // End ATINITS hooks

  wasmExports['__wasm_call_ctors']();

  // Begin ATPOSTCTORS hooks
  FS.ignorePermissions = false;
  // End ATPOSTCTORS hooks
}

function postRun() {
  checkStackCookie();
   // PThreads reuse the runtime from the main thread.

  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  consumedModuleProp('postRun');

  // Begin ATPOSTRUNS hooks
  callRuntimeCallbacks(onPostRuns);
  // End ATPOSTRUNS hooks
}

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// Module.preRun (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled
var runDependencyTracking = {};
var runDependencyWatcher = null;

function addRunDependency(id) {
  runDependencies++;

  Module['monitorRunDependencies']?.(runDependencies);

  if (id) {
    assert(!runDependencyTracking[id]);
    runDependencyTracking[id] = 1;
    if (runDependencyWatcher === null && typeof setInterval != 'undefined') {
      // Check for missing dependencies every few seconds
      runDependencyWatcher = setInterval(() => {
        if (ABORT) {
          clearInterval(runDependencyWatcher);
          runDependencyWatcher = null;
          return;
        }
        var shown = false;
        for (var dep in runDependencyTracking) {
          if (!shown) {
            shown = true;
            err('still waiting on run dependencies:');
          }
          err(`dependency: ${dep}`);
        }
        if (shown) {
          err('(end of list)');
        }
      }, 10000);
    }
  } else {
    err('warning: run dependency added without ID');
  }
}

function removeRunDependency(id) {
  runDependencies--;

  Module['monitorRunDependencies']?.(runDependencies);

  if (id) {
    assert(runDependencyTracking[id]);
    delete runDependencyTracking[id];
  } else {
    err('warning: run dependency removed without ID');
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}

/** @param {string|number=} what */
function abort(what) {
  Module['onAbort']?.(what);

  what = 'Aborted(' + what + ')';
  // TODO(sbc): Should we remove printing and leave it up to whoever
  // catches the exception?
  err(what);

  ABORT = true;

  // Use a wasm runtime error, because a JS error might be seen as a foreign
  // exception, which means we'd run destructors on it. We need the error to
  // simply make the program stop.
  // FIXME This approach does not work in Wasm EH because it currently does not assume
  // all RuntimeErrors are from traps; it decides whether a RuntimeError is from
  // a trap or not based on a hidden field within the object. So at the moment
  // we don't have a way of throwing a wasm trap from JS. TODO Make a JS API that
  // allows this in the wasm spec.

  // Suppress closure compiler warning here. Closure compiler's builtin extern
  // definition for WebAssembly.RuntimeError claims it takes no arguments even
  // though it can.
  // TODO(https://github.com/google/closure-compiler/pull/3913): Remove if/when upstream closure gets fixed.
  /** @suppress {checkTypes} */
  var e = new WebAssembly.RuntimeError(what);

  // Throw the error whether or not MODULARIZE is set because abort is used
  // in code paths apart from instantiation where an exception is expected
  // to be thrown when abort is called.
  throw e;
}

function createExportWrapper(name, nargs) {
  return (...args) => {
    assert(runtimeInitialized, `native function \`${name}\` called before runtime initialization`);
    var f = wasmExports[name];
    assert(f, `exported native function \`${name}\` not found`);
    // Only assert for too many arguments. Too few can be valid since the missing arguments will be zero filled.
    assert(args.length <= nargs, `native function \`${name}\` called with ${args.length} args but expects ${nargs}`);
    return f(...args);
  };
}

var wasmBinaryFile;

function findWasmBinary() {
    return locateFile('behave-min.wasm');
}

function getBinarySync(file) {
  if (file == wasmBinaryFile && wasmBinary) {
    return new Uint8Array(wasmBinary);
  }
  if (readBinary) {
    return readBinary(file);
  }
  throw 'both async and sync fetching of the wasm failed';
}

async function getWasmBinary(binaryFile) {
  // If we don't have the binary yet, load it asynchronously using readAsync.
  if (!wasmBinary) {
    // Fetch the binary using readAsync
    try {
      var response = await readAsync(binaryFile);
      return new Uint8Array(response);
    } catch {
      // Fall back to getBinarySync below;
    }
  }

  // Otherwise, getBinarySync should be able to get it synchronously
  return getBinarySync(binaryFile);
}

async function instantiateArrayBuffer(binaryFile, imports) {
  try {
    var binary = await getWasmBinary(binaryFile);
    var instance = await WebAssembly.instantiate(binary, imports);
    return instance;
  } catch (reason) {
    err(`failed to asynchronously prepare wasm: ${reason}`);

    // Warn on some common problems.
    if (isFileURI(wasmBinaryFile)) {
      err(`warning: Loading from a file URI (${wasmBinaryFile}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`);
    }
    abort(reason);
  }
}

async function instantiateAsync(binary, binaryFile, imports) {
  if (!binary && typeof WebAssembly.instantiateStreaming == 'function'
      // Don't use streaming for file:// delivered objects in a webview, fetch them synchronously.
      && !isFileURI(binaryFile)
      // Avoid instantiateStreaming() on Node.js environment for now, as while
      // Node.js v18.1.0 implements it, it does not have a full fetch()
      // implementation yet.
      //
      // Reference:
      //   https://github.com/emscripten-core/emscripten/pull/16917
      && !ENVIRONMENT_IS_NODE
     ) {
    try {
      var response = fetch(binaryFile, { credentials: 'same-origin' });
      var instantiationResult = await WebAssembly.instantiateStreaming(response, imports);
      return instantiationResult;
    } catch (reason) {
      // We expect the most common failure cause to be a bad MIME type for the binary,
      // in which case falling back to ArrayBuffer instantiation should work.
      err(`wasm streaming compile failed: ${reason}`);
      err('falling back to ArrayBuffer instantiation');
      // fall back of instantiateArrayBuffer below
    };
  }
  return instantiateArrayBuffer(binaryFile, imports);
}

function getWasmImports() {
  // prepare imports
  return {
    'env': wasmImports,
    'wasi_snapshot_preview1': wasmImports,
  }
}

// Create the wasm instance.
// Receives the wasm imports, returns the exports.
async function createWasm() {
  // Load the wasm module and create an instance of using native support in the JS engine.
  // handle a generated wasm instance, receiving its exports and
  // performing other necessary setup
  /** @param {WebAssembly.Module=} module*/
  function receiveInstance(instance, module) {
    wasmExports = instance.exports;

    

    wasmMemory = wasmExports['memory'];
    
    assert(wasmMemory, 'memory not found in wasm exports');
    updateMemoryViews();

    wasmTable = wasmExports['__indirect_function_table'];
    
    assert(wasmTable, 'table not found in wasm exports');

    assignWasmExports(wasmExports);
    removeRunDependency('wasm-instantiate');
    return wasmExports;
  }
  // wait for the pthread pool (if any)
  addRunDependency('wasm-instantiate');

  // Prefer streaming instantiation if available.
  // Async compilation can be confusing when an error on the page overwrites Module
  // (for example, if the order of elements is wrong, and the one defining Module is
  // later), so we save Module and check it later.
  var trueModule = Module;
  function receiveInstantiationResult(result) {
    // 'result' is a ResultObject object which has both the module and instance.
    // receiveInstance() will swap in the exports (to Module.asm) so they can be called
    assert(Module === trueModule, 'the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?');
    trueModule = null;
    // TODO: Due to Closure regression https://github.com/google/closure-compiler/issues/3193, the above line no longer optimizes out down to the following line.
    // When the regression is fixed, can restore the above PTHREADS-enabled path.
    return receiveInstance(result['instance']);
  }

  var info = getWasmImports();

  // User shell pages can write their own Module.instantiateWasm = function(imports, successCallback) callback
  // to manually instantiate the Wasm module themselves. This allows pages to
  // run the instantiation parallel to any other async startup actions they are
  // performing.
  // Also pthreads and wasm workers initialize the wasm instance through this
  // path.
  if (Module['instantiateWasm']) {
    return new Promise((resolve, reject) => {
      try {
        Module['instantiateWasm'](info, (mod, inst) => {
          resolve(receiveInstance(mod, inst));
        });
      } catch(e) {
        err(`Module.instantiateWasm callback failed with error: ${e}`);
        reject(e);
      }
    });
  }

  wasmBinaryFile ??= findWasmBinary();
  var result = await instantiateAsync(wasmBinary, wasmBinaryFile, info);
  var exports = receiveInstantiationResult(result);
  return exports;
}

// end include: preamble.js

// Begin JS library code


  class ExitStatus {
      name = 'ExitStatus';
      constructor(status) {
        this.message = `Program terminated with exit(${status})`;
        this.status = status;
      }
    }

  var callRuntimeCallbacks = (callbacks) => {
      while (callbacks.length > 0) {
        // Pass the module as the first argument.
        callbacks.shift()(Module);
      }
    };
  var onPostRuns = [];
  var addOnPostRun = (cb) => onPostRuns.push(cb);

  var onPreRuns = [];
  var addOnPreRun = (cb) => onPreRuns.push(cb);


  
    /**
     * @param {number} ptr
     * @param {string} type
     */
  function getValue(ptr, type = 'i8') {
    if (type.endsWith('*')) type = '*';
    switch (type) {
      case 'i1': return HEAP8[ptr];
      case 'i8': return HEAP8[ptr];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP64[((ptr)>>3)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      case '*': return HEAPU32[((ptr)>>2)];
      default: abort(`invalid type for getValue: ${type}`);
    }
  }

  var noExitRuntime = true;

  var ptrToString = (ptr) => {
      assert(typeof ptr === 'number');
      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.
      ptr >>>= 0;
      return '0x' + ptr.toString(16).padStart(8, '0');
    };

  
    /**
     * @param {number} ptr
     * @param {number} value
     * @param {string} type
     */
  function setValue(ptr, value, type = 'i8') {
    if (type.endsWith('*')) type = '*';
    switch (type) {
      case 'i1': HEAP8[ptr] = value; break;
      case 'i8': HEAP8[ptr] = value; break;
      case 'i16': HEAP16[((ptr)>>1)] = value; break;
      case 'i32': HEAP32[((ptr)>>2)] = value; break;
      case 'i64': HEAP64[((ptr)>>3)] = BigInt(value); break;
      case 'float': HEAPF32[((ptr)>>2)] = value; break;
      case 'double': HEAPF64[((ptr)>>3)] = value; break;
      case '*': HEAPU32[((ptr)>>2)] = value; break;
      default: abort(`invalid type for setValue: ${type}`);
    }
  }

  var stackRestore = (val) => __emscripten_stack_restore(val);

  var stackSave = () => _emscripten_stack_get_current();

  var warnOnce = (text) => {
      warnOnce.shown ||= {};
      if (!warnOnce.shown[text]) {
        warnOnce.shown[text] = 1;
        if (ENVIRONMENT_IS_NODE) text = 'warning: ' + text;
        err(text);
      }
    };

  var UTF8Decoder = typeof TextDecoder != 'undefined' ? new TextDecoder() : undefined;
  
    /**
     * Given a pointer 'idx' to a null-terminated UTF8-encoded string in the given
     * array that contains uint8 values, returns a copy of that string as a
     * Javascript String object.
     * heapOrArray is either a regular array, or a JavaScript typed array view.
     * @param {number=} idx
     * @param {number=} maxBytesToRead
     * @return {string}
     */
  var UTF8ArrayToString = (heapOrArray, idx = 0, maxBytesToRead = NaN) => {
      var endIdx = idx + maxBytesToRead;
      var endPtr = idx;
      // TextDecoder needs to know the byte length in advance, it doesn't stop on
      // null terminator by itself.  Also, use the length info to avoid running tiny
      // strings through TextDecoder, since .subarray() allocates garbage.
      // (As a tiny code save trick, compare endPtr against endIdx using a negation,
      // so that undefined/NaN means Infinity)
      while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;
  
      // When using conditional TextDecoder, skip it for short strings as the overhead of the native call is not worth it.
      if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {
        return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));
      }
      var str = '';
      // If building with TextDecoder, we have already computed the string length
      // above, so test loop end condition against that
      while (idx < endPtr) {
        // For UTF8 byte structure, see:
        // http://en.wikipedia.org/wiki/UTF-8#Description
        // https://www.ietf.org/rfc/rfc2279.txt
        // https://tools.ietf.org/html/rfc3629
        var u0 = heapOrArray[idx++];
        if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
        var u1 = heapOrArray[idx++] & 63;
        if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
        var u2 = heapOrArray[idx++] & 63;
        if ((u0 & 0xF0) == 0xE0) {
          u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
        } else {
          if ((u0 & 0xF8) != 0xF0) warnOnce('Invalid UTF-8 leading byte ' + ptrToString(u0) + ' encountered when deserializing a UTF-8 string in wasm memory to a JS string!');
          u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | (heapOrArray[idx++] & 63);
        }
  
        if (u0 < 0x10000) {
          str += String.fromCharCode(u0);
        } else {
          var ch = u0 - 0x10000;
          str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
        }
      }
      return str;
    };
  
    /**
     * Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the
     * emscripten HEAP, returns a copy of that string as a Javascript String object.
     *
     * @param {number} ptr
     * @param {number=} maxBytesToRead - An optional length that specifies the
     *   maximum number of bytes to read. You can omit this parameter to scan the
     *   string until the first 0 byte. If maxBytesToRead is passed, and the string
     *   at [ptr, ptr+maxBytesToReadr[ contains a null byte in the middle, then the
     *   string will cut short at that byte index (i.e. maxBytesToRead will not
     *   produce a string of exact length [ptr, ptr+maxBytesToRead[) N.B. mixing
     *   frequent uses of UTF8ToString() with and without maxBytesToRead may throw
     *   JS JIT optimizations off, so it is worth to consider consistently using one
     * @return {string}
     */
  var UTF8ToString = (ptr, maxBytesToRead) => {
      assert(typeof ptr == 'number', `UTF8ToString expects a number (got ${typeof ptr})`);
      return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : '';
    };
  var ___assert_fail = (condition, filename, line, func) =>
      abort(`Assertion failed: ${UTF8ToString(condition)}, at: ` + [filename ? UTF8ToString(filename) : 'unknown filename', line, func ? UTF8ToString(func) : 'unknown function']);

  var exceptionCaught =  [];
  
  
  
  var uncaughtExceptionCount = 0;
  var ___cxa_begin_catch = (ptr) => {
      var info = new ExceptionInfo(ptr);
      if (!info.get_caught()) {
        info.set_caught(true);
        uncaughtExceptionCount--;
      }
      info.set_rethrown(false);
      exceptionCaught.push(info);
      ___cxa_increment_exception_refcount(ptr);
      return ___cxa_get_exception_ptr(ptr);
    };

  var exceptionLast = 0;
  
  class ExceptionInfo {
      // excPtr - Thrown object pointer to wrap. Metadata pointer is calculated from it.
      constructor(excPtr) {
        this.excPtr = excPtr;
        this.ptr = excPtr - 24;
      }
  
      set_type(type) {
        HEAPU32[(((this.ptr)+(4))>>2)] = type;
      }
  
      get_type() {
        return HEAPU32[(((this.ptr)+(4))>>2)];
      }
  
      set_destructor(destructor) {
        HEAPU32[(((this.ptr)+(8))>>2)] = destructor;
      }
  
      get_destructor() {
        return HEAPU32[(((this.ptr)+(8))>>2)];
      }
  
      set_caught(caught) {
        caught = caught ? 1 : 0;
        HEAP8[(this.ptr)+(12)] = caught;
      }
  
      get_caught() {
        return HEAP8[(this.ptr)+(12)] != 0;
      }
  
      set_rethrown(rethrown) {
        rethrown = rethrown ? 1 : 0;
        HEAP8[(this.ptr)+(13)] = rethrown;
      }
  
      get_rethrown() {
        return HEAP8[(this.ptr)+(13)] != 0;
      }
  
      // Initialize native structure fields. Should be called once after allocated.
      init(type, destructor) {
        this.set_adjusted_ptr(0);
        this.set_type(type);
        this.set_destructor(destructor);
      }
  
      set_adjusted_ptr(adjustedPtr) {
        HEAPU32[(((this.ptr)+(16))>>2)] = adjustedPtr;
      }
  
      get_adjusted_ptr() {
        return HEAPU32[(((this.ptr)+(16))>>2)];
      }
    }
  
  
  var setTempRet0 = (val) => __emscripten_tempret_set(val);
  var findMatchingCatch = (args) => {
      var thrown =
        exceptionLast?.excPtr;
      if (!thrown) {
        // just pass through the null ptr
        setTempRet0(0);
        return 0;
      }
      var info = new ExceptionInfo(thrown);
      info.set_adjusted_ptr(thrown);
      var thrownType = info.get_type();
      if (!thrownType) {
        // just pass through the thrown ptr
        setTempRet0(0);
        return thrown;
      }
  
      // can_catch receives a **, add indirection
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var caughtType of args) {
        if (caughtType === 0 || caughtType === thrownType) {
          // Catch all clause matched or exactly the same type is caught
          break;
        }
        var adjusted_ptr_addr = info.ptr + 16;
        if (___cxa_can_catch(caughtType, thrownType, adjusted_ptr_addr)) {
          setTempRet0(caughtType);
          return thrown;
        }
      }
      setTempRet0(thrownType);
      return thrown;
    };
  var ___cxa_find_matching_catch_2 = () => findMatchingCatch([]);

  var ___cxa_find_matching_catch_3 = (arg0) => findMatchingCatch([arg0]);

  
  
  var ___cxa_throw = (ptr, type, destructor) => {
      var info = new ExceptionInfo(ptr);
      // Initialize ExceptionInfo content after it was allocated in __cxa_allocate_exception.
      info.init(type, destructor);
      exceptionLast = new CppException(ptr);
      uncaughtExceptionCount++;
      throw exceptionLast;
    };

  var ___resumeException = (ptr) => {
      if (!exceptionLast) {
        exceptionLast = new CppException(ptr);
      }
      throw exceptionLast;
    };

  /** @suppress {duplicate } */
  var syscallGetVarargI = () => {
      assert(SYSCALLS.varargs != undefined);
      // the `+` prepended here is necessary to convince the JSCompiler that varargs is indeed a number.
      var ret = HEAP32[((+SYSCALLS.varargs)>>2)];
      SYSCALLS.varargs += 4;
      return ret;
    };
  var syscallGetVarargP = syscallGetVarargI;
  
  
  var PATH = {
  isAbs:(path) => path.charAt(0) === '/',
  splitPath:(filename) => {
        var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
        return splitPathRe.exec(filename).slice(1);
      },
  normalizeArray:(parts, allowAboveRoot) => {
        // if the path tries to go above the root, `up` ends up > 0
        var up = 0;
        for (var i = parts.length - 1; i >= 0; i--) {
          var last = parts[i];
          if (last === '.') {
            parts.splice(i, 1);
          } else if (last === '..') {
            parts.splice(i, 1);
            up++;
          } else if (up) {
            parts.splice(i, 1);
            up--;
          }
        }
        // if the path is allowed to go above the root, restore leading ..s
        if (allowAboveRoot) {
          for (; up; up--) {
            parts.unshift('..');
          }
        }
        return parts;
      },
  normalize:(path) => {
        var isAbsolute = PATH.isAbs(path),
            trailingSlash = path.slice(-1) === '/';
        // Normalize the path
        path = PATH.normalizeArray(path.split('/').filter((p) => !!p), !isAbsolute).join('/');
        if (!path && !isAbsolute) {
          path = '.';
        }
        if (path && trailingSlash) {
          path += '/';
        }
        return (isAbsolute ? '/' : '') + path;
      },
  dirname:(path) => {
        var result = PATH.splitPath(path),
            root = result[0],
            dir = result[1];
        if (!root && !dir) {
          // No dirname whatsoever
          return '.';
        }
        if (dir) {
          // It has a dirname, strip trailing slash
          dir = dir.slice(0, -1);
        }
        return root + dir;
      },
  basename:(path) => path && path.match(/([^\/]+|\/)\/*$/)[1],
  join:(...paths) => PATH.normalize(paths.join('/')),
  join2:(l, r) => PATH.normalize(l + '/' + r),
  };
  
  var initRandomFill = () => {
      // This block is not needed on v19+ since crypto.getRandomValues is builtin
      if (ENVIRONMENT_IS_NODE) {
        var nodeCrypto = require('crypto');
        return (view) => nodeCrypto.randomFillSync(view);
      }
  
      return (view) => crypto.getRandomValues(view);
    };
  var randomFill = (view) => {
      // Lazily init on the first invocation.
      (randomFill = initRandomFill())(view);
    };
  
  
  
  var PATH_FS = {
  resolve:(...args) => {
        var resolvedPath = '',
          resolvedAbsolute = false;
        for (var i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {
          var path = (i >= 0) ? args[i] : FS.cwd();
          // Skip empty and invalid entries
          if (typeof path != 'string') {
            throw new TypeError('Arguments to path.resolve must be strings');
          } else if (!path) {
            return ''; // an invalid portion invalidates the whole thing
          }
          resolvedPath = path + '/' + resolvedPath;
          resolvedAbsolute = PATH.isAbs(path);
        }
        // At this point the path should be resolved to a full absolute path, but
        // handle relative paths to be safe (might happen when process.cwd() fails)
        resolvedPath = PATH.normalizeArray(resolvedPath.split('/').filter((p) => !!p), !resolvedAbsolute).join('/');
        return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
      },
  relative:(from, to) => {
        from = PATH_FS.resolve(from).slice(1);
        to = PATH_FS.resolve(to).slice(1);
        function trim(arr) {
          var start = 0;
          for (; start < arr.length; start++) {
            if (arr[start] !== '') break;
          }
          var end = arr.length - 1;
          for (; end >= 0; end--) {
            if (arr[end] !== '') break;
          }
          if (start > end) return [];
          return arr.slice(start, end - start + 1);
        }
        var fromParts = trim(from.split('/'));
        var toParts = trim(to.split('/'));
        var length = Math.min(fromParts.length, toParts.length);
        var samePartsLength = length;
        for (var i = 0; i < length; i++) {
          if (fromParts[i] !== toParts[i]) {
            samePartsLength = i;
            break;
          }
        }
        var outputParts = [];
        for (var i = samePartsLength; i < fromParts.length; i++) {
          outputParts.push('..');
        }
        outputParts = outputParts.concat(toParts.slice(samePartsLength));
        return outputParts.join('/');
      },
  };
  
  
  
  var FS_stdin_getChar_buffer = [];
  
  var lengthBytesUTF8 = (str) => {
      var len = 0;
      for (var i = 0; i < str.length; ++i) {
        // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code
        // unit, not a Unicode code point of the character! So decode
        // UTF16->UTF32->UTF8.
        // See http://unicode.org/faq/utf_bom.html#utf16-3
        var c = str.charCodeAt(i); // possibly a lead surrogate
        if (c <= 0x7F) {
          len++;
        } else if (c <= 0x7FF) {
          len += 2;
        } else if (c >= 0xD800 && c <= 0xDFFF) {
          len += 4; ++i;
        } else {
          len += 3;
        }
      }
      return len;
    };
  
  var stringToUTF8Array = (str, heap, outIdx, maxBytesToWrite) => {
      assert(typeof str === 'string', `stringToUTF8Array expects a string (got ${typeof str})`);
      // Parameter maxBytesToWrite is not optional. Negative values, 0, null,
      // undefined and false each don't write out any bytes.
      if (!(maxBytesToWrite > 0))
        return 0;
  
      var startIdx = outIdx;
      var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
      for (var i = 0; i < str.length; ++i) {
        // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description
        // and https://www.ietf.org/rfc/rfc2279.txt
        // and https://tools.ietf.org/html/rfc3629
        var u = str.codePointAt(i);
        if (u <= 0x7F) {
          if (outIdx >= endIdx) break;
          heap[outIdx++] = u;
        } else if (u <= 0x7FF) {
          if (outIdx + 1 >= endIdx) break;
          heap[outIdx++] = 0xC0 | (u >> 6);
          heap[outIdx++] = 0x80 | (u & 63);
        } else if (u <= 0xFFFF) {
          if (outIdx + 2 >= endIdx) break;
          heap[outIdx++] = 0xE0 | (u >> 12);
          heap[outIdx++] = 0x80 | ((u >> 6) & 63);
          heap[outIdx++] = 0x80 | (u & 63);
        } else {
          if (outIdx + 3 >= endIdx) break;
          if (u > 0x10FFFF) warnOnce('Invalid Unicode code point ' + ptrToString(u) + ' encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF).');
          heap[outIdx++] = 0xF0 | (u >> 18);
          heap[outIdx++] = 0x80 | ((u >> 12) & 63);
          heap[outIdx++] = 0x80 | ((u >> 6) & 63);
          heap[outIdx++] = 0x80 | (u & 63);
          // Gotcha: if codePoint is over 0xFFFF, it is represented as a surrogate pair in UTF-16.
          // We need to manually skip over the second code unit for correct iteration.
          i++;
        }
      }
      // Null-terminate the pointer to the buffer.
      heap[outIdx] = 0;
      return outIdx - startIdx;
    };
  /** @type {function(string, boolean=, number=)} */
  var intArrayFromString = (stringy, dontAddNull, length) => {
      var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
      var u8array = new Array(len);
      var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
      if (dontAddNull) u8array.length = numBytesWritten;
      return u8array;
    };
  var FS_stdin_getChar = () => {
      if (!FS_stdin_getChar_buffer.length) {
        var result = null;
        if (ENVIRONMENT_IS_NODE) {
          // we will read data by chunks of BUFSIZE
          var BUFSIZE = 256;
          var buf = Buffer.alloc(BUFSIZE);
          var bytesRead = 0;
  
          // For some reason we must suppress a closure warning here, even though
          // fd definitely exists on process.stdin, and is even the proper way to
          // get the fd of stdin,
          // https://github.com/nodejs/help/issues/2136#issuecomment-523649904
          // This started to happen after moving this logic out of library_tty.js,
          // so it is related to the surrounding code in some unclear manner.
          /** @suppress {missingProperties} */
          var fd = process.stdin.fd;
  
          try {
            bytesRead = fs.readSync(fd, buf, 0, BUFSIZE);
          } catch(e) {
            // Cross-platform differences: on Windows, reading EOF throws an
            // exception, but on other OSes, reading EOF returns 0. Uniformize
            // behavior by treating the EOF exception to return 0.
            if (e.toString().includes('EOF')) bytesRead = 0;
            else throw e;
          }
  
          if (bytesRead > 0) {
            result = buf.slice(0, bytesRead).toString('utf-8');
          }
        } else
        if (typeof window != 'undefined' &&
          typeof window.prompt == 'function') {
          // Browser.
          result = window.prompt('Input: ');  // returns null on cancel
          if (result !== null) {
            result += '\n';
          }
        } else
        {}
        if (!result) {
          return null;
        }
        FS_stdin_getChar_buffer = intArrayFromString(result, true);
      }
      return FS_stdin_getChar_buffer.shift();
    };
  var TTY = {
  ttys:[],
  init() {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // currently, FS.init does not distinguish if process.stdin is a file or TTY
        //   // device, it always assumes it's a TTY device. because of this, we're forcing
        //   // process.stdin to UTF8 encoding to at least make stdin reading compatible
        //   // with text files until FS.init can be refactored.
        //   process.stdin.setEncoding('utf8');
        // }
      },
  shutdown() {
        // https://github.com/emscripten-core/emscripten/pull/1555
        // if (ENVIRONMENT_IS_NODE) {
        //   // inolen: any idea as to why node -e 'process.stdin.read()' wouldn't exit immediately (with process.stdin being a tty)?
        //   // isaacs: because now it's reading from the stream, you've expressed interest in it, so that read() kicks off a _read() which creates a ReadReq operation
        //   // inolen: I thought read() in that case was a synchronous operation that just grabbed some amount of buffered data if it exists?
        //   // isaacs: it is. but it also triggers a _read() call, which calls readStart() on the handle
        //   // isaacs: do process.stdin.pause() and i'd think it'd probably close the pending call
        //   process.stdin.pause();
        // }
      },
  register(dev, ops) {
        TTY.ttys[dev] = { input: [], output: [], ops: ops };
        FS.registerDevice(dev, TTY.stream_ops);
      },
  stream_ops:{
  open(stream) {
          var tty = TTY.ttys[stream.node.rdev];
          if (!tty) {
            throw new FS.ErrnoError(43);
          }
          stream.tty = tty;
          stream.seekable = false;
        },
  close(stream) {
          // flush any pending line data
          stream.tty.ops.fsync(stream.tty);
        },
  fsync(stream) {
          stream.tty.ops.fsync(stream.tty);
        },
  read(stream, buffer, offset, length, pos /* ignored */) {
          if (!stream.tty || !stream.tty.ops.get_char) {
            throw new FS.ErrnoError(60);
          }
          var bytesRead = 0;
          for (var i = 0; i < length; i++) {
            var result;
            try {
              result = stream.tty.ops.get_char(stream.tty);
            } catch (e) {
              throw new FS.ErrnoError(29);
            }
            if (result === undefined && bytesRead === 0) {
              throw new FS.ErrnoError(6);
            }
            if (result === null || result === undefined) break;
            bytesRead++;
            buffer[offset+i] = result;
          }
          if (bytesRead) {
            stream.node.atime = Date.now();
          }
          return bytesRead;
        },
  write(stream, buffer, offset, length, pos) {
          if (!stream.tty || !stream.tty.ops.put_char) {
            throw new FS.ErrnoError(60);
          }
          try {
            for (var i = 0; i < length; i++) {
              stream.tty.ops.put_char(stream.tty, buffer[offset+i]);
            }
          } catch (e) {
            throw new FS.ErrnoError(29);
          }
          if (length) {
            stream.node.mtime = stream.node.ctime = Date.now();
          }
          return i;
        },
  },
  default_tty_ops:{
  get_char(tty) {
          return FS_stdin_getChar();
        },
  put_char(tty, val) {
          if (val === null || val === 10) {
            out(UTF8ArrayToString(tty.output));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val); // val == 0 would cut text output off in the middle.
          }
        },
  fsync(tty) {
          if (tty.output?.length > 0) {
            out(UTF8ArrayToString(tty.output));
            tty.output = [];
          }
        },
  ioctl_tcgets(tty) {
          // typical setting
          return {
            c_iflag: 25856,
            c_oflag: 5,
            c_cflag: 191,
            c_lflag: 35387,
            c_cc: [
              0x03, 0x1c, 0x7f, 0x15, 0x04, 0x00, 0x01, 0x00, 0x11, 0x13, 0x1a, 0x00,
              0x12, 0x0f, 0x17, 0x16, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
              0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            ]
          };
        },
  ioctl_tcsets(tty, optional_actions, data) {
          // currently just ignore
          return 0;
        },
  ioctl_tiocgwinsz(tty) {
          return [24, 80];
        },
  },
  default_tty1_ops:{
  put_char(tty, val) {
          if (val === null || val === 10) {
            err(UTF8ArrayToString(tty.output));
            tty.output = [];
          } else {
            if (val != 0) tty.output.push(val);
          }
        },
  fsync(tty) {
          if (tty.output?.length > 0) {
            err(UTF8ArrayToString(tty.output));
            tty.output = [];
          }
        },
  },
  };
  
  
  var mmapAlloc = (size) => {
      abort('internal error: mmapAlloc called but `emscripten_builtin_memalign` native symbol not exported');
    };
  var MEMFS = {
  ops_table:null,
  mount(mount) {
        return MEMFS.createNode(null, '/', 16895, 0);
      },
  createNode(parent, name, mode, dev) {
        if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
          // no supported
          throw new FS.ErrnoError(63);
        }
        MEMFS.ops_table ||= {
          dir: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr,
              lookup: MEMFS.node_ops.lookup,
              mknod: MEMFS.node_ops.mknod,
              rename: MEMFS.node_ops.rename,
              unlink: MEMFS.node_ops.unlink,
              rmdir: MEMFS.node_ops.rmdir,
              readdir: MEMFS.node_ops.readdir,
              symlink: MEMFS.node_ops.symlink
            },
            stream: {
              llseek: MEMFS.stream_ops.llseek
            }
          },
          file: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr
            },
            stream: {
              llseek: MEMFS.stream_ops.llseek,
              read: MEMFS.stream_ops.read,
              write: MEMFS.stream_ops.write,
              mmap: MEMFS.stream_ops.mmap,
              msync: MEMFS.stream_ops.msync
            }
          },
          link: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr,
              readlink: MEMFS.node_ops.readlink
            },
            stream: {}
          },
          chrdev: {
            node: {
              getattr: MEMFS.node_ops.getattr,
              setattr: MEMFS.node_ops.setattr
            },
            stream: FS.chrdev_stream_ops
          }
        };
        var node = FS.createNode(parent, name, mode, dev);
        if (FS.isDir(node.mode)) {
          node.node_ops = MEMFS.ops_table.dir.node;
          node.stream_ops = MEMFS.ops_table.dir.stream;
          node.contents = {};
        } else if (FS.isFile(node.mode)) {
          node.node_ops = MEMFS.ops_table.file.node;
          node.stream_ops = MEMFS.ops_table.file.stream;
          node.usedBytes = 0; // The actual number of bytes used in the typed array, as opposed to contents.length which gives the whole capacity.
          // When the byte data of the file is populated, this will point to either a typed array, or a normal JS array. Typed arrays are preferred
          // for performance, and used by default. However, typed arrays are not resizable like normal JS arrays are, so there is a small disk size
          // penalty involved for appending file writes that continuously grow a file similar to std::vector capacity vs used -scheme.
          node.contents = null; 
        } else if (FS.isLink(node.mode)) {
          node.node_ops = MEMFS.ops_table.link.node;
          node.stream_ops = MEMFS.ops_table.link.stream;
        } else if (FS.isChrdev(node.mode)) {
          node.node_ops = MEMFS.ops_table.chrdev.node;
          node.stream_ops = MEMFS.ops_table.chrdev.stream;
        }
        node.atime = node.mtime = node.ctime = Date.now();
        // add the new node to the parent
        if (parent) {
          parent.contents[name] = node;
          parent.atime = parent.mtime = parent.ctime = node.atime;
        }
        return node;
      },
  getFileDataAsTypedArray(node) {
        if (!node.contents) return new Uint8Array(0);
        if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes); // Make sure to not return excess unused bytes.
        return new Uint8Array(node.contents);
      },
  expandFileStorage(node, newCapacity) {
        var prevCapacity = node.contents ? node.contents.length : 0;
        if (prevCapacity >= newCapacity) return; // No need to expand, the storage was already large enough.
        // Don't expand strictly to the given requested limit if it's only a very small increase, but instead geometrically grow capacity.
        // For small filesizes (<1MB), perform size*2 geometric increase, but for large sizes, do a much more conservative size*1.125 increase to
        // avoid overshooting the allocation cap by a very large margin.
        var CAPACITY_DOUBLING_MAX = 1024 * 1024;
        newCapacity = Math.max(newCapacity, (prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2.0 : 1.125)) >>> 0);
        if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256); // At minimum allocate 256b for each file when expanding.
        var oldContents = node.contents;
        node.contents = new Uint8Array(newCapacity); // Allocate new storage.
        if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0); // Copy old data over to the new storage.
      },
  resizeFileStorage(node, newSize) {
        if (node.usedBytes == newSize) return;
        if (newSize == 0) {
          node.contents = null; // Fully decommit when requesting a resize to zero.
          node.usedBytes = 0;
        } else {
          var oldContents = node.contents;
          node.contents = new Uint8Array(newSize); // Allocate new storage.
          if (oldContents) {
            node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes))); // Copy old data over to the new storage.
          }
          node.usedBytes = newSize;
        }
      },
  node_ops:{
  getattr(node) {
          var attr = {};
          // device numbers reuse inode numbers.
          attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
          attr.ino = node.id;
          attr.mode = node.mode;
          attr.nlink = 1;
          attr.uid = 0;
          attr.gid = 0;
          attr.rdev = node.rdev;
          if (FS.isDir(node.mode)) {
            attr.size = 4096;
          } else if (FS.isFile(node.mode)) {
            attr.size = node.usedBytes;
          } else if (FS.isLink(node.mode)) {
            attr.size = node.link.length;
          } else {
            attr.size = 0;
          }
          attr.atime = new Date(node.atime);
          attr.mtime = new Date(node.mtime);
          attr.ctime = new Date(node.ctime);
          // NOTE: In our implementation, st_blocks = Math.ceil(st_size/st_blksize),
          //       but this is not required by the standard.
          attr.blksize = 4096;
          attr.blocks = Math.ceil(attr.size / attr.blksize);
          return attr;
        },
  setattr(node, attr) {
          for (const key of ["mode", "atime", "mtime", "ctime"]) {
            if (attr[key] != null) {
              node[key] = attr[key];
            }
          }
          if (attr.size !== undefined) {
            MEMFS.resizeFileStorage(node, attr.size);
          }
        },
  lookup(parent, name) {
          throw new FS.ErrnoError(44);
        },
  mknod(parent, name, mode, dev) {
          return MEMFS.createNode(parent, name, mode, dev);
        },
  rename(old_node, new_dir, new_name) {
          var new_node;
          try {
            new_node = FS.lookupNode(new_dir, new_name);
          } catch (e) {}
          if (new_node) {
            if (FS.isDir(old_node.mode)) {
              // if we're overwriting a directory at new_name, make sure it's empty.
              for (var i in new_node.contents) {
                throw new FS.ErrnoError(55);
              }
            }
            FS.hashRemoveNode(new_node);
          }
          // do the internal rewiring
          delete old_node.parent.contents[old_node.name];
          new_dir.contents[new_name] = old_node;
          old_node.name = new_name;
          new_dir.ctime = new_dir.mtime = old_node.parent.ctime = old_node.parent.mtime = Date.now();
        },
  unlink(parent, name) {
          delete parent.contents[name];
          parent.ctime = parent.mtime = Date.now();
        },
  rmdir(parent, name) {
          var node = FS.lookupNode(parent, name);
          for (var i in node.contents) {
            throw new FS.ErrnoError(55);
          }
          delete parent.contents[name];
          parent.ctime = parent.mtime = Date.now();
        },
  readdir(node) {
          return ['.', '..', ...Object.keys(node.contents)];
        },
  symlink(parent, newname, oldpath) {
          var node = MEMFS.createNode(parent, newname, 0o777 | 40960, 0);
          node.link = oldpath;
          return node;
        },
  readlink(node) {
          if (!FS.isLink(node.mode)) {
            throw new FS.ErrnoError(28);
          }
          return node.link;
        },
  },
  stream_ops:{
  read(stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= stream.node.usedBytes) return 0;
          var size = Math.min(stream.node.usedBytes - position, length);
          assert(size >= 0);
          if (size > 8 && contents.subarray) { // non-trivial, and typed array
            buffer.set(contents.subarray(position, position + size), offset);
          } else {
            for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
          }
          return size;
        },
  write(stream, buffer, offset, length, position, canOwn) {
          // The data buffer should be a typed array view
          assert(!(buffer instanceof ArrayBuffer));
          // If the buffer is located in main memory (HEAP), and if
          // memory can grow, we can't hold on to references of the
          // memory buffer, as they may get invalidated. That means we
          // need to do copy its contents.
          if (buffer.buffer === HEAP8.buffer) {
            canOwn = false;
          }
  
          if (!length) return 0;
          var node = stream.node;
          node.mtime = node.ctime = Date.now();
  
          if (buffer.subarray && (!node.contents || node.contents.subarray)) { // This write is from a typed array to a typed array?
            if (canOwn) {
              assert(position === 0, 'canOwn must imply no weird position inside the file');
              node.contents = buffer.subarray(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (node.usedBytes === 0 && position === 0) { // If this is a simple first write to an empty file, do a fast set since we don't need to care about old data.
              node.contents = buffer.slice(offset, offset + length);
              node.usedBytes = length;
              return length;
            } else if (position + length <= node.usedBytes) { // Writing to an already allocated and used subrange of the file?
              node.contents.set(buffer.subarray(offset, offset + length), position);
              return length;
            }
          }
  
          // Appending to an existing file and we need to reallocate, or source data did not come as a typed array.
          MEMFS.expandFileStorage(node, position+length);
          if (node.contents.subarray && buffer.subarray) {
            // Use typed array write which is available.
            node.contents.set(buffer.subarray(offset, offset + length), position);
          } else {
            for (var i = 0; i < length; i++) {
             node.contents[position + i] = buffer[offset + i]; // Or fall back to manual write if not.
            }
          }
          node.usedBytes = Math.max(node.usedBytes, position + length);
          return length;
        },
  llseek(stream, offset, whence) {
          var position = offset;
          if (whence === 1) {
            position += stream.position;
          } else if (whence === 2) {
            if (FS.isFile(stream.node.mode)) {
              position += stream.node.usedBytes;
            }
          }
          if (position < 0) {
            throw new FS.ErrnoError(28);
          }
          return position;
        },
  mmap(stream, length, position, prot, flags) {
          if (!FS.isFile(stream.node.mode)) {
            throw new FS.ErrnoError(43);
          }
          var ptr;
          var allocated;
          var contents = stream.node.contents;
          // Only make a new copy when MAP_PRIVATE is specified.
          if (!(flags & 2) && contents && contents.buffer === HEAP8.buffer) {
            // We can't emulate MAP_SHARED when the file is not backed by the
            // buffer we're mapping to (e.g. the HEAP buffer).
            allocated = false;
            ptr = contents.byteOffset;
          } else {
            allocated = true;
            ptr = mmapAlloc(length);
            if (!ptr) {
              throw new FS.ErrnoError(48);
            }
            if (contents) {
              // Try to avoid unnecessary slices.
              if (position > 0 || position + length < contents.length) {
                if (contents.subarray) {
                  contents = contents.subarray(position, position + length);
                } else {
                  contents = Array.prototype.slice.call(contents, position, position + length);
                }
              }
              HEAP8.set(contents, ptr);
            }
          }
          return { ptr, allocated };
        },
  msync(stream, buffer, offset, length, mmapFlags) {
          MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
          // should we check if bytesWritten and length are the same?
          return 0;
        },
  },
  };
  
  var asyncLoad = async (url) => {
      var arrayBuffer = await readAsync(url);
      assert(arrayBuffer, `Loading data file "${url}" failed (no arrayBuffer).`);
      return new Uint8Array(arrayBuffer);
    };
  
  
  var FS_createDataFile = (...args) => FS.createDataFile(...args);
  
  var getUniqueRunDependency = (id) => {
      var orig = id;
      while (1) {
        if (!runDependencyTracking[id]) return id;
        id = orig + Math.random();
      }
    };
  
  var preloadPlugins = [];
  var FS_handledByPreloadPlugin = (byteArray, fullname, finish, onerror) => {
      // Ensure plugins are ready.
      if (typeof Browser != 'undefined') Browser.init();
  
      var handled = false;
      preloadPlugins.forEach((plugin) => {
        if (handled) return;
        if (plugin['canHandle'](fullname)) {
          plugin['handle'](byteArray, fullname, finish, onerror);
          handled = true;
        }
      });
      return handled;
    };
  var FS_createPreloadedFile = (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) => {
      // TODO we should allow people to just pass in a complete filename instead
      // of parent and name being that we just join them anyways
      var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;
      var dep = getUniqueRunDependency(`cp ${fullname}`); // might have several active requests for the same fullname
      function processData(byteArray) {
        function finish(byteArray) {
          preFinish?.();
          if (!dontCreateFile) {
            FS_createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
          }
          onload?.();
          removeRunDependency(dep);
        }
        if (FS_handledByPreloadPlugin(byteArray, fullname, finish, () => {
          onerror?.();
          removeRunDependency(dep);
        })) {
          return;
        }
        finish(byteArray);
      }
      addRunDependency(dep);
      if (typeof url == 'string') {
        asyncLoad(url).then(processData, onerror);
      } else {
        processData(url);
      }
    };
  
  var FS_modeStringToFlags = (str) => {
      var flagModes = {
        'r': 0,
        'r+': 2,
        'w': 512 | 64 | 1,
        'w+': 512 | 64 | 2,
        'a': 1024 | 64 | 1,
        'a+': 1024 | 64 | 2,
      };
      var flags = flagModes[str];
      if (typeof flags == 'undefined') {
        throw new Error(`Unknown file open mode: ${str}`);
      }
      return flags;
    };
  
  var FS_getMode = (canRead, canWrite) => {
      var mode = 0;
      if (canRead) mode |= 292 | 73;
      if (canWrite) mode |= 146;
      return mode;
    };
  
  
  
  
  var strError = (errno) => UTF8ToString(_strerror(errno));
  
  var ERRNO_CODES = {
      'EPERM': 63,
      'ENOENT': 44,
      'ESRCH': 71,
      'EINTR': 27,
      'EIO': 29,
      'ENXIO': 60,
      'E2BIG': 1,
      'ENOEXEC': 45,
      'EBADF': 8,
      'ECHILD': 12,
      'EAGAIN': 6,
      'EWOULDBLOCK': 6,
      'ENOMEM': 48,
      'EACCES': 2,
      'EFAULT': 21,
      'ENOTBLK': 105,
      'EBUSY': 10,
      'EEXIST': 20,
      'EXDEV': 75,
      'ENODEV': 43,
      'ENOTDIR': 54,
      'EISDIR': 31,
      'EINVAL': 28,
      'ENFILE': 41,
      'EMFILE': 33,
      'ENOTTY': 59,
      'ETXTBSY': 74,
      'EFBIG': 22,
      'ENOSPC': 51,
      'ESPIPE': 70,
      'EROFS': 69,
      'EMLINK': 34,
      'EPIPE': 64,
      'EDOM': 18,
      'ERANGE': 68,
      'ENOMSG': 49,
      'EIDRM': 24,
      'ECHRNG': 106,
      'EL2NSYNC': 156,
      'EL3HLT': 107,
      'EL3RST': 108,
      'ELNRNG': 109,
      'EUNATCH': 110,
      'ENOCSI': 111,
      'EL2HLT': 112,
      'EDEADLK': 16,
      'ENOLCK': 46,
      'EBADE': 113,
      'EBADR': 114,
      'EXFULL': 115,
      'ENOANO': 104,
      'EBADRQC': 103,
      'EBADSLT': 102,
      'EDEADLOCK': 16,
      'EBFONT': 101,
      'ENOSTR': 100,
      'ENODATA': 116,
      'ETIME': 117,
      'ENOSR': 118,
      'ENONET': 119,
      'ENOPKG': 120,
      'EREMOTE': 121,
      'ENOLINK': 47,
      'EADV': 122,
      'ESRMNT': 123,
      'ECOMM': 124,
      'EPROTO': 65,
      'EMULTIHOP': 36,
      'EDOTDOT': 125,
      'EBADMSG': 9,
      'ENOTUNIQ': 126,
      'EBADFD': 127,
      'EREMCHG': 128,
      'ELIBACC': 129,
      'ELIBBAD': 130,
      'ELIBSCN': 131,
      'ELIBMAX': 132,
      'ELIBEXEC': 133,
      'ENOSYS': 52,
      'ENOTEMPTY': 55,
      'ENAMETOOLONG': 37,
      'ELOOP': 32,
      'EOPNOTSUPP': 138,
      'EPFNOSUPPORT': 139,
      'ECONNRESET': 15,
      'ENOBUFS': 42,
      'EAFNOSUPPORT': 5,
      'EPROTOTYPE': 67,
      'ENOTSOCK': 57,
      'ENOPROTOOPT': 50,
      'ESHUTDOWN': 140,
      'ECONNREFUSED': 14,
      'EADDRINUSE': 3,
      'ECONNABORTED': 13,
      'ENETUNREACH': 40,
      'ENETDOWN': 38,
      'ETIMEDOUT': 73,
      'EHOSTDOWN': 142,
      'EHOSTUNREACH': 23,
      'EINPROGRESS': 26,
      'EALREADY': 7,
      'EDESTADDRREQ': 17,
      'EMSGSIZE': 35,
      'EPROTONOSUPPORT': 66,
      'ESOCKTNOSUPPORT': 137,
      'EADDRNOTAVAIL': 4,
      'ENETRESET': 39,
      'EISCONN': 30,
      'ENOTCONN': 53,
      'ETOOMANYREFS': 141,
      'EUSERS': 136,
      'EDQUOT': 19,
      'ESTALE': 72,
      'ENOTSUP': 138,
      'ENOMEDIUM': 148,
      'EILSEQ': 25,
      'EOVERFLOW': 61,
      'ECANCELED': 11,
      'ENOTRECOVERABLE': 56,
      'EOWNERDEAD': 62,
      'ESTRPIPE': 135,
    };
  var FS = {
  root:null,
  mounts:[],
  devices:{
  },
  streams:[],
  nextInode:1,
  nameTable:null,
  currentPath:"/",
  initialized:false,
  ignorePermissions:true,
  filesystems:null,
  syncFSRequests:0,
  readFiles:{
  },
  ErrnoError:class extends Error {
        name = 'ErrnoError';
        // We set the `name` property to be able to identify `FS.ErrnoError`
        // - the `name` is a standard ECMA-262 property of error objects. Kind of good to have it anyway.
        // - when using PROXYFS, an error can come from an underlying FS
        // as different FS objects have their own FS.ErrnoError each,
        // the test `err instanceof FS.ErrnoError` won't detect an error coming from another filesystem, causing bugs.
        // we'll use the reliable test `err.name == "ErrnoError"` instead
        constructor(errno) {
          super(runtimeInitialized ? strError(errno) : '');
          this.errno = errno;
          for (var key in ERRNO_CODES) {
            if (ERRNO_CODES[key] === errno) {
              this.code = key;
              break;
            }
          }
        }
      },
  FSStream:class {
        shared = {};
        get object() {
          return this.node;
        }
        set object(val) {
          this.node = val;
        }
        get isRead() {
          return (this.flags & 2097155) !== 1;
        }
        get isWrite() {
          return (this.flags & 2097155) !== 0;
        }
        get isAppend() {
          return (this.flags & 1024);
        }
        get flags() {
          return this.shared.flags;
        }
        set flags(val) {
          this.shared.flags = val;
        }
        get position() {
          return this.shared.position;
        }
        set position(val) {
          this.shared.position = val;
        }
      },
  FSNode:class {
        node_ops = {};
        stream_ops = {};
        readMode = 292 | 73;
        writeMode = 146;
        mounted = null;
        constructor(parent, name, mode, rdev) {
          if (!parent) {
            parent = this;  // root node sets parent to itself
          }
          this.parent = parent;
          this.mount = parent.mount;
          this.id = FS.nextInode++;
          this.name = name;
          this.mode = mode;
          this.rdev = rdev;
          this.atime = this.mtime = this.ctime = Date.now();
        }
        get read() {
          return (this.mode & this.readMode) === this.readMode;
        }
        set read(val) {
          val ? this.mode |= this.readMode : this.mode &= ~this.readMode;
        }
        get write() {
          return (this.mode & this.writeMode) === this.writeMode;
        }
        set write(val) {
          val ? this.mode |= this.writeMode : this.mode &= ~this.writeMode;
        }
        get isFolder() {
          return FS.isDir(this.mode);
        }
        get isDevice() {
          return FS.isChrdev(this.mode);
        }
      },
  lookupPath(path, opts = {}) {
        if (!path) {
          throw new FS.ErrnoError(44);
        }
        opts.follow_mount ??= true
  
        if (!PATH.isAbs(path)) {
          path = FS.cwd() + '/' + path;
        }
  
        // limit max consecutive symlinks to 40 (SYMLOOP_MAX).
        linkloop: for (var nlinks = 0; nlinks < 40; nlinks++) {
          // split the absolute path
          var parts = path.split('/').filter((p) => !!p);
  
          // start at the root
          var current = FS.root;
          var current_path = '/';
  
          for (var i = 0; i < parts.length; i++) {
            var islast = (i === parts.length-1);
            if (islast && opts.parent) {
              // stop resolving
              break;
            }
  
            if (parts[i] === '.') {
              continue;
            }
  
            if (parts[i] === '..') {
              current_path = PATH.dirname(current_path);
              if (FS.isRoot(current)) {
                path = current_path + '/' + parts.slice(i + 1).join('/');
                continue linkloop;
              } else {
                current = current.parent;
              }
              continue;
            }
  
            current_path = PATH.join2(current_path, parts[i]);
            try {
              current = FS.lookupNode(current, parts[i]);
            } catch (e) {
              // if noent_okay is true, suppress a ENOENT in the last component
              // and return an object with an undefined node. This is needed for
              // resolving symlinks in the path when creating a file.
              if ((e?.errno === 44) && islast && opts.noent_okay) {
                return { path: current_path };
              }
              throw e;
            }
  
            // jump to the mount's root node if this is a mountpoint
            if (FS.isMountpoint(current) && (!islast || opts.follow_mount)) {
              current = current.mounted.root;
            }
  
            // by default, lookupPath will not follow a symlink if it is the final path component.
            // setting opts.follow = true will override this behavior.
            if (FS.isLink(current.mode) && (!islast || opts.follow)) {
              if (!current.node_ops.readlink) {
                throw new FS.ErrnoError(52);
              }
              var link = current.node_ops.readlink(current);
              if (!PATH.isAbs(link)) {
                link = PATH.dirname(current_path) + '/' + link;
              }
              path = link + '/' + parts.slice(i + 1).join('/');
              continue linkloop;
            }
          }
          return { path: current_path, node: current };
        }
        throw new FS.ErrnoError(32);
      },
  getPath(node) {
        var path;
        while (true) {
          if (FS.isRoot(node)) {
            var mount = node.mount.mountpoint;
            if (!path) return mount;
            return mount[mount.length-1] !== '/' ? `${mount}/${path}` : mount + path;
          }
          path = path ? `${node.name}/${path}` : node.name;
          node = node.parent;
        }
      },
  hashName(parentid, name) {
        var hash = 0;
  
        for (var i = 0; i < name.length; i++) {
          hash = ((hash << 5) - hash + name.charCodeAt(i)) | 0;
        }
        return ((parentid + hash) >>> 0) % FS.nameTable.length;
      },
  hashAddNode(node) {
        var hash = FS.hashName(node.parent.id, node.name);
        node.name_next = FS.nameTable[hash];
        FS.nameTable[hash] = node;
      },
  hashRemoveNode(node) {
        var hash = FS.hashName(node.parent.id, node.name);
        if (FS.nameTable[hash] === node) {
          FS.nameTable[hash] = node.name_next;
        } else {
          var current = FS.nameTable[hash];
          while (current) {
            if (current.name_next === node) {
              current.name_next = node.name_next;
              break;
            }
            current = current.name_next;
          }
        }
      },
  lookupNode(parent, name) {
        var errCode = FS.mayLookup(parent);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        var hash = FS.hashName(parent.id, name);
        for (var node = FS.nameTable[hash]; node; node = node.name_next) {
          var nodeName = node.name;
          if (node.parent.id === parent.id && nodeName === name) {
            return node;
          }
        }
        // if we failed to find it in the cache, call into the VFS
        return FS.lookup(parent, name);
      },
  createNode(parent, name, mode, rdev) {
        assert(typeof parent == 'object')
        var node = new FS.FSNode(parent, name, mode, rdev);
  
        FS.hashAddNode(node);
  
        return node;
      },
  destroyNode(node) {
        FS.hashRemoveNode(node);
      },
  isRoot(node) {
        return node === node.parent;
      },
  isMountpoint(node) {
        return !!node.mounted;
      },
  isFile(mode) {
        return (mode & 61440) === 32768;
      },
  isDir(mode) {
        return (mode & 61440) === 16384;
      },
  isLink(mode) {
        return (mode & 61440) === 40960;
      },
  isChrdev(mode) {
        return (mode & 61440) === 8192;
      },
  isBlkdev(mode) {
        return (mode & 61440) === 24576;
      },
  isFIFO(mode) {
        return (mode & 61440) === 4096;
      },
  isSocket(mode) {
        return (mode & 49152) === 49152;
      },
  flagsToPermissionString(flag) {
        var perms = ['r', 'w', 'rw'][flag & 3];
        if ((flag & 512)) {
          perms += 'w';
        }
        return perms;
      },
  nodePermissions(node, perms) {
        if (FS.ignorePermissions) {
          return 0;
        }
        // return 0 if any user, group or owner bits are set.
        if (perms.includes('r') && !(node.mode & 292)) {
          return 2;
        } else if (perms.includes('w') && !(node.mode & 146)) {
          return 2;
        } else if (perms.includes('x') && !(node.mode & 73)) {
          return 2;
        }
        return 0;
      },
  mayLookup(dir) {
        if (!FS.isDir(dir.mode)) return 54;
        var errCode = FS.nodePermissions(dir, 'x');
        if (errCode) return errCode;
        if (!dir.node_ops.lookup) return 2;
        return 0;
      },
  mayCreate(dir, name) {
        if (!FS.isDir(dir.mode)) {
          return 54;
        }
        try {
          var node = FS.lookupNode(dir, name);
          return 20;
        } catch (e) {
        }
        return FS.nodePermissions(dir, 'wx');
      },
  mayDelete(dir, name, isdir) {
        var node;
        try {
          node = FS.lookupNode(dir, name);
        } catch (e) {
          return e.errno;
        }
        var errCode = FS.nodePermissions(dir, 'wx');
        if (errCode) {
          return errCode;
        }
        if (isdir) {
          if (!FS.isDir(node.mode)) {
            return 54;
          }
          if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
            return 10;
          }
        } else {
          if (FS.isDir(node.mode)) {
            return 31;
          }
        }
        return 0;
      },
  mayOpen(node, flags) {
        if (!node) {
          return 44;
        }
        if (FS.isLink(node.mode)) {
          return 32;
        } else if (FS.isDir(node.mode)) {
          if (FS.flagsToPermissionString(flags) !== 'r' // opening for write
              || (flags & (512 | 64))) { // TODO: check for O_SEARCH? (== search for dir only)
            return 31;
          }
        }
        return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
      },
  checkOpExists(op, err) {
        if (!op) {
          throw new FS.ErrnoError(err);
        }
        return op;
      },
  MAX_OPEN_FDS:4096,
  nextfd() {
        for (var fd = 0; fd <= FS.MAX_OPEN_FDS; fd++) {
          if (!FS.streams[fd]) {
            return fd;
          }
        }
        throw new FS.ErrnoError(33);
      },
  getStreamChecked(fd) {
        var stream = FS.getStream(fd);
        if (!stream) {
          throw new FS.ErrnoError(8);
        }
        return stream;
      },
  getStream:(fd) => FS.streams[fd],
  createStream(stream, fd = -1) {
        assert(fd >= -1);
  
        // clone it, so we can return an instance of FSStream
        stream = Object.assign(new FS.FSStream(), stream);
        if (fd == -1) {
          fd = FS.nextfd();
        }
        stream.fd = fd;
        FS.streams[fd] = stream;
        return stream;
      },
  closeStream(fd) {
        FS.streams[fd] = null;
      },
  dupStream(origStream, fd = -1) {
        var stream = FS.createStream(origStream, fd);
        stream.stream_ops?.dup?.(stream);
        return stream;
      },
  doSetAttr(stream, node, attr) {
        var setattr = stream?.stream_ops.setattr;
        var arg = setattr ? stream : node;
        setattr ??= node.node_ops.setattr;
        FS.checkOpExists(setattr, 63)
        setattr(arg, attr);
      },
  chrdev_stream_ops:{
  open(stream) {
          var device = FS.getDevice(stream.node.rdev);
          // override node's stream ops with the device's
          stream.stream_ops = device.stream_ops;
          // forward the open call
          stream.stream_ops.open?.(stream);
        },
  llseek() {
          throw new FS.ErrnoError(70);
        },
  },
  major:(dev) => ((dev) >> 8),
  minor:(dev) => ((dev) & 0xff),
  makedev:(ma, mi) => ((ma) << 8 | (mi)),
  registerDevice(dev, ops) {
        FS.devices[dev] = { stream_ops: ops };
      },
  getDevice:(dev) => FS.devices[dev],
  getMounts(mount) {
        var mounts = [];
        var check = [mount];
  
        while (check.length) {
          var m = check.pop();
  
          mounts.push(m);
  
          check.push(...m.mounts);
        }
  
        return mounts;
      },
  syncfs(populate, callback) {
        if (typeof populate == 'function') {
          callback = populate;
          populate = false;
        }
  
        FS.syncFSRequests++;
  
        if (FS.syncFSRequests > 1) {
          err(`warning: ${FS.syncFSRequests} FS.syncfs operations in flight at once, probably just doing extra work`);
        }
  
        var mounts = FS.getMounts(FS.root.mount);
        var completed = 0;
  
        function doCallback(errCode) {
          assert(FS.syncFSRequests > 0);
          FS.syncFSRequests--;
          return callback(errCode);
        }
  
        function done(errCode) {
          if (errCode) {
            if (!done.errored) {
              done.errored = true;
              return doCallback(errCode);
            }
            return;
          }
          if (++completed >= mounts.length) {
            doCallback(null);
          }
        };
  
        // sync all mounts
        mounts.forEach((mount) => {
          if (!mount.type.syncfs) {
            return done(null);
          }
          mount.type.syncfs(mount, populate, done);
        });
      },
  mount(type, opts, mountpoint) {
        if (typeof type == 'string') {
          // The filesystem was not included, and instead we have an error
          // message stored in the variable.
          throw type;
        }
        var root = mountpoint === '/';
        var pseudo = !mountpoint;
        var node;
  
        if (root && FS.root) {
          throw new FS.ErrnoError(10);
        } else if (!root && !pseudo) {
          var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
          mountpoint = lookup.path;  // use the absolute path
          node = lookup.node;
  
          if (FS.isMountpoint(node)) {
            throw new FS.ErrnoError(10);
          }
  
          if (!FS.isDir(node.mode)) {
            throw new FS.ErrnoError(54);
          }
        }
  
        var mount = {
          type,
          opts,
          mountpoint,
          mounts: []
        };
  
        // create a root node for the fs
        var mountRoot = type.mount(mount);
        mountRoot.mount = mount;
        mount.root = mountRoot;
  
        if (root) {
          FS.root = mountRoot;
        } else if (node) {
          // set as a mountpoint
          node.mounted = mount;
  
          // add the new mount to the current mount's children
          if (node.mount) {
            node.mount.mounts.push(mount);
          }
        }
  
        return mountRoot;
      },
  unmount(mountpoint) {
        var lookup = FS.lookupPath(mountpoint, { follow_mount: false });
  
        if (!FS.isMountpoint(lookup.node)) {
          throw new FS.ErrnoError(28);
        }
  
        // destroy the nodes for this mount, and all its child mounts
        var node = lookup.node;
        var mount = node.mounted;
        var mounts = FS.getMounts(mount);
  
        Object.keys(FS.nameTable).forEach((hash) => {
          var current = FS.nameTable[hash];
  
          while (current) {
            var next = current.name_next;
  
            if (mounts.includes(current.mount)) {
              FS.destroyNode(current);
            }
  
            current = next;
          }
        });
  
        // no longer a mountpoint
        node.mounted = null;
  
        // remove this mount from the child mounts
        var idx = node.mount.mounts.indexOf(mount);
        assert(idx !== -1);
        node.mount.mounts.splice(idx, 1);
      },
  lookup(parent, name) {
        return parent.node_ops.lookup(parent, name);
      },
  mknod(path, mode, dev) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        if (!name) {
          throw new FS.ErrnoError(28);
        }
        if (name === '.' || name === '..') {
          throw new FS.ErrnoError(20);
        }
        var errCode = FS.mayCreate(parent, name);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        if (!parent.node_ops.mknod) {
          throw new FS.ErrnoError(63);
        }
        return parent.node_ops.mknod(parent, name, mode, dev);
      },
  statfs(path) {
        return FS.statfsNode(FS.lookupPath(path, {follow: true}).node);
      },
  statfsStream(stream) {
        // We keep a separate statfsStream function because noderawfs overrides
        // it. In noderawfs, stream.node is sometimes null. Instead, we need to
        // look at stream.path.
        return FS.statfsNode(stream.node);
      },
  statfsNode(node) {
        // NOTE: None of the defaults here are true. We're just returning safe and
        //       sane values. Currently nodefs and rawfs replace these defaults,
        //       other file systems leave them alone.
        var rtn = {
          bsize: 4096,
          frsize: 4096,
          blocks: 1e6,
          bfree: 5e5,
          bavail: 5e5,
          files: FS.nextInode,
          ffree: FS.nextInode - 1,
          fsid: 42,
          flags: 2,
          namelen: 255,
        };
  
        if (node.node_ops.statfs) {
          Object.assign(rtn, node.node_ops.statfs(node.mount.opts.root));
        }
        return rtn;
      },
  create(path, mode = 0o666) {
        mode &= 4095;
        mode |= 32768;
        return FS.mknod(path, mode, 0);
      },
  mkdir(path, mode = 0o777) {
        mode &= 511 | 512;
        mode |= 16384;
        return FS.mknod(path, mode, 0);
      },
  mkdirTree(path, mode) {
        var dirs = path.split('/');
        var d = '';
        for (var dir of dirs) {
          if (!dir) continue;
          if (d || PATH.isAbs(path)) d += '/';
          d += dir;
          try {
            FS.mkdir(d, mode);
          } catch(e) {
            if (e.errno != 20) throw e;
          }
        }
      },
  mkdev(path, mode, dev) {
        if (typeof dev == 'undefined') {
          dev = mode;
          mode = 0o666;
        }
        mode |= 8192;
        return FS.mknod(path, mode, dev);
      },
  symlink(oldpath, newpath) {
        if (!PATH_FS.resolve(oldpath)) {
          throw new FS.ErrnoError(44);
        }
        var lookup = FS.lookupPath(newpath, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(44);
        }
        var newname = PATH.basename(newpath);
        var errCode = FS.mayCreate(parent, newname);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        if (!parent.node_ops.symlink) {
          throw new FS.ErrnoError(63);
        }
        return parent.node_ops.symlink(parent, newname, oldpath);
      },
  rename(old_path, new_path) {
        var old_dirname = PATH.dirname(old_path);
        var new_dirname = PATH.dirname(new_path);
        var old_name = PATH.basename(old_path);
        var new_name = PATH.basename(new_path);
        // parents must exist
        var lookup, old_dir, new_dir;
  
        // let the errors from non existent directories percolate up
        lookup = FS.lookupPath(old_path, { parent: true });
        old_dir = lookup.node;
        lookup = FS.lookupPath(new_path, { parent: true });
        new_dir = lookup.node;
  
        if (!old_dir || !new_dir) throw new FS.ErrnoError(44);
        // need to be part of the same mount
        if (old_dir.mount !== new_dir.mount) {
          throw new FS.ErrnoError(75);
        }
        // source must exist
        var old_node = FS.lookupNode(old_dir, old_name);
        // old path should not be an ancestor of the new path
        var relative = PATH_FS.relative(old_path, new_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(28);
        }
        // new path should not be an ancestor of the old path
        relative = PATH_FS.relative(new_path, old_dirname);
        if (relative.charAt(0) !== '.') {
          throw new FS.ErrnoError(55);
        }
        // see if the new path already exists
        var new_node;
        try {
          new_node = FS.lookupNode(new_dir, new_name);
        } catch (e) {
          // not fatal
        }
        // early out if nothing needs to change
        if (old_node === new_node) {
          return;
        }
        // we'll need to delete the old entry
        var isdir = FS.isDir(old_node.mode);
        var errCode = FS.mayDelete(old_dir, old_name, isdir);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        // need delete permissions if we'll be overwriting.
        // need create permissions if new doesn't already exist.
        errCode = new_node ?
          FS.mayDelete(new_dir, new_name, isdir) :
          FS.mayCreate(new_dir, new_name);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        if (!old_dir.node_ops.rename) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(old_node) || (new_node && FS.isMountpoint(new_node))) {
          throw new FS.ErrnoError(10);
        }
        // if we are going to change the parent, check write permissions
        if (new_dir !== old_dir) {
          errCode = FS.nodePermissions(old_dir, 'w');
          if (errCode) {
            throw new FS.ErrnoError(errCode);
          }
        }
        // remove the node from the lookup hash
        FS.hashRemoveNode(old_node);
        // do the underlying fs rename
        try {
          old_dir.node_ops.rename(old_node, new_dir, new_name);
          // update old node (we do this here to avoid each backend
          // needing to)
          old_node.parent = new_dir;
        } catch (e) {
          throw e;
        } finally {
          // add the node back to the hash (in case node_ops.rename
          // changed its name)
          FS.hashAddNode(old_node);
        }
      },
  rmdir(path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var errCode = FS.mayDelete(parent, name, true);
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        if (!parent.node_ops.rmdir) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(10);
        }
        parent.node_ops.rmdir(parent, name);
        FS.destroyNode(node);
      },
  readdir(path) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        var readdir = FS.checkOpExists(node.node_ops.readdir, 54);
        return readdir(node);
      },
  unlink(path) {
        var lookup = FS.lookupPath(path, { parent: true });
        var parent = lookup.node;
        if (!parent) {
          throw new FS.ErrnoError(44);
        }
        var name = PATH.basename(path);
        var node = FS.lookupNode(parent, name);
        var errCode = FS.mayDelete(parent, name, false);
        if (errCode) {
          // According to POSIX, we should map EISDIR to EPERM, but
          // we instead do what Linux does (and we must, as we use
          // the musl linux libc).
          throw new FS.ErrnoError(errCode);
        }
        if (!parent.node_ops.unlink) {
          throw new FS.ErrnoError(63);
        }
        if (FS.isMountpoint(node)) {
          throw new FS.ErrnoError(10);
        }
        parent.node_ops.unlink(parent, name);
        FS.destroyNode(node);
      },
  readlink(path) {
        var lookup = FS.lookupPath(path);
        var link = lookup.node;
        if (!link) {
          throw new FS.ErrnoError(44);
        }
        if (!link.node_ops.readlink) {
          throw new FS.ErrnoError(28);
        }
        return link.node_ops.readlink(link);
      },
  stat(path, dontFollow) {
        var lookup = FS.lookupPath(path, { follow: !dontFollow });
        var node = lookup.node;
        var getattr = FS.checkOpExists(node.node_ops.getattr, 63);
        return getattr(node);
      },
  fstat(fd) {
        var stream = FS.getStreamChecked(fd);
        var node = stream.node;
        var getattr = stream.stream_ops.getattr;
        var arg = getattr ? stream : node;
        getattr ??= node.node_ops.getattr;
        FS.checkOpExists(getattr, 63)
        return getattr(arg);
      },
  lstat(path) {
        return FS.stat(path, true);
      },
  doChmod(stream, node, mode, dontFollow) {
        FS.doSetAttr(stream, node, {
          mode: (mode & 4095) | (node.mode & ~4095),
          ctime: Date.now(),
          dontFollow
        });
      },
  chmod(path, mode, dontFollow) {
        var node;
        if (typeof path == 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        FS.doChmod(null, node, mode, dontFollow);
      },
  lchmod(path, mode) {
        FS.chmod(path, mode, true);
      },
  fchmod(fd, mode) {
        var stream = FS.getStreamChecked(fd);
        FS.doChmod(stream, stream.node, mode, false);
      },
  doChown(stream, node, dontFollow) {
        FS.doSetAttr(stream, node, {
          timestamp: Date.now(),
          dontFollow
          // we ignore the uid / gid for now
        });
      },
  chown(path, uid, gid, dontFollow) {
        var node;
        if (typeof path == 'string') {
          var lookup = FS.lookupPath(path, { follow: !dontFollow });
          node = lookup.node;
        } else {
          node = path;
        }
        FS.doChown(null, node, dontFollow);
      },
  lchown(path, uid, gid) {
        FS.chown(path, uid, gid, true);
      },
  fchown(fd, uid, gid) {
        var stream = FS.getStreamChecked(fd);
        FS.doChown(stream, stream.node, false);
      },
  doTruncate(stream, node, len) {
        if (FS.isDir(node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!FS.isFile(node.mode)) {
          throw new FS.ErrnoError(28);
        }
        var errCode = FS.nodePermissions(node, 'w');
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        FS.doSetAttr(stream, node, {
          size: len,
          timestamp: Date.now()
        });
      },
  truncate(path, len) {
        if (len < 0) {
          throw new FS.ErrnoError(28);
        }
        var node;
        if (typeof path == 'string') {
          var lookup = FS.lookupPath(path, { follow: true });
          node = lookup.node;
        } else {
          node = path;
        }
        FS.doTruncate(null, node, len);
      },
  ftruncate(fd, len) {
        var stream = FS.getStreamChecked(fd);
        if (len < 0 || (stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(28);
        }
        FS.doTruncate(stream, stream.node, len);
      },
  utime(path, atime, mtime) {
        var lookup = FS.lookupPath(path, { follow: true });
        var node = lookup.node;
        var setattr = FS.checkOpExists(node.node_ops.setattr, 63);
        setattr(node, {
          atime: atime,
          mtime: mtime
        });
      },
  open(path, flags, mode = 0o666) {
        if (path === "") {
          throw new FS.ErrnoError(44);
        }
        flags = typeof flags == 'string' ? FS_modeStringToFlags(flags) : flags;
        if ((flags & 64)) {
          mode = (mode & 4095) | 32768;
        } else {
          mode = 0;
        }
        var node;
        var isDirPath;
        if (typeof path == 'object') {
          node = path;
        } else {
          isDirPath = path.endsWith("/");
          // noent_okay makes it so that if the final component of the path
          // doesn't exist, lookupPath returns `node: undefined`. `path` will be
          // updated to point to the target of all symlinks.
          var lookup = FS.lookupPath(path, {
            follow: !(flags & 131072),
            noent_okay: true
          });
          node = lookup.node;
          path = lookup.path;
        }
        // perhaps we need to create the node
        var created = false;
        if ((flags & 64)) {
          if (node) {
            // if O_CREAT and O_EXCL are set, error out if the node already exists
            if ((flags & 128)) {
              throw new FS.ErrnoError(20);
            }
          } else if (isDirPath) {
            throw new FS.ErrnoError(31);
          } else {
            // node doesn't exist, try to create it
            // Ignore the permission bits here to ensure we can `open` this new
            // file below. We use chmod below the apply the permissions once the
            // file is open.
            node = FS.mknod(path, mode | 0o777, 0);
            created = true;
          }
        }
        if (!node) {
          throw new FS.ErrnoError(44);
        }
        // can't truncate a device
        if (FS.isChrdev(node.mode)) {
          flags &= ~512;
        }
        // if asked only for a directory, then this must be one
        if ((flags & 65536) && !FS.isDir(node.mode)) {
          throw new FS.ErrnoError(54);
        }
        // check permissions, if this is not a file we just created now (it is ok to
        // create and write to a file with read-only permissions; it is read-only
        // for later use)
        if (!created) {
          var errCode = FS.mayOpen(node, flags);
          if (errCode) {
            throw new FS.ErrnoError(errCode);
          }
        }
        // do truncation if necessary
        if ((flags & 512) && !created) {
          FS.truncate(node, 0);
        }
        // we've already handled these, don't pass down to the underlying vfs
        flags &= ~(128 | 512 | 131072);
  
        // register the stream with the filesystem
        var stream = FS.createStream({
          node,
          path: FS.getPath(node),  // we want the absolute path to the node
          flags,
          seekable: true,
          position: 0,
          stream_ops: node.stream_ops,
          // used by the file family libc calls (fopen, fwrite, ferror, etc.)
          ungotten: [],
          error: false
        });
        // call the new stream's open function
        if (stream.stream_ops.open) {
          stream.stream_ops.open(stream);
        }
        if (created) {
          FS.chmod(node, mode & 0o777);
        }
        if (Module['logReadFiles'] && !(flags & 1)) {
          if (!(path in FS.readFiles)) {
            FS.readFiles[path] = 1;
          }
        }
        return stream;
      },
  close(stream) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if (stream.getdents) stream.getdents = null; // free readdir state
        try {
          if (stream.stream_ops.close) {
            stream.stream_ops.close(stream);
          }
        } catch (e) {
          throw e;
        } finally {
          FS.closeStream(stream.fd);
        }
        stream.fd = null;
      },
  isClosed(stream) {
        return stream.fd === null;
      },
  llseek(stream, offset, whence) {
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if (!stream.seekable || !stream.stream_ops.llseek) {
          throw new FS.ErrnoError(70);
        }
        if (whence != 0 && whence != 1 && whence != 2) {
          throw new FS.ErrnoError(28);
        }
        stream.position = stream.stream_ops.llseek(stream, offset, whence);
        stream.ungotten = [];
        return stream.position;
      },
  read(stream, buffer, offset, length, position) {
        assert(offset >= 0);
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(28);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(8);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!stream.stream_ops.read) {
          throw new FS.ErrnoError(28);
        }
        var seeking = typeof position != 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(70);
        }
        var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
        if (!seeking) stream.position += bytesRead;
        return bytesRead;
      },
  write(stream, buffer, offset, length, position, canOwn) {
        assert(offset >= 0);
        if (length < 0 || position < 0) {
          throw new FS.ErrnoError(28);
        }
        if (FS.isClosed(stream)) {
          throw new FS.ErrnoError(8);
        }
        if ((stream.flags & 2097155) === 0) {
          throw new FS.ErrnoError(8);
        }
        if (FS.isDir(stream.node.mode)) {
          throw new FS.ErrnoError(31);
        }
        if (!stream.stream_ops.write) {
          throw new FS.ErrnoError(28);
        }
        if (stream.seekable && stream.flags & 1024) {
          // seek to the end before writing in append mode
          FS.llseek(stream, 0, 2);
        }
        var seeking = typeof position != 'undefined';
        if (!seeking) {
          position = stream.position;
        } else if (!stream.seekable) {
          throw new FS.ErrnoError(70);
        }
        var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
        if (!seeking) stream.position += bytesWritten;
        return bytesWritten;
      },
  mmap(stream, length, position, prot, flags) {
        // User requests writing to file (prot & PROT_WRITE != 0).
        // Checking if we have permissions to write to the file unless
        // MAP_PRIVATE flag is set. According to POSIX spec it is possible
        // to write to file opened in read-only mode with MAP_PRIVATE flag,
        // as all modifications will be visible only in the memory of
        // the current process.
        if ((prot & 2) !== 0
            && (flags & 2) === 0
            && (stream.flags & 2097155) !== 2) {
          throw new FS.ErrnoError(2);
        }
        if ((stream.flags & 2097155) === 1) {
          throw new FS.ErrnoError(2);
        }
        if (!stream.stream_ops.mmap) {
          throw new FS.ErrnoError(43);
        }
        if (!length) {
          throw new FS.ErrnoError(28);
        }
        return stream.stream_ops.mmap(stream, length, position, prot, flags);
      },
  msync(stream, buffer, offset, length, mmapFlags) {
        assert(offset >= 0);
        if (!stream.stream_ops.msync) {
          return 0;
        }
        return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
      },
  ioctl(stream, cmd, arg) {
        if (!stream.stream_ops.ioctl) {
          throw new FS.ErrnoError(59);
        }
        return stream.stream_ops.ioctl(stream, cmd, arg);
      },
  readFile(path, opts = {}) {
        opts.flags = opts.flags || 0;
        opts.encoding = opts.encoding || 'binary';
        if (opts.encoding !== 'utf8' && opts.encoding !== 'binary') {
          throw new Error(`Invalid encoding type "${opts.encoding}"`);
        }
        var stream = FS.open(path, opts.flags);
        var stat = FS.stat(path);
        var length = stat.size;
        var buf = new Uint8Array(length);
        FS.read(stream, buf, 0, length, 0);
        if (opts.encoding === 'utf8') {
          buf = UTF8ArrayToString(buf);
        }
        FS.close(stream);
        return buf;
      },
  writeFile(path, data, opts = {}) {
        opts.flags = opts.flags || 577;
        var stream = FS.open(path, opts.flags, opts.mode);
        if (typeof data == 'string') {
          data = new Uint8Array(intArrayFromString(data, true));
        }
        if (ArrayBuffer.isView(data)) {
          FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
        } else {
          throw new Error('Unsupported data type');
        }
        FS.close(stream);
      },
  cwd:() => FS.currentPath,
  chdir(path) {
        var lookup = FS.lookupPath(path, { follow: true });
        if (lookup.node === null) {
          throw new FS.ErrnoError(44);
        }
        if (!FS.isDir(lookup.node.mode)) {
          throw new FS.ErrnoError(54);
        }
        var errCode = FS.nodePermissions(lookup.node, 'x');
        if (errCode) {
          throw new FS.ErrnoError(errCode);
        }
        FS.currentPath = lookup.path;
      },
  createDefaultDirectories() {
        FS.mkdir('/tmp');
        FS.mkdir('/home');
        FS.mkdir('/home/web_user');
      },
  createDefaultDevices() {
        // create /dev
        FS.mkdir('/dev');
        // setup /dev/null
        FS.registerDevice(FS.makedev(1, 3), {
          read: () => 0,
          write: (stream, buffer, offset, length, pos) => length,
          llseek: () => 0,
        });
        FS.mkdev('/dev/null', FS.makedev(1, 3));
        // setup /dev/tty and /dev/tty1
        // stderr needs to print output using err() rather than out()
        // so we register a second tty just for it.
        TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
        TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
        FS.mkdev('/dev/tty', FS.makedev(5, 0));
        FS.mkdev('/dev/tty1', FS.makedev(6, 0));
        // setup /dev/[u]random
        // use a buffer to avoid overhead of individual crypto calls per byte
        var randomBuffer = new Uint8Array(1024), randomLeft = 0;
        var randomByte = () => {
          if (randomLeft === 0) {
            randomFill(randomBuffer);
            randomLeft = randomBuffer.byteLength;
          }
          return randomBuffer[--randomLeft];
        };
        FS.createDevice('/dev', 'random', randomByte);
        FS.createDevice('/dev', 'urandom', randomByte);
        // we're not going to emulate the actual shm device,
        // just create the tmp dirs that reside in it commonly
        FS.mkdir('/dev/shm');
        FS.mkdir('/dev/shm/tmp');
      },
  createSpecialDirectories() {
        // create /proc/self/fd which allows /proc/self/fd/6 => readlink gives the
        // name of the stream for fd 6 (see test_unistd_ttyname)
        FS.mkdir('/proc');
        var proc_self = FS.mkdir('/proc/self');
        FS.mkdir('/proc/self/fd');
        FS.mount({
          mount() {
            var node = FS.createNode(proc_self, 'fd', 16895, 73);
            node.stream_ops = {
              llseek: MEMFS.stream_ops.llseek,
            };
            node.node_ops = {
              lookup(parent, name) {
                var fd = +name;
                var stream = FS.getStreamChecked(fd);
                var ret = {
                  parent: null,
                  mount: { mountpoint: 'fake' },
                  node_ops: { readlink: () => stream.path },
                  id: fd + 1,
                };
                ret.parent = ret; // make it look like a simple root node
                return ret;
              },
              readdir() {
                return Array.from(FS.streams.entries())
                  .filter(([k, v]) => v)
                  .map(([k, v]) => k.toString());
              }
            };
            return node;
          }
        }, {}, '/proc/self/fd');
      },
  createStandardStreams(input, output, error) {
        // TODO deprecate the old functionality of a single
        // input / output callback and that utilizes FS.createDevice
        // and instead require a unique set of stream ops
  
        // by default, we symlink the standard streams to the
        // default tty devices. however, if the standard streams
        // have been overwritten we create a unique device for
        // them instead.
        if (input) {
          FS.createDevice('/dev', 'stdin', input);
        } else {
          FS.symlink('/dev/tty', '/dev/stdin');
        }
        if (output) {
          FS.createDevice('/dev', 'stdout', null, output);
        } else {
          FS.symlink('/dev/tty', '/dev/stdout');
        }
        if (error) {
          FS.createDevice('/dev', 'stderr', null, error);
        } else {
          FS.symlink('/dev/tty1', '/dev/stderr');
        }
  
        // open default streams for the stdin, stdout and stderr devices
        var stdin = FS.open('/dev/stdin', 0);
        var stdout = FS.open('/dev/stdout', 1);
        var stderr = FS.open('/dev/stderr', 1);
        assert(stdin.fd === 0, `invalid handle for stdin (${stdin.fd})`);
        assert(stdout.fd === 1, `invalid handle for stdout (${stdout.fd})`);
        assert(stderr.fd === 2, `invalid handle for stderr (${stderr.fd})`);
      },
  staticInit() {
        FS.nameTable = new Array(4096);
  
        FS.mount(MEMFS, {}, '/');
  
        FS.createDefaultDirectories();
        FS.createDefaultDevices();
        FS.createSpecialDirectories();
  
        FS.filesystems = {
          'MEMFS': MEMFS,
        };
      },
  init(input, output, error) {
        assert(!FS.initialized, 'FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)');
        FS.initialized = true;
  
        // Allow Module.stdin etc. to provide defaults, if none explicitly passed to us here
        input ??= Module['stdin'];
        output ??= Module['stdout'];
        error ??= Module['stderr'];
  
        FS.createStandardStreams(input, output, error);
      },
  quit() {
        FS.initialized = false;
        // force-flush all streams, so we get musl std streams printed out
        _fflush(0);
        // close all of our streams
        for (var stream of FS.streams) {
          if (stream) {
            FS.close(stream);
          }
        }
      },
  findObject(path, dontResolveLastLink) {
        var ret = FS.analyzePath(path, dontResolveLastLink);
        if (!ret.exists) {
          return null;
        }
        return ret.object;
      },
  analyzePath(path, dontResolveLastLink) {
        // operate from within the context of the symlink's target
        try {
          var lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          path = lookup.path;
        } catch (e) {
        }
        var ret = {
          isRoot: false, exists: false, error: 0, name: null, path: null, object: null,
          parentExists: false, parentPath: null, parentObject: null
        };
        try {
          var lookup = FS.lookupPath(path, { parent: true });
          ret.parentExists = true;
          ret.parentPath = lookup.path;
          ret.parentObject = lookup.node;
          ret.name = PATH.basename(path);
          lookup = FS.lookupPath(path, { follow: !dontResolveLastLink });
          ret.exists = true;
          ret.path = lookup.path;
          ret.object = lookup.node;
          ret.name = lookup.node.name;
          ret.isRoot = lookup.path === '/';
        } catch (e) {
          ret.error = e.errno;
        };
        return ret;
      },
  createPath(parent, path, canRead, canWrite) {
        parent = typeof parent == 'string' ? parent : FS.getPath(parent);
        var parts = path.split('/').reverse();
        while (parts.length) {
          var part = parts.pop();
          if (!part) continue;
          var current = PATH.join2(parent, part);
          try {
            FS.mkdir(current);
          } catch (e) {
            if (e.errno != 20) throw e;
          }
          parent = current;
        }
        return current;
      },
  createFile(parent, name, properties, canRead, canWrite) {
        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);
        var mode = FS_getMode(canRead, canWrite);
        return FS.create(path, mode);
      },
  createDataFile(parent, name, data, canRead, canWrite, canOwn) {
        var path = name;
        if (parent) {
          parent = typeof parent == 'string' ? parent : FS.getPath(parent);
          path = name ? PATH.join2(parent, name) : parent;
        }
        var mode = FS_getMode(canRead, canWrite);
        var node = FS.create(path, mode);
        if (data) {
          if (typeof data == 'string') {
            var arr = new Array(data.length);
            for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);
            data = arr;
          }
          // make sure we can write to the file
          FS.chmod(node, mode | 146);
          var stream = FS.open(node, 577);
          FS.write(stream, data, 0, data.length, 0, canOwn);
          FS.close(stream);
          FS.chmod(node, mode);
        }
      },
  createDevice(parent, name, input, output) {
        var path = PATH.join2(typeof parent == 'string' ? parent : FS.getPath(parent), name);
        var mode = FS_getMode(!!input, !!output);
        FS.createDevice.major ??= 64;
        var dev = FS.makedev(FS.createDevice.major++, 0);
        // Create a fake device that a set of stream ops to emulate
        // the old behavior.
        FS.registerDevice(dev, {
          open(stream) {
            stream.seekable = false;
          },
          close(stream) {
            // flush any pending line data
            if (output?.buffer?.length) {
              output(10);
            }
          },
          read(stream, buffer, offset, length, pos /* ignored */) {
            var bytesRead = 0;
            for (var i = 0; i < length; i++) {
              var result;
              try {
                result = input();
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
              if (result === undefined && bytesRead === 0) {
                throw new FS.ErrnoError(6);
              }
              if (result === null || result === undefined) break;
              bytesRead++;
              buffer[offset+i] = result;
            }
            if (bytesRead) {
              stream.node.atime = Date.now();
            }
            return bytesRead;
          },
          write(stream, buffer, offset, length, pos) {
            for (var i = 0; i < length; i++) {
              try {
                output(buffer[offset+i]);
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
            }
            if (length) {
              stream.node.mtime = stream.node.ctime = Date.now();
            }
            return i;
          }
        });
        return FS.mkdev(path, mode, dev);
      },
  forceLoadFile(obj) {
        if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;
        if (typeof XMLHttpRequest != 'undefined') {
          throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
        } else { // Command-line.
          try {
            obj.contents = readBinary(obj.url);
            obj.usedBytes = obj.contents.length;
          } catch (e) {
            throw new FS.ErrnoError(29);
          }
        }
      },
  createLazyFile(parent, name, url, canRead, canWrite) {
        // Lazy chunked Uint8Array (implements get and length from Uint8Array).
        // Actual getting is abstracted away for eventual reuse.
        class LazyUint8Array {
          lengthKnown = false;
          chunks = []; // Loaded chunks. Index is the chunk number
          get(idx) {
            if (idx > this.length-1 || idx < 0) {
              return undefined;
            }
            var chunkOffset = idx % this.chunkSize;
            var chunkNum = (idx / this.chunkSize)|0;
            return this.getter(chunkNum)[chunkOffset];
          }
          setDataGetter(getter) {
            this.getter = getter;
          }
          cacheLength() {
            // Find length
            var xhr = new XMLHttpRequest();
            xhr.open('HEAD', url, false);
            xhr.send(null);
            if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
            var datalength = Number(xhr.getResponseHeader("Content-length"));
            var header;
            var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
            var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
  
            var chunkSize = 1024*1024; // Chunk size in bytes
  
            if (!hasByteServing) chunkSize = datalength;
  
            // Function to get a range from the remote URL.
            var doXHR = (from, to) => {
              if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
              if (to > datalength-1) throw new Error("only " + datalength + " bytes available! programmer error!");
  
              // TODO: Use mozResponseArrayBuffer, responseStream, etc. if available.
              var xhr = new XMLHttpRequest();
              xhr.open('GET', url, false);
              if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
  
              // Some hints to the browser that we want binary data.
              xhr.responseType = 'arraybuffer';
              if (xhr.overrideMimeType) {
                xhr.overrideMimeType('text/plain; charset=x-user-defined');
              }
  
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              if (xhr.response !== undefined) {
                return new Uint8Array(/** @type{Array<number>} */(xhr.response || []));
              }
              return intArrayFromString(xhr.responseText || '', true);
            };
            var lazyArray = this;
            lazyArray.setDataGetter((chunkNum) => {
              var start = chunkNum * chunkSize;
              var end = (chunkNum+1) * chunkSize - 1; // including this byte
              end = Math.min(end, datalength-1); // if datalength-1 is selected, this is the last block
              if (typeof lazyArray.chunks[chunkNum] == 'undefined') {
                lazyArray.chunks[chunkNum] = doXHR(start, end);
              }
              if (typeof lazyArray.chunks[chunkNum] == 'undefined') throw new Error('doXHR failed!');
              return lazyArray.chunks[chunkNum];
            });
  
            if (usesGzip || !datalength) {
              // if the server uses gzip or doesn't supply the length, we have to download the whole file to get the (uncompressed) length
              chunkSize = datalength = 1; // this will force getter(0)/doXHR do download the whole file
              datalength = this.getter(0).length;
              chunkSize = datalength;
              out("LazyFiles on gzip forces download of the whole file when length is accessed");
            }
  
            this._length = datalength;
            this._chunkSize = chunkSize;
            this.lengthKnown = true;
          }
          get length() {
            if (!this.lengthKnown) {
              this.cacheLength();
            }
            return this._length;
          }
          get chunkSize() {
            if (!this.lengthKnown) {
              this.cacheLength();
            }
            return this._chunkSize;
          }
        }
  
        if (typeof XMLHttpRequest != 'undefined') {
          if (!ENVIRONMENT_IS_WORKER) throw 'Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc';
          var lazyArray = new LazyUint8Array();
          var properties = { isDevice: false, contents: lazyArray };
        } else {
          var properties = { isDevice: false, url: url };
        }
  
        var node = FS.createFile(parent, name, properties, canRead, canWrite);
        // This is a total hack, but I want to get this lazy file code out of the
        // core of MEMFS. If we want to keep this lazy file concept I feel it should
        // be its own thin LAZYFS proxying calls to MEMFS.
        if (properties.contents) {
          node.contents = properties.contents;
        } else if (properties.url) {
          node.contents = null;
          node.url = properties.url;
        }
        // Add a function that defers querying the file size until it is asked the first time.
        Object.defineProperties(node, {
          usedBytes: {
            get: function() { return this.contents.length; }
          }
        });
        // override each stream op with one that tries to force load the lazy file first
        var stream_ops = {};
        var keys = Object.keys(node.stream_ops);
        keys.forEach((key) => {
          var fn = node.stream_ops[key];
          stream_ops[key] = (...args) => {
            FS.forceLoadFile(node);
            return fn(...args);
          };
        });
        function writeChunks(stream, buffer, offset, length, position) {
          var contents = stream.node.contents;
          if (position >= contents.length)
            return 0;
          var size = Math.min(contents.length - position, length);
          assert(size >= 0);
          if (contents.slice) { // normal array
            for (var i = 0; i < size; i++) {
              buffer[offset + i] = contents[position + i];
            }
          } else {
            for (var i = 0; i < size; i++) { // LazyUint8Array from sync binary XHR
              buffer[offset + i] = contents.get(position + i);
            }
          }
          return size;
        }
        // use a custom read function
        stream_ops.read = (stream, buffer, offset, length, position) => {
          FS.forceLoadFile(node);
          return writeChunks(stream, buffer, offset, length, position)
        };
        // use a custom mmap function
        stream_ops.mmap = (stream, length, position, prot, flags) => {
          FS.forceLoadFile(node);
          var ptr = mmapAlloc(length);
          if (!ptr) {
            throw new FS.ErrnoError(48);
          }
          writeChunks(stream, HEAP8, ptr, length, position);
          return { ptr, allocated: true };
        };
        node.stream_ops = stream_ops;
        return node;
      },
  absolutePath() {
        abort('FS.absolutePath has been removed; use PATH_FS.resolve instead');
      },
  createFolder() {
        abort('FS.createFolder has been removed; use FS.mkdir instead');
      },
  createLink() {
        abort('FS.createLink has been removed; use FS.symlink instead');
      },
  joinPath() {
        abort('FS.joinPath has been removed; use PATH.join instead');
      },
  mmapAlloc() {
        abort('FS.mmapAlloc has been replaced by the top level function mmapAlloc');
      },
  standardizePath() {
        abort('FS.standardizePath has been removed; use PATH.normalize instead');
      },
  };
  
  var SYSCALLS = {
  DEFAULT_POLLMASK:5,
  calculateAt(dirfd, path, allowEmpty) {
        if (PATH.isAbs(path)) {
          return path;
        }
        // relative path
        var dir;
        if (dirfd === -100) {
          dir = FS.cwd();
        } else {
          var dirstream = SYSCALLS.getStreamFromFD(dirfd);
          dir = dirstream.path;
        }
        if (path.length == 0) {
          if (!allowEmpty) {
            throw new FS.ErrnoError(44);;
          }
          return dir;
        }
        return dir + '/' + path;
      },
  writeStat(buf, stat) {
        HEAP32[((buf)>>2)] = stat.dev;
        HEAP32[(((buf)+(4))>>2)] = stat.mode;
        HEAPU32[(((buf)+(8))>>2)] = stat.nlink;
        HEAP32[(((buf)+(12))>>2)] = stat.uid;
        HEAP32[(((buf)+(16))>>2)] = stat.gid;
        HEAP32[(((buf)+(20))>>2)] = stat.rdev;
        HEAP64[(((buf)+(24))>>3)] = BigInt(stat.size);
        HEAP32[(((buf)+(32))>>2)] = 4096;
        HEAP32[(((buf)+(36))>>2)] = stat.blocks;
        var atime = stat.atime.getTime();
        var mtime = stat.mtime.getTime();
        var ctime = stat.ctime.getTime();
        HEAP64[(((buf)+(40))>>3)] = BigInt(Math.floor(atime / 1000));
        HEAPU32[(((buf)+(48))>>2)] = (atime % 1000) * 1000 * 1000;
        HEAP64[(((buf)+(56))>>3)] = BigInt(Math.floor(mtime / 1000));
        HEAPU32[(((buf)+(64))>>2)] = (mtime % 1000) * 1000 * 1000;
        HEAP64[(((buf)+(72))>>3)] = BigInt(Math.floor(ctime / 1000));
        HEAPU32[(((buf)+(80))>>2)] = (ctime % 1000) * 1000 * 1000;
        HEAP64[(((buf)+(88))>>3)] = BigInt(stat.ino);
        return 0;
      },
  writeStatFs(buf, stats) {
        HEAP32[(((buf)+(4))>>2)] = stats.bsize;
        HEAP32[(((buf)+(40))>>2)] = stats.bsize;
        HEAP32[(((buf)+(8))>>2)] = stats.blocks;
        HEAP32[(((buf)+(12))>>2)] = stats.bfree;
        HEAP32[(((buf)+(16))>>2)] = stats.bavail;
        HEAP32[(((buf)+(20))>>2)] = stats.files;
        HEAP32[(((buf)+(24))>>2)] = stats.ffree;
        HEAP32[(((buf)+(28))>>2)] = stats.fsid;
        HEAP32[(((buf)+(44))>>2)] = stats.flags;  // ST_NOSUID
        HEAP32[(((buf)+(36))>>2)] = stats.namelen;
      },
  doMsync(addr, stream, len, flags, offset) {
        if (!FS.isFile(stream.node.mode)) {
          throw new FS.ErrnoError(43);
        }
        if (flags & 2) {
          // MAP_PRIVATE calls need not to be synced back to underlying fs
          return 0;
        }
        var buffer = HEAPU8.slice(addr, addr + len);
        FS.msync(stream, buffer, offset, len, flags);
      },
  getStreamFromFD(fd) {
        var stream = FS.getStreamChecked(fd);
        return stream;
      },
  varargs:undefined,
  getStr(ptr) {
        var ret = UTF8ToString(ptr);
        return ret;
      },
  };
  function ___syscall_fcntl64(fd, cmd, varargs) {
  SYSCALLS.varargs = varargs;
  try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      switch (cmd) {
        case 0: {
          var arg = syscallGetVarargI();
          if (arg < 0) {
            return -28;
          }
          while (FS.streams[arg]) {
            arg++;
          }
          var newStream;
          newStream = FS.dupStream(stream, arg);
          return newStream.fd;
        }
        case 1:
        case 2:
          return 0;  // FD_CLOEXEC makes no sense for a single process.
        case 3:
          return stream.flags;
        case 4: {
          var arg = syscallGetVarargI();
          stream.flags |= arg;
          return 0;
        }
        case 12: {
          var arg = syscallGetVarargP();
          var offset = 0;
          // We're always unlocked.
          HEAP16[(((arg)+(offset))>>1)] = 2;
          return 0;
        }
        case 13:
        case 14:
          // Pretend that the locking is successful. These are process-level locks,
          // and Emscripten programs are a single process. If we supported linking a
          // filesystem between programs, we'd need to do more here.
          // See https://github.com/emscripten-core/emscripten/issues/23697
          return 0;
      }
      return -28;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return -e.errno;
  }
  }

  
  function ___syscall_ioctl(fd, op, varargs) {
  SYSCALLS.varargs = varargs;
  try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      switch (op) {
        case 21509: {
          if (!stream.tty) return -59;
          return 0;
        }
        case 21505: {
          if (!stream.tty) return -59;
          if (stream.tty.ops.ioctl_tcgets) {
            var termios = stream.tty.ops.ioctl_tcgets(stream);
            var argp = syscallGetVarargP();
            HEAP32[((argp)>>2)] = termios.c_iflag || 0;
            HEAP32[(((argp)+(4))>>2)] = termios.c_oflag || 0;
            HEAP32[(((argp)+(8))>>2)] = termios.c_cflag || 0;
            HEAP32[(((argp)+(12))>>2)] = termios.c_lflag || 0;
            for (var i = 0; i < 32; i++) {
              HEAP8[(argp + i)+(17)] = termios.c_cc[i] || 0;
            }
            return 0;
          }
          return 0;
        }
        case 21510:
        case 21511:
        case 21512: {
          if (!stream.tty) return -59;
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21506:
        case 21507:
        case 21508: {
          if (!stream.tty) return -59;
          if (stream.tty.ops.ioctl_tcsets) {
            var argp = syscallGetVarargP();
            var c_iflag = HEAP32[((argp)>>2)];
            var c_oflag = HEAP32[(((argp)+(4))>>2)];
            var c_cflag = HEAP32[(((argp)+(8))>>2)];
            var c_lflag = HEAP32[(((argp)+(12))>>2)];
            var c_cc = []
            for (var i = 0; i < 32; i++) {
              c_cc.push(HEAP8[(argp + i)+(17)]);
            }
            return stream.tty.ops.ioctl_tcsets(stream.tty, op, { c_iflag, c_oflag, c_cflag, c_lflag, c_cc });
          }
          return 0; // no-op, not actually adjusting terminal settings
        }
        case 21519: {
          if (!stream.tty) return -59;
          var argp = syscallGetVarargP();
          HEAP32[((argp)>>2)] = 0;
          return 0;
        }
        case 21520: {
          if (!stream.tty) return -59;
          return -28; // not supported
        }
        case 21531: {
          var argp = syscallGetVarargP();
          return FS.ioctl(stream, op, argp);
        }
        case 21523: {
          // TODO: in theory we should write to the winsize struct that gets
          // passed in, but for now musl doesn't read anything on it
          if (!stream.tty) return -59;
          if (stream.tty.ops.ioctl_tiocgwinsz) {
            var winsize = stream.tty.ops.ioctl_tiocgwinsz(stream.tty);
            var argp = syscallGetVarargP();
            HEAP16[((argp)>>1)] = winsize[0];
            HEAP16[(((argp)+(2))>>1)] = winsize[1];
          }
          return 0;
        }
        case 21524: {
          // TODO: technically, this ioctl call should change the window size.
          // but, since emscripten doesn't have any concept of a terminal window
          // yet, we'll just silently throw it away as we do TIOCGWINSZ
          if (!stream.tty) return -59;
          return 0;
        }
        case 21515: {
          if (!stream.tty) return -59;
          return 0;
        }
        default: return -28; // not supported
      }
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return -e.errno;
  }
  }

  
  function ___syscall_openat(dirfd, path, flags, varargs) {
  SYSCALLS.varargs = varargs;
  try {
  
      path = SYSCALLS.getStr(path);
      path = SYSCALLS.calculateAt(dirfd, path);
      var mode = varargs ? syscallGetVarargI() : 0;
      return FS.open(path, flags, mode).fd;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return -e.errno;
  }
  }

  var __abort_js = () =>
      abort('native code called abort()');

  var getHeapMax = () =>
      // Stay one Wasm page short of 4GB: while e.g. Chrome is able to allocate
      // full 4GB Wasm memories, the size will wrap back to 0 bytes in Wasm side
      // for any code that deals with heap sizes, which would require special
      // casing all heap size related code to treat 0 specially.
      2147483648;
  
  var alignMemory = (size, alignment) => {
      assert(alignment, "alignment argument is required");
      return Math.ceil(size / alignment) * alignment;
    };
  
  var growMemory = (size) => {
      var b = wasmMemory.buffer;
      var pages = ((size - b.byteLength + 65535) / 65536) | 0;
      try {
        // round size grow request up to wasm page size (fixed 64KB per spec)
        wasmMemory.grow(pages); // .grow() takes a delta compared to the previous size
        updateMemoryViews();
        return 1 /*success*/;
      } catch(e) {
        err(`growMemory: Attempted to grow heap from ${b.byteLength} bytes to ${size} bytes, but got error: ${e}`);
      }
      // implicit 0 return to save code size (caller will cast "undefined" into 0
      // anyhow)
    };
  var _emscripten_resize_heap = (requestedSize) => {
      var oldSize = HEAPU8.length;
      // With CAN_ADDRESS_2GB or MEMORY64, pointers are already unsigned.
      requestedSize >>>= 0;
      // With multithreaded builds, races can happen (another thread might increase the size
      // in between), so return a failure, and let the caller retry.
      assert(requestedSize > oldSize);
  
      // Memory resize rules:
      // 1.  Always increase heap size to at least the requested size, rounded up
      //     to next page multiple.
      // 2a. If MEMORY_GROWTH_LINEAR_STEP == -1, excessively resize the heap
      //     geometrically: increase the heap size according to
      //     MEMORY_GROWTH_GEOMETRIC_STEP factor (default +20%), At most
      //     overreserve by MEMORY_GROWTH_GEOMETRIC_CAP bytes (default 96MB).
      // 2b. If MEMORY_GROWTH_LINEAR_STEP != -1, excessively resize the heap
      //     linearly: increase the heap size by at least
      //     MEMORY_GROWTH_LINEAR_STEP bytes.
      // 3.  Max size for the heap is capped at 2048MB-WASM_PAGE_SIZE, or by
      //     MAXIMUM_MEMORY, or by ASAN limit, depending on which is smallest
      // 4.  If we were unable to allocate as much memory, it may be due to
      //     over-eager decision to excessively reserve due to (3) above.
      //     Hence if an allocation fails, cut down on the amount of excess
      //     growth, in an attempt to succeed to perform a smaller allocation.
  
      // A limit is set for how much we can grow. We should not exceed that
      // (the wasm binary specifies it, so if we tried, we'd fail anyhow).
      var maxHeapSize = getHeapMax();
      if (requestedSize > maxHeapSize) {
        err(`Cannot enlarge memory, requested ${requestedSize} bytes, but the limit is ${maxHeapSize} bytes!`);
        return false;
      }
  
      // Loop through potential heap size increases. If we attempt a too eager
      // reservation that fails, cut down on the attempted size and reserve a
      // smaller bump instead. (max 3 times, chosen somewhat arbitrarily)
      for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
        var overGrownHeapSize = oldSize * (1 + 0.2 / cutDown); // ensure geometric growth
        // but limit overreserving (default to capping at +96MB overgrowth at most)
        overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296 );
  
        var newSize = Math.min(maxHeapSize, alignMemory(Math.max(requestedSize, overGrownHeapSize), 65536));
  
        var replacement = growMemory(newSize);
        if (replacement) {
  
          return true;
        }
      }
      err(`Failed to grow the heap from ${oldSize} bytes to ${newSize} bytes, not enough memory!`);
      return false;
    };

  function _fd_close(fd) {
  try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return e.errno;
  }
  }

  /** @param {number=} offset */
  var doReadv = (stream, iov, iovcnt, offset) => {
      var ret = 0;
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAPU32[((iov)>>2)];
        var len = HEAPU32[(((iov)+(4))>>2)];
        iov += 8;
        var curr = FS.read(stream, HEAP8, ptr, len, offset);
        if (curr < 0) return -1;
        ret += curr;
        if (curr < len) break; // nothing more to read
        if (typeof offset != 'undefined') {
          offset += curr;
        }
      }
      return ret;
    };
  
  function _fd_read(fd, iov, iovcnt, pnum) {
  try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      var num = doReadv(stream, iov, iovcnt);
      HEAPU32[((pnum)>>2)] = num;
      return 0;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return e.errno;
  }
  }

  
  var INT53_MAX = 9007199254740992;
  
  var INT53_MIN = -9007199254740992;
  var bigintToI53Checked = (num) => (num < INT53_MIN || num > INT53_MAX) ? NaN : Number(num);
  function _fd_seek(fd, offset, whence, newOffset) {
    offset = bigintToI53Checked(offset);
  
  
  try {
  
      if (isNaN(offset)) return 61;
      var stream = SYSCALLS.getStreamFromFD(fd);
      FS.llseek(stream, offset, whence);
      HEAP64[((newOffset)>>3)] = BigInt(stream.position);
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return e.errno;
  }
  ;
  }

  /** @param {number=} offset */
  var doWritev = (stream, iov, iovcnt, offset) => {
      var ret = 0;
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAPU32[((iov)>>2)];
        var len = HEAPU32[(((iov)+(4))>>2)];
        iov += 8;
        var curr = FS.write(stream, HEAP8, ptr, len, offset);
        if (curr < 0) return -1;
        ret += curr;
        if (curr < len) {
          // No more space to write.
          break;
        }
        if (typeof offset != 'undefined') {
          offset += curr;
        }
      }
      return ret;
    };
  
  function _fd_write(fd, iov, iovcnt, pnum) {
  try {
  
      var stream = SYSCALLS.getStreamFromFD(fd);
      var num = doWritev(stream, iov, iovcnt);
      HEAPU32[((pnum)>>2)] = num;
      return 0;
    } catch (e) {
    if (typeof FS == 'undefined' || !(e.name === 'ErrnoError')) throw e;
    return e.errno;
  }
  }




  var onInits = [];
  var addOnInit = (cb) => onInits.push(cb);

  var wasmTableMirror = [];
  
  /** @type {WebAssembly.Table} */
  var wasmTable;
  var getWasmTableEntry = (funcPtr) => {
      var func = wasmTableMirror[funcPtr];
      if (!func) {
        /** @suppress {checkTypes} */
        wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);
      }
      /** @suppress {checkTypes} */
      assert(wasmTable.get(funcPtr) == func, 'JavaScript-side Wasm function table mirror is out of date!');
      return func;
    };


  
  
  var stringToUTF8 = (str, outPtr, maxBytesToWrite) => {
      assert(typeof maxBytesToWrite == 'number', 'stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!');
      return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
    };
  
  /** @suppress {duplicate } */
  var stringToNewUTF8 = (str) => {
      var size = lengthBytesUTF8(str) + 1;
      var ret = _malloc(size);
      if (ret) stringToUTF8(str, ret, size);
      return ret;
    };
  var allocateUTF8 = stringToNewUTF8;

  var uleb128Encode = (n, target) => {
      assert(n < 16384);
      if (n < 128) {
        target.push(n);
      } else {
        target.push((n % 128) | 128, n >> 7);
      }
    };
  
  var sigToWasmTypes = (sig) => {
      var typeNames = {
        'i': 'i32',
        'j': 'i64',
        'f': 'f32',
        'd': 'f64',
        'e': 'externref',
        'p': 'i32',
      };
      var type = {
        parameters: [],
        results: sig[0] == 'v' ? [] : [typeNames[sig[0]]]
      };
      for (var i = 1; i < sig.length; ++i) {
        assert(sig[i] in typeNames, 'invalid signature char: ' + sig[i]);
        type.parameters.push(typeNames[sig[i]]);
      }
      return type;
    };
  
  var generateFuncType = (sig, target) => {
      var sigRet = sig.slice(0, 1);
      var sigParam = sig.slice(1);
      var typeCodes = {
        'i': 0x7f, // i32
        'p': 0x7f, // i32
        'j': 0x7e, // i64
        'f': 0x7d, // f32
        'd': 0x7c, // f64
        'e': 0x6f, // externref
      };
  
      // Parameters, length + signatures
      target.push(0x60 /* form: func */);
      uleb128Encode(sigParam.length, target);
      for (var paramType of sigParam) {
        assert(paramType in typeCodes, `invalid signature char: ${paramType}`);
        target.push(typeCodes[paramType]);
      }
  
      // Return values, length + signatures
      // With no multi-return in MVP, either 0 (void) or 1 (anything else)
      if (sigRet == 'v') {
        target.push(0x00);
      } else {
        target.push(0x01, typeCodes[sigRet]);
      }
    };
  var convertJsFunctionToWasm = (func, sig) => {
  
      // If the type reflection proposal is available, use the new
      // "WebAssembly.Function" constructor.
      // Otherwise, construct a minimal wasm module importing the JS function and
      // re-exporting it.
      if (typeof WebAssembly.Function == "function") {
        return new WebAssembly.Function(sigToWasmTypes(sig), func);
      }
  
      // The module is static, with the exception of the type section, which is
      // generated based on the signature passed in.
      var typeSectionBody = [
        0x01, // count: 1
      ];
      generateFuncType(sig, typeSectionBody);
  
      // Rest of the module is static
      var bytes = [
        0x00, 0x61, 0x73, 0x6d, // magic ("\0asm")
        0x01, 0x00, 0x00, 0x00, // version: 1
        0x01, // Type section code
      ];
      // Write the overall length of the type section followed by the body
      uleb128Encode(typeSectionBody.length, bytes);
      bytes.push(...typeSectionBody);
  
      // The rest of the module is static
      bytes.push(
        0x02, 0x07, // import section
          // (import "e" "f" (func 0 (type 0)))
          0x01, 0x01, 0x65, 0x01, 0x66, 0x00, 0x00,
        0x07, 0x05, // export section
          // (export "f" (func 0 (type 0)))
          0x01, 0x01, 0x66, 0x00, 0x00,
      );
  
      // We can compile this wasm module synchronously because it is very small.
      // This accepts an import (at "e.f"), that it reroutes to an export (at "f")
      var module = new WebAssembly.Module(new Uint8Array(bytes));
      var instance = new WebAssembly.Instance(module, { 'e': { 'f': func } });
      var wrappedFunc = instance.exports['f'];
      return wrappedFunc;
    };
  
  
  var updateTableMap = (offset, count) => {
      if (functionsInTableMap) {
        for (var i = offset; i < offset + count; i++) {
          var item = getWasmTableEntry(i);
          // Ignore null values.
          if (item) {
            functionsInTableMap.set(item, i);
          }
        }
      }
    };
  
  var functionsInTableMap;
  
  var getFunctionAddress = (func) => {
      // First, create the map if this is the first use.
      if (!functionsInTableMap) {
        functionsInTableMap = new WeakMap();
        updateTableMap(0, wasmTable.length);
      }
      return functionsInTableMap.get(func) || 0;
    };
  
  
  var freeTableIndexes = [];
  
  var getEmptyTableSlot = () => {
      // Reuse a free index if there is one, otherwise grow.
      if (freeTableIndexes.length) {
        return freeTableIndexes.pop();
      }
      // Grow the table
      try {
        /** @suppress {checkTypes} */
        wasmTable.grow(1);
      } catch (err) {
        if (!(err instanceof RangeError)) {
          throw err;
        }
        throw 'Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.';
      }
      return wasmTable.length - 1;
    };
  
  
  var setWasmTableEntry = (idx, func) => {
      /** @suppress {checkTypes} */
      wasmTable.set(idx, func);
      // With ABORT_ON_WASM_EXCEPTIONS wasmTable.get is overridden to return wrapped
      // functions so we need to call it here to retrieve the potential wrapper correctly
      // instead of just storing 'func' directly into wasmTableMirror
      /** @suppress {checkTypes} */
      wasmTableMirror[idx] = wasmTable.get(idx);
    };
  /** @param {string=} sig */
  var addFunction = (func, sig) => {
      assert(typeof func != 'undefined');
      // Check if the function is already in the table, to ensure each function
      // gets a unique index.
      var rtn = getFunctionAddress(func);
      if (rtn) {
        return rtn;
      }
  
      // It's not in the table, add it now.
  
      var ret = getEmptyTableSlot();
  
      // Set the new value.
      try {
        // Attempting to call this with JS function will cause of table.set() to fail
        setWasmTableEntry(ret, func);
      } catch (err) {
        if (!(err instanceof TypeError)) {
          throw err;
        }
        assert(typeof sig != 'undefined', 'Missing signature argument to addFunction: ' + func);
        var wrapped = convertJsFunctionToWasm(func, sig);
        setWasmTableEntry(ret, wrapped);
      }
  
      functionsInTableMap.set(func, ret);
  
      return ret;
    };

  var getCFunc = (ident) => {
      var func = Module['_' + ident]; // closure exported function
      assert(func, 'Cannot call unknown function ' + ident + ', make sure it is exported');
      return func;
    };
  
  var writeArrayToMemory = (array, buffer) => {
      assert(array.length >= 0, 'writeArrayToMemory array must have a length (should be an array or typed array)')
      HEAP8.set(array, buffer);
    };
  
  
  
  var stackAlloc = (sz) => __emscripten_stack_alloc(sz);
  var stringToUTF8OnStack = (str) => {
      var size = lengthBytesUTF8(str) + 1;
      var ret = stackAlloc(size);
      stringToUTF8(str, ret, size);
      return ret;
    };
  
  
  
  
  
    /**
     * @param {string|null=} returnType
     * @param {Array=} argTypes
     * @param {Arguments|Array=} args
     * @param {Object=} opts
     */
  var ccall = (ident, returnType, argTypes, args, opts) => {
      // For fast lookup of conversion functions
      var toC = {
        'string': (str) => {
          var ret = 0;
          if (str !== null && str !== undefined && str !== 0) { // null string
            ret = stringToUTF8OnStack(str);
          }
          return ret;
        },
        'array': (arr) => {
          var ret = stackAlloc(arr.length);
          writeArrayToMemory(arr, ret);
          return ret;
        }
      };
  
      function convertReturnValue(ret) {
        if (returnType === 'string') {
          return UTF8ToString(ret);
        }
        if (returnType === 'boolean') return Boolean(ret);
        return ret;
      }
  
      var func = getCFunc(ident);
      var cArgs = [];
      var stack = 0;
      assert(returnType !== 'array', 'Return type should not be "array".');
      if (args) {
        for (var i = 0; i < args.length; i++) {
          var converter = toC[argTypes[i]];
          if (converter) {
            if (stack === 0) stack = stackSave();
            cArgs[i] = converter(args[i]);
          } else {
            cArgs[i] = args[i];
          }
        }
      }
      var ret = func(...cArgs);
      function onDone(ret) {
        if (stack !== 0) stackRestore(stack);
        return convertReturnValue(ret);
      }
  
      ret = onDone(ret);
      return ret;
    };
  
    /**
     * @param {string=} returnType
     * @param {Array=} argTypes
     * @param {Object=} opts
     */
  var cwrap = (ident, returnType, argTypes, opts) => {
      return (...args) => ccall(ident, returnType, argTypes, args, opts);
    };


  var incrementExceptionRefcount = (ptr) => ___cxa_increment_exception_refcount(ptr);

  var decrementExceptionRefcount = (ptr) => ___cxa_decrement_exception_refcount(ptr);

  
  
  
  
  
  var getExceptionMessageCommon = (ptr) => {
      var sp = stackSave();
      var type_addr_addr = stackAlloc(4);
      var message_addr_addr = stackAlloc(4);
      ___get_exception_message(ptr, type_addr_addr, message_addr_addr);
      var type_addr = HEAPU32[((type_addr_addr)>>2)];
      var message_addr = HEAPU32[((message_addr_addr)>>2)];
      var type = UTF8ToString(type_addr);
      _free(type_addr);
      var message;
      if (message_addr) {
        message = UTF8ToString(message_addr);
        _free(message_addr);
      }
      stackRestore(sp);
      return [type, message];
    };
  var getExceptionMessage = (ptr) => getExceptionMessageCommon(ptr);

  FS.createPreloadedFile = FS_createPreloadedFile;
  FS.staticInit();;
// End JS library code

// include: postlibrary.js
// This file is included after the automatically-generated JS library code
// but before the wasm module is created.

{

  // Begin ATMODULES hooks
  if (Module['noExitRuntime']) noExitRuntime = Module['noExitRuntime'];
if (Module['preloadPlugins']) preloadPlugins = Module['preloadPlugins'];
if (Module['print']) out = Module['print'];
if (Module['printErr']) err = Module['printErr'];
if (Module['wasmBinary']) wasmBinary = Module['wasmBinary'];
  // End ATMODULES hooks

  checkIncomingModuleAPI();

  if (Module['arguments']) arguments_ = Module['arguments'];
  if (Module['thisProgram']) thisProgram = Module['thisProgram'];

  // Assertions on removed incoming Module JS APIs.
  assert(typeof Module['memoryInitializerPrefixURL'] == 'undefined', 'Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead');
  assert(typeof Module['pthreadMainPrefixURL'] == 'undefined', 'Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead');
  assert(typeof Module['cdInitializerPrefixURL'] == 'undefined', 'Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead');
  assert(typeof Module['filePackagePrefixURL'] == 'undefined', 'Module.filePackagePrefixURL option was removed, use Module.locateFile instead');
  assert(typeof Module['read'] == 'undefined', 'Module.read option was removed');
  assert(typeof Module['readAsync'] == 'undefined', 'Module.readAsync option was removed (modify readAsync in JS)');
  assert(typeof Module['readBinary'] == 'undefined', 'Module.readBinary option was removed (modify readBinary in JS)');
  assert(typeof Module['setWindowTitle'] == 'undefined', 'Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)');
  assert(typeof Module['TOTAL_MEMORY'] == 'undefined', 'Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY');
  assert(typeof Module['ENVIRONMENT'] == 'undefined', 'Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)');
  assert(typeof Module['STACK_SIZE'] == 'undefined', 'STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time')
  // If memory is defined in wasm, the user can't provide it, or set INITIAL_MEMORY
  assert(typeof Module['wasmMemory'] == 'undefined', 'Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally');
  assert(typeof Module['INITIAL_MEMORY'] == 'undefined', 'Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically');

}

// Begin runtime exports
  Module['ccall'] = ccall;
  Module['cwrap'] = cwrap;
  Module['addFunction'] = addFunction;
  Module['UTF8ToString'] = UTF8ToString;
  Module['allocateUTF8'] = allocateUTF8;
  var missingLibrarySymbols = [
  'writeI53ToI64',
  'writeI53ToI64Clamped',
  'writeI53ToI64Signaling',
  'writeI53ToU64Clamped',
  'writeI53ToU64Signaling',
  'readI53FromI64',
  'readI53FromU64',
  'convertI32PairToI53',
  'convertI32PairToI53Checked',
  'convertU32PairToI53',
  'getTempRet0',
  'zeroMemory',
  'exitJS',
  'withStackSave',
  'inetPton4',
  'inetNtop4',
  'inetPton6',
  'inetNtop6',
  'readSockaddr',
  'writeSockaddr',
  'emscriptenLog',
  'readEmAsmArgs',
  'jstoi_q',
  'getExecutableName',
  'autoResumeAudioContext',
  'getDynCaller',
  'dynCall',
  'handleException',
  'keepRuntimeAlive',
  'runtimeKeepalivePush',
  'runtimeKeepalivePop',
  'callUserCallback',
  'maybeExit',
  'asmjsMangle',
  'HandleAllocator',
  'getNativeTypeSize',
  'addOnPostCtor',
  'addOnPreMain',
  'addOnExit',
  'STACK_SIZE',
  'STACK_ALIGN',
  'POINTER_SIZE',
  'ASSERTIONS',
  'removeFunction',
  'reallyNegative',
  'unSign',
  'strLen',
  'reSign',
  'formatString',
  'intArrayToString',
  'AsciiToString',
  'stringToAscii',
  'UTF16ToString',
  'stringToUTF16',
  'lengthBytesUTF16',
  'UTF32ToString',
  'stringToUTF32',
  'lengthBytesUTF32',
  'registerKeyEventCallback',
  'maybeCStringToJsString',
  'findEventTarget',
  'getBoundingClientRect',
  'fillMouseEventData',
  'registerMouseEventCallback',
  'registerWheelEventCallback',
  'registerUiEventCallback',
  'registerFocusEventCallback',
  'fillDeviceOrientationEventData',
  'registerDeviceOrientationEventCallback',
  'fillDeviceMotionEventData',
  'registerDeviceMotionEventCallback',
  'screenOrientation',
  'fillOrientationChangeEventData',
  'registerOrientationChangeEventCallback',
  'fillFullscreenChangeEventData',
  'registerFullscreenChangeEventCallback',
  'JSEvents_requestFullscreen',
  'JSEvents_resizeCanvasForFullscreen',
  'registerRestoreOldStyle',
  'hideEverythingExceptGivenElement',
  'restoreHiddenElements',
  'setLetterbox',
  'softFullscreenResizeWebGLRenderTarget',
  'doRequestFullscreen',
  'fillPointerlockChangeEventData',
  'registerPointerlockChangeEventCallback',
  'registerPointerlockErrorEventCallback',
  'requestPointerLock',
  'fillVisibilityChangeEventData',
  'registerVisibilityChangeEventCallback',
  'registerTouchEventCallback',
  'fillGamepadEventData',
  'registerGamepadEventCallback',
  'registerBeforeUnloadEventCallback',
  'fillBatteryEventData',
  'battery',
  'registerBatteryEventCallback',
  'setCanvasElementSize',
  'getCanvasElementSize',
  'jsStackTrace',
  'getCallstack',
  'convertPCtoSourceLocation',
  'getEnvStrings',
  'checkWasiClock',
  'wasiRightsToMuslOFlags',
  'wasiOFlagsToMuslOFlags',
  'safeSetTimeout',
  'setImmediateWrapped',
  'safeRequestAnimationFrame',
  'clearImmediateWrapped',
  'registerPostMainLoop',
  'registerPreMainLoop',
  'getPromise',
  'makePromise',
  'idsToPromises',
  'makePromiseCallback',
  'Browser_asyncPrepareDataCounter',
  'isLeapYear',
  'ydayFromDate',
  'arraySum',
  'addDays',
  'getSocketFromFD',
  'getSocketAddress',
  'FS_mkdirTree',
  '_setNetworkCallback',
  'heapObjectForWebGLType',
  'toTypedArrayIndex',
  'webgl_enable_ANGLE_instanced_arrays',
  'webgl_enable_OES_vertex_array_object',
  'webgl_enable_WEBGL_draw_buffers',
  'webgl_enable_WEBGL_multi_draw',
  'webgl_enable_EXT_polygon_offset_clamp',
  'webgl_enable_EXT_clip_control',
  'webgl_enable_WEBGL_polygon_mode',
  'emscriptenWebGLGet',
  'computeUnpackAlignedImageSize',
  'colorChannelsInGlTextureFormat',
  'emscriptenWebGLGetTexPixelData',
  'emscriptenWebGLGetUniform',
  'webglGetUniformLocation',
  'webglPrepareUniformLocationsBeforeFirstUse',
  'webglGetLeftBracePos',
  'emscriptenWebGLGetVertexAttrib',
  '__glGetActiveAttribOrUniform',
  'writeGLArray',
  'registerWebGlEventCallback',
  'runAndAbortIfError',
  'ALLOC_NORMAL',
  'ALLOC_STACK',
  'allocate',
  'writeStringToMemory',
  'writeAsciiToMemory',
  'demangle',
  'stackTrace',
];
missingLibrarySymbols.forEach(missingLibrarySymbol)

  var unexportedSymbols = [
  'run',
  'addRunDependency',
  'removeRunDependency',
  'out',
  'err',
  'callMain',
  'abort',
  'wasmMemory',
  'wasmExports',
  'HEAPF32',
  'HEAPF64',
  'HEAP8',
  'HEAPU8',
  'HEAP16',
  'HEAPU16',
  'HEAP32',
  'HEAPU32',
  'HEAP64',
  'HEAPU64',
  'writeStackCookie',
  'checkStackCookie',
  'INT53_MAX',
  'INT53_MIN',
  'bigintToI53Checked',
  'stackSave',
  'stackRestore',
  'stackAlloc',
  'setTempRet0',
  'ptrToString',
  'getHeapMax',
  'growMemory',
  'ENV',
  'ERRNO_CODES',
  'strError',
  'DNS',
  'Protocols',
  'Sockets',
  'timers',
  'warnOnce',
  'readEmAsmArgsArray',
  'asyncLoad',
  'alignMemory',
  'mmapAlloc',
  'wasmTable',
  'getUniqueRunDependency',
  'noExitRuntime',
  'addOnPreRun',
  'addOnInit',
  'addOnPostRun',
  'uleb128Encode',
  'sigToWasmTypes',
  'generateFuncType',
  'convertJsFunctionToWasm',
  'freeTableIndexes',
  'functionsInTableMap',
  'getEmptyTableSlot',
  'updateTableMap',
  'getFunctionAddress',
  'setValue',
  'getValue',
  'PATH',
  'PATH_FS',
  'UTF8Decoder',
  'UTF8ArrayToString',
  'stringToUTF8Array',
  'stringToUTF8',
  'lengthBytesUTF8',
  'intArrayFromString',
  'UTF16Decoder',
  'stringToNewUTF8',
  'stringToUTF8OnStack',
  'writeArrayToMemory',
  'JSEvents',
  'specialHTMLTargets',
  'findCanvasEventTarget',
  'currentFullscreenStrategy',
  'restoreOldWindowedStyle',
  'UNWIND_CACHE',
  'ExitStatus',
  'doReadv',
  'doWritev',
  'initRandomFill',
  'randomFill',
  'emSetImmediate',
  'emClearImmediate_deps',
  'emClearImmediate',
  'promiseMap',
  'uncaughtExceptionCount',
  'exceptionLast',
  'exceptionCaught',
  'ExceptionInfo',
  'findMatchingCatch',
  'getExceptionMessageCommon',
  'Browser',
  'requestFullscreen',
  'requestFullScreen',
  'setCanvasSize',
  'getUserMedia',
  'createContext',
  'getPreloadedImageData__data',
  'wget',
  'MONTH_DAYS_REGULAR',
  'MONTH_DAYS_LEAP',
  'MONTH_DAYS_REGULAR_CUMULATIVE',
  'MONTH_DAYS_LEAP_CUMULATIVE',
  'SYSCALLS',
  'preloadPlugins',
  'FS_createPreloadedFile',
  'FS_modeStringToFlags',
  'FS_getMode',
  'FS_stdin_getChar_buffer',
  'FS_stdin_getChar',
  'FS_unlink',
  'FS_createPath',
  'FS_createDevice',
  'FS_readFile',
  'FS',
  'FS_root',
  'FS_mounts',
  'FS_devices',
  'FS_streams',
  'FS_nextInode',
  'FS_nameTable',
  'FS_currentPath',
  'FS_initialized',
  'FS_ignorePermissions',
  'FS_filesystems',
  'FS_syncFSRequests',
  'FS_readFiles',
  'FS_lookupPath',
  'FS_getPath',
  'FS_hashName',
  'FS_hashAddNode',
  'FS_hashRemoveNode',
  'FS_lookupNode',
  'FS_createNode',
  'FS_destroyNode',
  'FS_isRoot',
  'FS_isMountpoint',
  'FS_isFile',
  'FS_isDir',
  'FS_isLink',
  'FS_isChrdev',
  'FS_isBlkdev',
  'FS_isFIFO',
  'FS_isSocket',
  'FS_flagsToPermissionString',
  'FS_nodePermissions',
  'FS_mayLookup',
  'FS_mayCreate',
  'FS_mayDelete',
  'FS_mayOpen',
  'FS_checkOpExists',
  'FS_nextfd',
  'FS_getStreamChecked',
  'FS_getStream',
  'FS_createStream',
  'FS_closeStream',
  'FS_dupStream',
  'FS_doSetAttr',
  'FS_chrdev_stream_ops',
  'FS_major',
  'FS_minor',
  'FS_makedev',
  'FS_registerDevice',
  'FS_getDevice',
  'FS_getMounts',
  'FS_syncfs',
  'FS_mount',
  'FS_unmount',
  'FS_lookup',
  'FS_mknod',
  'FS_statfs',
  'FS_statfsStream',
  'FS_statfsNode',
  'FS_create',
  'FS_mkdir',
  'FS_mkdev',
  'FS_symlink',
  'FS_rename',
  'FS_rmdir',
  'FS_readdir',
  'FS_readlink',
  'FS_stat',
  'FS_fstat',
  'FS_lstat',
  'FS_doChmod',
  'FS_chmod',
  'FS_lchmod',
  'FS_fchmod',
  'FS_doChown',
  'FS_chown',
  'FS_lchown',
  'FS_fchown',
  'FS_doTruncate',
  'FS_truncate',
  'FS_ftruncate',
  'FS_utime',
  'FS_open',
  'FS_close',
  'FS_isClosed',
  'FS_llseek',
  'FS_read',
  'FS_write',
  'FS_mmap',
  'FS_msync',
  'FS_ioctl',
  'FS_writeFile',
  'FS_cwd',
  'FS_chdir',
  'FS_createDefaultDirectories',
  'FS_createDefaultDevices',
  'FS_createSpecialDirectories',
  'FS_createStandardStreams',
  'FS_staticInit',
  'FS_init',
  'FS_quit',
  'FS_findObject',
  'FS_analyzePath',
  'FS_createFile',
  'FS_createDataFile',
  'FS_forceLoadFile',
  'FS_createLazyFile',
  'FS_absolutePath',
  'FS_createFolder',
  'FS_createLink',
  'FS_joinPath',
  'FS_mmapAlloc',
  'FS_standardizePath',
  'MEMFS',
  'TTY',
  'PIPEFS',
  'SOCKFS',
  'tempFixedLengthArray',
  'miniTempWebGLFloatBuffers',
  'miniTempWebGLIntBuffers',
  'GL',
  'AL',
  'GLUT',
  'EGL',
  'GLEW',
  'IDBStore',
  'SDL',
  'SDL_gfx',
  'allocateUTF8OnStack',
  'print',
  'printErr',
  'jstoi_s',
];
unexportedSymbols.forEach(unexportedRuntimeSymbol);

  // End runtime exports
  // Begin JS library exports
  Module['incrementExceptionRefcount'] = incrementExceptionRefcount;
  Module['decrementExceptionRefcount'] = decrementExceptionRefcount;
  Module['getExceptionMessage'] = getExceptionMessage;
  // End JS library exports

// end include: postlibrary.js

function checkIncomingModuleAPI() {
  ignoredModuleProp('fetchSettings');
}

// Imports from the Wasm binary.
var _fflush = makeInvalidEarlyAccess('_fflush');
var _webidl_free = Module['_webidl_free'] = makeInvalidEarlyAccess('_webidl_free');
var _free = Module['_free'] = makeInvalidEarlyAccess('_free');
var _webidl_malloc = Module['_webidl_malloc'] = makeInvalidEarlyAccess('_webidl_malloc');
var _malloc = Module['_malloc'] = makeInvalidEarlyAccess('_malloc');
var _emscripten_bind_VoidPtr___destroy___0 = Module['_emscripten_bind_VoidPtr___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_VoidPtr___destroy___0');
var _emscripten_bind_DoublePtr___destroy___0 = Module['_emscripten_bind_DoublePtr___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_DoublePtr___destroy___0');
var _emscripten_bind_BoolVector_BoolVector_0 = Module['_emscripten_bind_BoolVector_BoolVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_BoolVector_0');
var _emscripten_bind_BoolVector_BoolVector_1 = Module['_emscripten_bind_BoolVector_BoolVector_1'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_BoolVector_1');
var _emscripten_bind_BoolVector_resize_1 = Module['_emscripten_bind_BoolVector_resize_1'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_resize_1');
var _emscripten_bind_BoolVector_get_1 = Module['_emscripten_bind_BoolVector_get_1'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_get_1');
var _emscripten_bind_BoolVector_set_2 = Module['_emscripten_bind_BoolVector_set_2'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_set_2');
var _emscripten_bind_BoolVector_size_0 = Module['_emscripten_bind_BoolVector_size_0'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector_size_0');
var _emscripten_bind_BoolVector___destroy___0 = Module['_emscripten_bind_BoolVector___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_BoolVector___destroy___0');
var _emscripten_bind_CharVector_CharVector_0 = Module['_emscripten_bind_CharVector_CharVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_CharVector_0');
var _emscripten_bind_CharVector_CharVector_1 = Module['_emscripten_bind_CharVector_CharVector_1'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_CharVector_1');
var _emscripten_bind_CharVector_resize_1 = Module['_emscripten_bind_CharVector_resize_1'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_resize_1');
var _emscripten_bind_CharVector_get_1 = Module['_emscripten_bind_CharVector_get_1'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_get_1');
var _emscripten_bind_CharVector_set_2 = Module['_emscripten_bind_CharVector_set_2'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_set_2');
var _emscripten_bind_CharVector_size_0 = Module['_emscripten_bind_CharVector_size_0'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector_size_0');
var _emscripten_bind_CharVector___destroy___0 = Module['_emscripten_bind_CharVector___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_CharVector___destroy___0');
var _emscripten_bind_IntVector_IntVector_0 = Module['_emscripten_bind_IntVector_IntVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_IntVector_0');
var _emscripten_bind_IntVector_IntVector_1 = Module['_emscripten_bind_IntVector_IntVector_1'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_IntVector_1');
var _emscripten_bind_IntVector_resize_1 = Module['_emscripten_bind_IntVector_resize_1'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_resize_1');
var _emscripten_bind_IntVector_get_1 = Module['_emscripten_bind_IntVector_get_1'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_get_1');
var _emscripten_bind_IntVector_set_2 = Module['_emscripten_bind_IntVector_set_2'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_set_2');
var _emscripten_bind_IntVector_size_0 = Module['_emscripten_bind_IntVector_size_0'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector_size_0');
var _emscripten_bind_IntVector___destroy___0 = Module['_emscripten_bind_IntVector___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_IntVector___destroy___0');
var _emscripten_bind_DoubleVector_DoubleVector_0 = Module['_emscripten_bind_DoubleVector_DoubleVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_DoubleVector_0');
var _emscripten_bind_DoubleVector_DoubleVector_1 = Module['_emscripten_bind_DoubleVector_DoubleVector_1'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_DoubleVector_1');
var _emscripten_bind_DoubleVector_resize_1 = Module['_emscripten_bind_DoubleVector_resize_1'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_resize_1');
var _emscripten_bind_DoubleVector_get_1 = Module['_emscripten_bind_DoubleVector_get_1'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_get_1');
var _emscripten_bind_DoubleVector_set_2 = Module['_emscripten_bind_DoubleVector_set_2'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_set_2');
var _emscripten_bind_DoubleVector_size_0 = Module['_emscripten_bind_DoubleVector_size_0'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector_size_0');
var _emscripten_bind_DoubleVector___destroy___0 = Module['_emscripten_bind_DoubleVector___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_DoubleVector___destroy___0');
var _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0');
var _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1');
var _emscripten_bind_SpeciesMasterTableRecordVector_resize_1 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_resize_1'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_resize_1');
var _emscripten_bind_SpeciesMasterTableRecordVector_get_1 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_get_1'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_get_1');
var _emscripten_bind_SpeciesMasterTableRecordVector_set_2 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_set_2'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_set_2');
var _emscripten_bind_SpeciesMasterTableRecordVector_size_0 = Module['_emscripten_bind_SpeciesMasterTableRecordVector_size_0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector_size_0');
var _emscripten_bind_SpeciesMasterTableRecordVector___destroy___0 = Module['_emscripten_bind_SpeciesMasterTableRecordVector___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecordVector___destroy___0');
var _emscripten_bind_AreaUnits_toBaseUnits_2 = Module['_emscripten_bind_AreaUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_AreaUnits_toBaseUnits_2');
var _emscripten_bind_AreaUnits_fromBaseUnits_2 = Module['_emscripten_bind_AreaUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_AreaUnits_fromBaseUnits_2');
var _emscripten_bind_AreaUnits___destroy___0 = Module['_emscripten_bind_AreaUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_AreaUnits___destroy___0');
var _emscripten_bind_BasalAreaUnits_toBaseUnits_2 = Module['_emscripten_bind_BasalAreaUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_BasalAreaUnits_toBaseUnits_2');
var _emscripten_bind_BasalAreaUnits_fromBaseUnits_2 = Module['_emscripten_bind_BasalAreaUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_BasalAreaUnits_fromBaseUnits_2');
var _emscripten_bind_BasalAreaUnits___destroy___0 = Module['_emscripten_bind_BasalAreaUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_BasalAreaUnits___destroy___0');
var _emscripten_bind_FractionUnits_toBaseUnits_2 = Module['_emscripten_bind_FractionUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_FractionUnits_toBaseUnits_2');
var _emscripten_bind_FractionUnits_fromBaseUnits_2 = Module['_emscripten_bind_FractionUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_FractionUnits_fromBaseUnits_2');
var _emscripten_bind_FractionUnits___destroy___0 = Module['_emscripten_bind_FractionUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_FractionUnits___destroy___0');
var _emscripten_bind_LengthUnits_toBaseUnits_2 = Module['_emscripten_bind_LengthUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_LengthUnits_toBaseUnits_2');
var _emscripten_bind_LengthUnits_fromBaseUnits_2 = Module['_emscripten_bind_LengthUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_LengthUnits_fromBaseUnits_2');
var _emscripten_bind_LengthUnits___destroy___0 = Module['_emscripten_bind_LengthUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_LengthUnits___destroy___0');
var _emscripten_bind_LoadingUnits_toBaseUnits_2 = Module['_emscripten_bind_LoadingUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_LoadingUnits_toBaseUnits_2');
var _emscripten_bind_LoadingUnits_fromBaseUnits_2 = Module['_emscripten_bind_LoadingUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_LoadingUnits_fromBaseUnits_2');
var _emscripten_bind_LoadingUnits___destroy___0 = Module['_emscripten_bind_LoadingUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_LoadingUnits___destroy___0');
var _emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2 = Module['_emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2');
var _emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2 = Module['_emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2');
var _emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0 = Module['_emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0');
var _emscripten_bind_SpeedUnits_toBaseUnits_2 = Module['_emscripten_bind_SpeedUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SpeedUnits_toBaseUnits_2');
var _emscripten_bind_SpeedUnits_fromBaseUnits_2 = Module['_emscripten_bind_SpeedUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SpeedUnits_fromBaseUnits_2');
var _emscripten_bind_SpeedUnits___destroy___0 = Module['_emscripten_bind_SpeedUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeedUnits___destroy___0');
var _emscripten_bind_PressureUnits_toBaseUnits_2 = Module['_emscripten_bind_PressureUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_PressureUnits_toBaseUnits_2');
var _emscripten_bind_PressureUnits_fromBaseUnits_2 = Module['_emscripten_bind_PressureUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_PressureUnits_fromBaseUnits_2');
var _emscripten_bind_PressureUnits___destroy___0 = Module['_emscripten_bind_PressureUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_PressureUnits___destroy___0');
var _emscripten_bind_SlopeUnits_toBaseUnits_2 = Module['_emscripten_bind_SlopeUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SlopeUnits_toBaseUnits_2');
var _emscripten_bind_SlopeUnits_fromBaseUnits_2 = Module['_emscripten_bind_SlopeUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_SlopeUnits_fromBaseUnits_2');
var _emscripten_bind_SlopeUnits___destroy___0 = Module['_emscripten_bind_SlopeUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SlopeUnits___destroy___0');
var _emscripten_bind_DensityUnits_toBaseUnits_2 = Module['_emscripten_bind_DensityUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_DensityUnits_toBaseUnits_2');
var _emscripten_bind_DensityUnits_fromBaseUnits_2 = Module['_emscripten_bind_DensityUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_DensityUnits_fromBaseUnits_2');
var _emscripten_bind_DensityUnits___destroy___0 = Module['_emscripten_bind_DensityUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_DensityUnits___destroy___0');
var _emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2 = Module['_emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2');
var _emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2 = Module['_emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2');
var _emscripten_bind_HeatOfCombustionUnits___destroy___0 = Module['_emscripten_bind_HeatOfCombustionUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_HeatOfCombustionUnits___destroy___0');
var _emscripten_bind_HeatSinkUnits_toBaseUnits_2 = Module['_emscripten_bind_HeatSinkUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSinkUnits_toBaseUnits_2');
var _emscripten_bind_HeatSinkUnits_fromBaseUnits_2 = Module['_emscripten_bind_HeatSinkUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSinkUnits_fromBaseUnits_2');
var _emscripten_bind_HeatSinkUnits___destroy___0 = Module['_emscripten_bind_HeatSinkUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSinkUnits___destroy___0');
var _emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2 = Module['_emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2');
var _emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2 = Module['_emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2');
var _emscripten_bind_HeatPerUnitAreaUnits___destroy___0 = Module['_emscripten_bind_HeatPerUnitAreaUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_HeatPerUnitAreaUnits___destroy___0');
var _emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2 = Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2');
var _emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2 = Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2');
var _emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0 = Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0');
var _emscripten_bind_FirelineIntensityUnits_toBaseUnits_2 = Module['_emscripten_bind_FirelineIntensityUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_FirelineIntensityUnits_toBaseUnits_2');
var _emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2 = Module['_emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2');
var _emscripten_bind_FirelineIntensityUnits___destroy___0 = Module['_emscripten_bind_FirelineIntensityUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_FirelineIntensityUnits___destroy___0');
var _emscripten_bind_TemperatureUnits_toBaseUnits_2 = Module['_emscripten_bind_TemperatureUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_TemperatureUnits_toBaseUnits_2');
var _emscripten_bind_TemperatureUnits_fromBaseUnits_2 = Module['_emscripten_bind_TemperatureUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_TemperatureUnits_fromBaseUnits_2');
var _emscripten_bind_TemperatureUnits___destroy___0 = Module['_emscripten_bind_TemperatureUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_TemperatureUnits___destroy___0');
var _emscripten_bind_TimeUnits_toBaseUnits_2 = Module['_emscripten_bind_TimeUnits_toBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_TimeUnits_toBaseUnits_2');
var _emscripten_bind_TimeUnits_fromBaseUnits_2 = Module['_emscripten_bind_TimeUnits_fromBaseUnits_2'] = makeInvalidEarlyAccess('_emscripten_bind_TimeUnits_fromBaseUnits_2');
var _emscripten_bind_TimeUnits___destroy___0 = Module['_emscripten_bind_TimeUnits___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_TimeUnits___destroy___0');
var _emscripten_bind_FireSize_getBackingSpreadRate_1 = Module['_emscripten_bind_FireSize_getBackingSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getBackingSpreadRate_1');
var _emscripten_bind_FireSize_getEccentricity_0 = Module['_emscripten_bind_FireSize_getEccentricity_0'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getEccentricity_0');
var _emscripten_bind_FireSize_getEllipticalA_3 = Module['_emscripten_bind_FireSize_getEllipticalA_3'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getEllipticalA_3');
var _emscripten_bind_FireSize_getEllipticalB_3 = Module['_emscripten_bind_FireSize_getEllipticalB_3'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getEllipticalB_3');
var _emscripten_bind_FireSize_getEllipticalC_3 = Module['_emscripten_bind_FireSize_getEllipticalC_3'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getEllipticalC_3');
var _emscripten_bind_FireSize_getFireArea_4 = Module['_emscripten_bind_FireSize_getFireArea_4'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getFireArea_4');
var _emscripten_bind_FireSize_getFireLength_3 = Module['_emscripten_bind_FireSize_getFireLength_3'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getFireLength_3');
var _emscripten_bind_FireSize_getFireLengthToWidthRatio_0 = Module['_emscripten_bind_FireSize_getFireLengthToWidthRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getFireLengthToWidthRatio_0');
var _emscripten_bind_FireSize_getFirePerimeter_4 = Module['_emscripten_bind_FireSize_getFirePerimeter_4'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getFirePerimeter_4');
var _emscripten_bind_FireSize_getFlankingSpreadRate_1 = Module['_emscripten_bind_FireSize_getFlankingSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getFlankingSpreadRate_1');
var _emscripten_bind_FireSize_getHeadingToBackingRatio_0 = Module['_emscripten_bind_FireSize_getHeadingToBackingRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getHeadingToBackingRatio_0');
var _emscripten_bind_FireSize_getMaxFireWidth_3 = Module['_emscripten_bind_FireSize_getMaxFireWidth_3'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_getMaxFireWidth_3');
var _emscripten_bind_FireSize_calculateFireBasicDimensions_5 = Module['_emscripten_bind_FireSize_calculateFireBasicDimensions_5'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize_calculateFireBasicDimensions_5');
var _emscripten_bind_FireSize___destroy___0 = Module['_emscripten_bind_FireSize___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_FireSize___destroy___0');
var _emscripten_bind_SIGContainAdapter_SIGContainAdapter_0 = Module['_emscripten_bind_SIGContainAdapter_SIGContainAdapter_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_SIGContainAdapter_0');
var _emscripten_bind_SIGContainAdapter_getContainmentStatus_0 = Module['_emscripten_bind_SIGContainAdapter_getContainmentStatus_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getContainmentStatus_0');
var _emscripten_bind_SIGContainAdapter_getFirePerimeterX_0 = Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterX_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFirePerimeterX_0');
var _emscripten_bind_SIGContainAdapter_getFirePerimeterY_0 = Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterY_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFirePerimeterY_0');
var _emscripten_bind_SIGContainAdapter_getAttackDistance_1 = Module['_emscripten_bind_SIGContainAdapter_getAttackDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getAttackDistance_1');
var _emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1 = Module['_emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1');
var _emscripten_bind_SIGContainAdapter_getFinalCost_0 = Module['_emscripten_bind_SIGContainAdapter_getFinalCost_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalCost_0');
var _emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1 = Module['_emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1');
var _emscripten_bind_SIGContainAdapter_getFinalFireSize_1 = Module['_emscripten_bind_SIGContainAdapter_getFinalFireSize_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalFireSize_1');
var _emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1 = Module['_emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1');
var _emscripten_bind_SIGContainAdapter_getFinalProductionRate_1 = Module['_emscripten_bind_SIGContainAdapter_getFinalProductionRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFinalProductionRate_1');
var _emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0 = Module['_emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0');
var _emscripten_bind_SIGContainAdapter_getFireBackAtReport_0 = Module['_emscripten_bind_SIGContainAdapter_getFireBackAtReport_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFireBackAtReport_0');
var _emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0 = Module['_emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0');
var _emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0 = Module['_emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0');
var _emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1 = Module['_emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1');
var _emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0 = Module['_emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0');
var _emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1 = Module['_emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1');
var _emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1 = Module['_emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1');
var _emscripten_bind_SIGContainAdapter_getReportSize_1 = Module['_emscripten_bind_SIGContainAdapter_getReportSize_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getReportSize_1');
var _emscripten_bind_SIGContainAdapter_getReportRate_1 = Module['_emscripten_bind_SIGContainAdapter_getReportRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getReportRate_1');
var _emscripten_bind_SIGContainAdapter_getTactic_0 = Module['_emscripten_bind_SIGContainAdapter_getTactic_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getTactic_0');
var _emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0 = Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0');
var _emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1 = Module['_emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1');
var _emscripten_bind_SIGContainAdapter_removeResourceAt_1 = Module['_emscripten_bind_SIGContainAdapter_removeResourceAt_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_removeResourceAt_1');
var _emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1 = Module['_emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1');
var _emscripten_bind_SIGContainAdapter_addResource_9 = Module['_emscripten_bind_SIGContainAdapter_addResource_9'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_addResource_9');
var _emscripten_bind_SIGContainAdapter_doContainRun_0 = Module['_emscripten_bind_SIGContainAdapter_doContainRun_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_doContainRun_0');
var _emscripten_bind_SIGContainAdapter_removeAllResources_0 = Module['_emscripten_bind_SIGContainAdapter_removeAllResources_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_removeAllResources_0');
var _emscripten_bind_SIGContainAdapter_setAttackDistance_2 = Module['_emscripten_bind_SIGContainAdapter_setAttackDistance_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setAttackDistance_2');
var _emscripten_bind_SIGContainAdapter_setFireStartTime_1 = Module['_emscripten_bind_SIGContainAdapter_setFireStartTime_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setFireStartTime_1');
var _emscripten_bind_SIGContainAdapter_setLwRatio_1 = Module['_emscripten_bind_SIGContainAdapter_setLwRatio_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setLwRatio_1');
var _emscripten_bind_SIGContainAdapter_setMaxFireSize_1 = Module['_emscripten_bind_SIGContainAdapter_setMaxFireSize_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setMaxFireSize_1');
var _emscripten_bind_SIGContainAdapter_setMaxFireTime_1 = Module['_emscripten_bind_SIGContainAdapter_setMaxFireTime_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setMaxFireTime_1');
var _emscripten_bind_SIGContainAdapter_setMaxSteps_1 = Module['_emscripten_bind_SIGContainAdapter_setMaxSteps_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setMaxSteps_1');
var _emscripten_bind_SIGContainAdapter_setMinSteps_1 = Module['_emscripten_bind_SIGContainAdapter_setMinSteps_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setMinSteps_1');
var _emscripten_bind_SIGContainAdapter_setReportRate_2 = Module['_emscripten_bind_SIGContainAdapter_setReportRate_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setReportRate_2');
var _emscripten_bind_SIGContainAdapter_setReportSize_2 = Module['_emscripten_bind_SIGContainAdapter_setReportSize_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setReportSize_2');
var _emscripten_bind_SIGContainAdapter_setRetry_1 = Module['_emscripten_bind_SIGContainAdapter_setRetry_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setRetry_1');
var _emscripten_bind_SIGContainAdapter_setTactic_1 = Module['_emscripten_bind_SIGContainAdapter_setTactic_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter_setTactic_1');
var _emscripten_bind_SIGContainAdapter___destroy___0 = Module['_emscripten_bind_SIGContainAdapter___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGContainAdapter___destroy___0');
var _emscripten_bind_SIGIgnite_SIGIgnite_0 = Module['_emscripten_bind_SIGIgnite_SIGIgnite_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_SIGIgnite_0');
var _emscripten_bind_SIGIgnite_initializeMembers_0 = Module['_emscripten_bind_SIGIgnite_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_initializeMembers_0');
var _emscripten_bind_SIGIgnite_getFuelBedType_0 = Module['_emscripten_bind_SIGIgnite_getFuelBedType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getFuelBedType_0');
var _emscripten_bind_SIGIgnite_getLightningChargeType_0 = Module['_emscripten_bind_SIGIgnite_getLightningChargeType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getLightningChargeType_0');
var _emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0 = Module['_emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0');
var _emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1 = Module['_emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1');
var _emscripten_bind_SIGIgnite_setAirTemperature_2 = Module['_emscripten_bind_SIGIgnite_setAirTemperature_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setAirTemperature_2');
var _emscripten_bind_SIGIgnite_setDuffDepth_2 = Module['_emscripten_bind_SIGIgnite_setDuffDepth_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setDuffDepth_2');
var _emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1 = Module['_emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1');
var _emscripten_bind_SIGIgnite_setLightningChargeType_1 = Module['_emscripten_bind_SIGIgnite_setLightningChargeType_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setLightningChargeType_1');
var _emscripten_bind_SIGIgnite_setMoistureHundredHour_2 = Module['_emscripten_bind_SIGIgnite_setMoistureHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setMoistureHundredHour_2');
var _emscripten_bind_SIGIgnite_setMoistureOneHour_2 = Module['_emscripten_bind_SIGIgnite_setMoistureOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setMoistureOneHour_2');
var _emscripten_bind_SIGIgnite_setSunShade_2 = Module['_emscripten_bind_SIGIgnite_setSunShade_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_setSunShade_2');
var _emscripten_bind_SIGIgnite_updateIgniteInputs_11 = Module['_emscripten_bind_SIGIgnite_updateIgniteInputs_11'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_updateIgniteInputs_11');
var _emscripten_bind_SIGIgnite_getAirTemperature_1 = Module['_emscripten_bind_SIGIgnite_getAirTemperature_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getAirTemperature_1');
var _emscripten_bind_SIGIgnite_getDuffDepth_1 = Module['_emscripten_bind_SIGIgnite_getDuffDepth_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getDuffDepth_1');
var _emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1 = Module['_emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1');
var _emscripten_bind_SIGIgnite_getFuelTemperature_1 = Module['_emscripten_bind_SIGIgnite_getFuelTemperature_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getFuelTemperature_1');
var _emscripten_bind_SIGIgnite_getMoistureHundredHour_1 = Module['_emscripten_bind_SIGIgnite_getMoistureHundredHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getMoistureHundredHour_1');
var _emscripten_bind_SIGIgnite_getMoistureOneHour_1 = Module['_emscripten_bind_SIGIgnite_getMoistureOneHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getMoistureOneHour_1');
var _emscripten_bind_SIGIgnite_getSunShade_1 = Module['_emscripten_bind_SIGIgnite_getSunShade_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_getSunShade_1');
var _emscripten_bind_SIGIgnite_isFuelDepthNeeded_0 = Module['_emscripten_bind_SIGIgnite_isFuelDepthNeeded_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite_isFuelDepthNeeded_0');
var _emscripten_bind_SIGIgnite___destroy___0 = Module['_emscripten_bind_SIGIgnite___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGIgnite___destroy___0');
var _emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0 = Module['_emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0');
var _emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1 = Module['_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1');
var _emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1 = Module['_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1');
var _emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0 = Module['_emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1');
var _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1 = Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1');
var _emscripten_bind_SIGMoistureScenarios___destroy___0 = Module['_emscripten_bind_SIGMoistureScenarios___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMoistureScenarios___destroy___0');
var _emscripten_bind_SIGSpot_SIGSpot_0 = Module['_emscripten_bind_SIGSpot_SIGSpot_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_SIGSpot_0');
var _emscripten_bind_SIGSpot_getDownwindCanopyMode_0 = Module['_emscripten_bind_SIGSpot_getDownwindCanopyMode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getDownwindCanopyMode_0');
var _emscripten_bind_SIGSpot_getLocation_0 = Module['_emscripten_bind_SIGSpot_getLocation_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getLocation_0');
var _emscripten_bind_SIGSpot_getTreeSpecies_0 = Module['_emscripten_bind_SIGSpot_getTreeSpecies_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getTreeSpecies_0');
var _emscripten_bind_SIGSpot_getBurningPileFlameHeight_1 = Module['_emscripten_bind_SIGSpot_getBurningPileFlameHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getBurningPileFlameHeight_1');
var _emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1 = Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1');
var _emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1 = Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1');
var _emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1');
var _emscripten_bind_SIGSpot_getDBH_1 = Module['_emscripten_bind_SIGSpot_getDBH_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getDBH_1');
var _emscripten_bind_SIGSpot_getDownwindCoverHeight_1 = Module['_emscripten_bind_SIGSpot_getDownwindCoverHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getDownwindCoverHeight_1');
var _emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1');
var _emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1');
var _emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0 = Module['_emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0');
var _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1 = Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1');
var _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1 = Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1');
var _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1');
var _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1 = Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1');
var _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1 = Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1');
var _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1');
var _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1 = Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1');
var _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1 = Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1');
var _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1');
var _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1 = Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1');
var _emscripten_bind_SIGSpot_getRidgeToValleyDistance_1 = Module['_emscripten_bind_SIGSpot_getRidgeToValleyDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getRidgeToValleyDistance_1');
var _emscripten_bind_SIGSpot_getRidgeToValleyElevation_1 = Module['_emscripten_bind_SIGSpot_getRidgeToValleyElevation_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getRidgeToValleyElevation_1');
var _emscripten_bind_SIGSpot_getSurfaceFlameLength_1 = Module['_emscripten_bind_SIGSpot_getSurfaceFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getSurfaceFlameLength_1');
var _emscripten_bind_SIGSpot_getTreeHeight_1 = Module['_emscripten_bind_SIGSpot_getTreeHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getTreeHeight_1');
var _emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1 = Module['_emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1');
var _emscripten_bind_SIGSpot_getTorchingTrees_0 = Module['_emscripten_bind_SIGSpot_getTorchingTrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_getTorchingTrees_0');
var _emscripten_bind_SIGSpot_calculateAll_0 = Module['_emscripten_bind_SIGSpot_calculateAll_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_calculateAll_0');
var _emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0 = Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0');
var _emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0 = Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0');
var _emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0 = Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0');
var _emscripten_bind_SIGSpot_initializeMembers_0 = Module['_emscripten_bind_SIGSpot_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_initializeMembers_0');
var _emscripten_bind_SIGSpot_setActiveCrownFlameLength_2 = Module['_emscripten_bind_SIGSpot_setActiveCrownFlameLength_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setActiveCrownFlameLength_2');
var _emscripten_bind_SIGSpot_setBurningPileFlameHeight_2 = Module['_emscripten_bind_SIGSpot_setBurningPileFlameHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setBurningPileFlameHeight_2');
var _emscripten_bind_SIGSpot_setDBH_2 = Module['_emscripten_bind_SIGSpot_setDBH_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setDBH_2');
var _emscripten_bind_SIGSpot_setDownwindCanopyMode_1 = Module['_emscripten_bind_SIGSpot_setDownwindCanopyMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setDownwindCanopyMode_1');
var _emscripten_bind_SIGSpot_setDownwindCoverHeight_2 = Module['_emscripten_bind_SIGSpot_setDownwindCoverHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setDownwindCoverHeight_2');
var _emscripten_bind_SIGSpot_setFireType_1 = Module['_emscripten_bind_SIGSpot_setFireType_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setFireType_1');
var _emscripten_bind_SIGSpot_setFlameLength_2 = Module['_emscripten_bind_SIGSpot_setFlameLength_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setFlameLength_2');
var _emscripten_bind_SIGSpot_setFirelineIntensity_2 = Module['_emscripten_bind_SIGSpot_setFirelineIntensity_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setFirelineIntensity_2');
var _emscripten_bind_SIGSpot_setLocation_1 = Module['_emscripten_bind_SIGSpot_setLocation_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setLocation_1');
var _emscripten_bind_SIGSpot_setRidgeToValleyDistance_2 = Module['_emscripten_bind_SIGSpot_setRidgeToValleyDistance_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setRidgeToValleyDistance_2');
var _emscripten_bind_SIGSpot_setRidgeToValleyElevation_2 = Module['_emscripten_bind_SIGSpot_setRidgeToValleyElevation_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setRidgeToValleyElevation_2');
var _emscripten_bind_SIGSpot_setTorchingTrees_1 = Module['_emscripten_bind_SIGSpot_setTorchingTrees_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setTorchingTrees_1');
var _emscripten_bind_SIGSpot_setTreeHeight_2 = Module['_emscripten_bind_SIGSpot_setTreeHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setTreeHeight_2');
var _emscripten_bind_SIGSpot_setTreeSpecies_1 = Module['_emscripten_bind_SIGSpot_setTreeSpecies_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setTreeSpecies_1');
var _emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2 = Module['_emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2');
var _emscripten_bind_SIGSpot_setWindSpeed_2 = Module['_emscripten_bind_SIGSpot_setWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setWindSpeed_2');
var _emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3 = Module['_emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3');
var _emscripten_bind_SIGSpot_setWindHeightInputMode_1 = Module['_emscripten_bind_SIGSpot_setWindHeightInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_setWindHeightInputMode_1');
var _emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12 = Module['_emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12');
var _emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12 = Module['_emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12');
var _emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16 = Module['_emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16');
var _emscripten_bind_SIGSpot___destroy___0 = Module['_emscripten_bind_SIGSpot___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSpot___destroy___0');
var _emscripten_bind_SIGFuelModels_SIGFuelModels_0 = Module['_emscripten_bind_SIGFuelModels_SIGFuelModels_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_SIGFuelModels_0');
var _emscripten_bind_SIGFuelModels_SIGFuelModels_1 = Module['_emscripten_bind_SIGFuelModels_SIGFuelModels_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_SIGFuelModels_1');
var _emscripten_bind_SIGFuelModels_equal_1 = Module['_emscripten_bind_SIGFuelModels_equal_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_equal_1');
var _emscripten_bind_SIGFuelModels_clearCustomFuelModel_1 = Module['_emscripten_bind_SIGFuelModels_clearCustomFuelModel_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_clearCustomFuelModel_1');
var _emscripten_bind_SIGFuelModels_getIsDynamic_1 = Module['_emscripten_bind_SIGFuelModels_getIsDynamic_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getIsDynamic_1');
var _emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1 = Module['_emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1');
var _emscripten_bind_SIGFuelModels_isFuelModelDefined_1 = Module['_emscripten_bind_SIGFuelModels_isFuelModelDefined_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_isFuelModelDefined_1');
var _emscripten_bind_SIGFuelModels_isFuelModelReserved_1 = Module['_emscripten_bind_SIGFuelModels_isFuelModelReserved_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_isFuelModelReserved_1');
var _emscripten_bind_SIGFuelModels_setCustomFuelModel_21 = Module['_emscripten_bind_SIGFuelModels_setCustomFuelModel_21'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_setCustomFuelModel_21');
var _emscripten_bind_SIGFuelModels_getFuelCode_1 = Module['_emscripten_bind_SIGFuelModels_getFuelCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelCode_1');
var _emscripten_bind_SIGFuelModels_getFuelName_1 = Module['_emscripten_bind_SIGFuelModels_getFuelName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelName_1');
var _emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2 = Module['_emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2');
var _emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2 = Module['_emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2');
var _emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2 = Module['_emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2');
var _emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2 = Module['_emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2');
var _emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2 = Module['_emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2');
var _emscripten_bind_SIGFuelModels_getFuelbedDepth_2 = Module['_emscripten_bind_SIGFuelModels_getFuelbedDepth_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getFuelbedDepth_2');
var _emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2 = Module['_emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2');
var _emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2 = Module['_emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2');
var _emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2 = Module['_emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2');
var _emscripten_bind_SIGFuelModels_getSavrLiveWoody_2 = Module['_emscripten_bind_SIGFuelModels_getSavrLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getSavrLiveWoody_2');
var _emscripten_bind_SIGFuelModels_getSavrOneHour_2 = Module['_emscripten_bind_SIGFuelModels_getSavrOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getSavrOneHour_2');
var _emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2 = Module['_emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2');
var _emscripten_bind_SIGFuelModels___destroy___0 = Module['_emscripten_bind_SIGFuelModels___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFuelModels___destroy___0');
var _emscripten_bind_SIGSurface_SIGSurface_1 = Module['_emscripten_bind_SIGSurface_SIGSurface_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_SIGSurface_1');
var _emscripten_bind_SIGSurface_getAspenFireSeverity_0 = Module['_emscripten_bind_SIGSurface_getAspenFireSeverity_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenFireSeverity_0');
var _emscripten_bind_SIGSurface_getChaparralFuelType_0 = Module['_emscripten_bind_SIGSurface_getChaparralFuelType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralFuelType_0');
var _emscripten_bind_SIGSurface_getMoistureInputMode_0 = Module['_emscripten_bind_SIGSurface_getMoistureInputMode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureInputMode_0');
var _emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0 = Module['_emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0');
var _emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0 = Module['_emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0');
var _emscripten_bind_SIGSurface_getWindHeightInputMode_0 = Module['_emscripten_bind_SIGSurface_getWindHeightInputMode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindHeightInputMode_0');
var _emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0 = Module['_emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0');
var _emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0 = Module['_emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0');
var _emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1 = Module['_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1');
var _emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1 = Module['_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1');
var _emscripten_bind_SIGSurface_getIsUsingChaparral_0 = Module['_emscripten_bind_SIGSurface_getIsUsingChaparral_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getIsUsingChaparral_0');
var _emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0 = Module['_emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0');
var _emscripten_bind_SIGSurface_getIsUsingWesternAspen_0 = Module['_emscripten_bind_SIGSurface_getIsUsingWesternAspen_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getIsUsingWesternAspen_0');
var _emscripten_bind_SIGSurface_isAllFuelLoadZero_1 = Module['_emscripten_bind_SIGSurface_isAllFuelLoadZero_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isAllFuelLoadZero_1');
var _emscripten_bind_SIGSurface_isFuelDynamic_1 = Module['_emscripten_bind_SIGSurface_isFuelDynamic_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isFuelDynamic_1');
var _emscripten_bind_SIGSurface_isFuelModelDefined_1 = Module['_emscripten_bind_SIGSurface_isFuelModelDefined_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isFuelModelDefined_1');
var _emscripten_bind_SIGSurface_isFuelModelReserved_1 = Module['_emscripten_bind_SIGSurface_isFuelModelReserved_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isFuelModelReserved_1');
var _emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1 = Module['_emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1');
var _emscripten_bind_SIGSurface_isUsingTwoFuelModels_0 = Module['_emscripten_bind_SIGSurface_isUsingTwoFuelModels_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_isUsingTwoFuelModels_0');
var _emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1 = Module['_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1');
var _emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1 = Module['_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1');
var _emscripten_bind_SIGSurface_calculateFlameLength_3 = Module['_emscripten_bind_SIGSurface_calculateFlameLength_3'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_calculateFlameLength_3');
var _emscripten_bind_SIGSurface_getAgeOfRough_0 = Module['_emscripten_bind_SIGSurface_getAgeOfRough_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAgeOfRough_0');
var _emscripten_bind_SIGSurface_getAspect_0 = Module['_emscripten_bind_SIGSurface_getAspect_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspect_0');
var _emscripten_bind_SIGSurface_getAspenCuringLevel_1 = Module['_emscripten_bind_SIGSurface_getAspenCuringLevel_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenCuringLevel_1');
var _emscripten_bind_SIGSurface_getAspenDBH_1 = Module['_emscripten_bind_SIGSurface_getAspenDBH_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenDBH_1');
var _emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1 = Module['_emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1');
var _emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1 = Module['_emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1');
var _emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1 = Module['_emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1');
var _emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1 = Module['_emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1');
var _emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1 = Module['_emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1');
var _emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1 = Module['_emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1');
var _emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1 = Module['_emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1');
var _emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1 = Module['_emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1');
var _emscripten_bind_SIGSurface_getBackingFirelineIntensity_1 = Module['_emscripten_bind_SIGSurface_getBackingFirelineIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getBackingFirelineIntensity_1');
var _emscripten_bind_SIGSurface_getBackingFlameLength_1 = Module['_emscripten_bind_SIGSurface_getBackingFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getBackingFlameLength_1');
var _emscripten_bind_SIGSurface_getBackingSpreadDistance_1 = Module['_emscripten_bind_SIGSurface_getBackingSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getBackingSpreadDistance_1');
var _emscripten_bind_SIGSurface_getBackingSpreadRate_1 = Module['_emscripten_bind_SIGSurface_getBackingSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getBackingSpreadRate_1');
var _emscripten_bind_SIGSurface_getBulkDensity_1 = Module['_emscripten_bind_SIGSurface_getBulkDensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getBulkDensity_1');
var _emscripten_bind_SIGSurface_getCanopyCover_1 = Module['_emscripten_bind_SIGSurface_getCanopyCover_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCanopyCover_1');
var _emscripten_bind_SIGSurface_getCanopyHeight_1 = Module['_emscripten_bind_SIGSurface_getCanopyHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCanopyHeight_1');
var _emscripten_bind_SIGSurface_getChaparralAge_1 = Module['_emscripten_bind_SIGSurface_getChaparralAge_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralAge_1');
var _emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0 = Module['_emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0');
var _emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0 = Module['_emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0');
var _emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1 = Module['_emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1');
var _emscripten_bind_SIGSurface_getChaparralDensity_3 = Module['_emscripten_bind_SIGSurface_getChaparralDensity_3'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralDensity_3');
var _emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1 = Module['_emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1');
var _emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0 = Module['_emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0');
var _emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3 = Module['_emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3');
var _emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1 = Module['_emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1');
var _emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1');
var _emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1');
var _emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1 = Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1');
var _emscripten_bind_SIGSurface_getChaparralMoisture_3 = Module['_emscripten_bind_SIGSurface_getChaparralMoisture_3'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralMoisture_3');
var _emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1');
var _emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1');
var _emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1');
var _emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2 = Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2');
var _emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1 = Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1');
var _emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1 = Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1');
var _emscripten_bind_SIGSurface_getCharacteristicSAVR_1 = Module['_emscripten_bind_SIGSurface_getCharacteristicSAVR_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCharacteristicSAVR_1');
var _emscripten_bind_SIGSurface_getCrownRatio_1 = Module['_emscripten_bind_SIGSurface_getCrownRatio_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getCrownRatio_1');
var _emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0 = Module['_emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0');
var _emscripten_bind_SIGSurface_getDirectionOfInterest_0 = Module['_emscripten_bind_SIGSurface_getDirectionOfInterest_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getDirectionOfInterest_0');
var _emscripten_bind_SIGSurface_getDirectionOfBacking_0 = Module['_emscripten_bind_SIGSurface_getDirectionOfBacking_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getDirectionOfBacking_0');
var _emscripten_bind_SIGSurface_getDirectionOfFlanking_0 = Module['_emscripten_bind_SIGSurface_getDirectionOfFlanking_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getDirectionOfFlanking_0');
var _emscripten_bind_SIGSurface_getElapsedTime_1 = Module['_emscripten_bind_SIGSurface_getElapsedTime_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getElapsedTime_1');
var _emscripten_bind_SIGSurface_getEllipticalA_1 = Module['_emscripten_bind_SIGSurface_getEllipticalA_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getEllipticalA_1');
var _emscripten_bind_SIGSurface_getEllipticalB_1 = Module['_emscripten_bind_SIGSurface_getEllipticalB_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getEllipticalB_1');
var _emscripten_bind_SIGSurface_getEllipticalC_1 = Module['_emscripten_bind_SIGSurface_getEllipticalC_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getEllipticalC_1');
var _emscripten_bind_SIGSurface_getFireLength_1 = Module['_emscripten_bind_SIGSurface_getFireLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFireLength_1');
var _emscripten_bind_SIGSurface_getMaxFireWidth_1 = Module['_emscripten_bind_SIGSurface_getMaxFireWidth_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMaxFireWidth_1');
var _emscripten_bind_SIGSurface_getFireArea_1 = Module['_emscripten_bind_SIGSurface_getFireArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFireArea_1');
var _emscripten_bind_SIGSurface_getFireEccentricity_0 = Module['_emscripten_bind_SIGSurface_getFireEccentricity_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFireEccentricity_0');
var _emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0 = Module['_emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0');
var _emscripten_bind_SIGSurface_getFirePerimeter_1 = Module['_emscripten_bind_SIGSurface_getFirePerimeter_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFirePerimeter_1');
var _emscripten_bind_SIGSurface_getFirelineIntensity_1 = Module['_emscripten_bind_SIGSurface_getFirelineIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFirelineIntensity_1');
var _emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1 = Module['_emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1');
var _emscripten_bind_SIGSurface_getFlameLength_1 = Module['_emscripten_bind_SIGSurface_getFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlameLength_1');
var _emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1 = Module['_emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1');
var _emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1 = Module['_emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1');
var _emscripten_bind_SIGSurface_getFlankingFlameLength_1 = Module['_emscripten_bind_SIGSurface_getFlankingFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlankingFlameLength_1');
var _emscripten_bind_SIGSurface_getFlankingSpreadRate_1 = Module['_emscripten_bind_SIGSurface_getFlankingSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlankingSpreadRate_1');
var _emscripten_bind_SIGSurface_getFlankingSpreadDistance_1 = Module['_emscripten_bind_SIGSurface_getFlankingSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFlankingSpreadDistance_1');
var _emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2 = Module['_emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2');
var _emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2 = Module['_emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2');
var _emscripten_bind_SIGSurface_getFuelLoadHundredHour_2 = Module['_emscripten_bind_SIGSurface_getFuelLoadHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelLoadHundredHour_2');
var _emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2 = Module['_emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2');
var _emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2 = Module['_emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2');
var _emscripten_bind_SIGSurface_getFuelLoadOneHour_2 = Module['_emscripten_bind_SIGSurface_getFuelLoadOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelLoadOneHour_2');
var _emscripten_bind_SIGSurface_getFuelLoadTenHour_2 = Module['_emscripten_bind_SIGSurface_getFuelLoadTenHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelLoadTenHour_2');
var _emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2 = Module['_emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2');
var _emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2 = Module['_emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2');
var _emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2 = Module['_emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2');
var _emscripten_bind_SIGSurface_getFuelSavrOneHour_2 = Module['_emscripten_bind_SIGSurface_getFuelSavrOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelSavrOneHour_2');
var _emscripten_bind_SIGSurface_getFuelbedDepth_2 = Module['_emscripten_bind_SIGSurface_getFuelbedDepth_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelbedDepth_2');
var _emscripten_bind_SIGSurface_getHeadingSpreadRate_1 = Module['_emscripten_bind_SIGSurface_getHeadingSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeadingSpreadRate_1');
var _emscripten_bind_SIGSurface_getHeadingToBackingRatio_0 = Module['_emscripten_bind_SIGSurface_getHeadingToBackingRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeadingToBackingRatio_0');
var _emscripten_bind_SIGSurface_getHeatPerUnitArea_1 = Module['_emscripten_bind_SIGSurface_getHeatPerUnitArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeatPerUnitArea_1');
var _emscripten_bind_SIGSurface_getHeatSink_1 = Module['_emscripten_bind_SIGSurface_getHeatSink_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeatSink_1');
var _emscripten_bind_SIGSurface_getHeatSource_1 = Module['_emscripten_bind_SIGSurface_getHeatSource_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeatSource_1');
var _emscripten_bind_SIGSurface_getHeightOfUnderstory_1 = Module['_emscripten_bind_SIGSurface_getHeightOfUnderstory_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getHeightOfUnderstory_1');
var _emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1 = Module['_emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1');
var _emscripten_bind_SIGSurface_getMidflameWindspeed_1 = Module['_emscripten_bind_SIGSurface_getMidflameWindspeed_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMidflameWindspeed_1');
var _emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1 = Module['_emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1');
var _emscripten_bind_SIGSurface_getMoistureHundredHour_1 = Module['_emscripten_bind_SIGSurface_getMoistureHundredHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureHundredHour_1');
var _emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1 = Module['_emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1');
var _emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1 = Module['_emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1');
var _emscripten_bind_SIGSurface_getMoistureLiveWoody_1 = Module['_emscripten_bind_SIGSurface_getMoistureLiveWoody_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureLiveWoody_1');
var _emscripten_bind_SIGSurface_getMoistureOneHour_1 = Module['_emscripten_bind_SIGSurface_getMoistureOneHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureOneHour_1');
var _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2');
var _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2');
var _emscripten_bind_SIGSurface_getMoistureTenHour_1 = Module['_emscripten_bind_SIGSurface_getMoistureTenHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureTenHour_1');
var _emscripten_bind_SIGSurface_getOverstoryBasalArea_1 = Module['_emscripten_bind_SIGSurface_getOverstoryBasalArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getOverstoryBasalArea_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1');
var _emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1');
var _emscripten_bind_SIGSurface_getReactionIntensity_1 = Module['_emscripten_bind_SIGSurface_getReactionIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getReactionIntensity_1');
var _emscripten_bind_SIGSurface_getResidenceTime_1 = Module['_emscripten_bind_SIGSurface_getResidenceTime_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getResidenceTime_1');
var _emscripten_bind_SIGSurface_getSlope_1 = Module['_emscripten_bind_SIGSurface_getSlope_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSlope_1');
var _emscripten_bind_SIGSurface_getSlopeFactor_0 = Module['_emscripten_bind_SIGSurface_getSlopeFactor_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSlopeFactor_0');
var _emscripten_bind_SIGSurface_getSpreadDistance_1 = Module['_emscripten_bind_SIGSurface_getSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSpreadDistance_1');
var _emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1 = Module['_emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1');
var _emscripten_bind_SIGSurface_getSpreadRate_1 = Module['_emscripten_bind_SIGSurface_getSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSpreadRate_1');
var _emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1 = Module['_emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1');
var _emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1 = Module['_emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1');
var _emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1');
var _emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1');
var _emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1 = Module['_emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1');
var _emscripten_bind_SIGSurface_getWindDirection_0 = Module['_emscripten_bind_SIGSurface_getWindDirection_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindDirection_0');
var _emscripten_bind_SIGSurface_getWindSpeed_2 = Module['_emscripten_bind_SIGSurface_getWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getWindSpeed_2');
var _emscripten_bind_SIGSurface_getAspenFuelModelNumber_0 = Module['_emscripten_bind_SIGSurface_getAspenFuelModelNumber_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getAspenFuelModelNumber_0');
var _emscripten_bind_SIGSurface_getFuelModelNumber_0 = Module['_emscripten_bind_SIGSurface_getFuelModelNumber_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelModelNumber_0');
var _emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1');
var _emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0 = Module['_emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0');
var _emscripten_bind_SIGSurface_getFuelCode_1 = Module['_emscripten_bind_SIGSurface_getFuelCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelCode_1');
var _emscripten_bind_SIGSurface_getFuelName_1 = Module['_emscripten_bind_SIGSurface_getFuelName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getFuelName_1');
var _emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1');
var _emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1');
var _emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1 = Module['_emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1');
var _emscripten_bind_SIGSurface_doSurfaceRun_0 = Module['_emscripten_bind_SIGSurface_doSurfaceRun_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_doSurfaceRun_0');
var _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2 = Module['_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2');
var _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0 = Module['_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0');
var _emscripten_bind_SIGSurface_initializeMembers_0 = Module['_emscripten_bind_SIGSurface_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_initializeMembers_0');
var _emscripten_bind_SIGSurface_setAgeOfRough_1 = Module['_emscripten_bind_SIGSurface_setAgeOfRough_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAgeOfRough_1');
var _emscripten_bind_SIGSurface_setAspect_1 = Module['_emscripten_bind_SIGSurface_setAspect_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAspect_1');
var _emscripten_bind_SIGSurface_setAspenCuringLevel_2 = Module['_emscripten_bind_SIGSurface_setAspenCuringLevel_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAspenCuringLevel_2');
var _emscripten_bind_SIGSurface_setAspenDBH_2 = Module['_emscripten_bind_SIGSurface_setAspenDBH_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAspenDBH_2');
var _emscripten_bind_SIGSurface_setAspenFireSeverity_1 = Module['_emscripten_bind_SIGSurface_setAspenFireSeverity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAspenFireSeverity_1');
var _emscripten_bind_SIGSurface_setAspenFuelModelNumber_1 = Module['_emscripten_bind_SIGSurface_setAspenFuelModelNumber_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setAspenFuelModelNumber_1');
var _emscripten_bind_SIGSurface_setCanopyCover_2 = Module['_emscripten_bind_SIGSurface_setCanopyCover_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setCanopyCover_2');
var _emscripten_bind_SIGSurface_setCanopyHeight_2 = Module['_emscripten_bind_SIGSurface_setCanopyHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setCanopyHeight_2');
var _emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2 = Module['_emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2');
var _emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1 = Module['_emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1');
var _emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1 = Module['_emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1');
var _emscripten_bind_SIGSurface_setChaparralFuelType_1 = Module['_emscripten_bind_SIGSurface_setChaparralFuelType_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setChaparralFuelType_1');
var _emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2 = Module['_emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2');
var _emscripten_bind_SIGSurface_setCrownRatio_2 = Module['_emscripten_bind_SIGSurface_setCrownRatio_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setCrownRatio_2');
var _emscripten_bind_SIGSurface_setDirectionOfInterest_1 = Module['_emscripten_bind_SIGSurface_setDirectionOfInterest_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setDirectionOfInterest_1');
var _emscripten_bind_SIGSurface_setElapsedTime_2 = Module['_emscripten_bind_SIGSurface_setElapsedTime_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setElapsedTime_2');
var _emscripten_bind_SIGSurface_setFirstFuelModelNumber_1 = Module['_emscripten_bind_SIGSurface_setFirstFuelModelNumber_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setFirstFuelModelNumber_1');
var _emscripten_bind_SIGSurface_setFuelModels_1 = Module['_emscripten_bind_SIGSurface_setFuelModels_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setFuelModels_1');
var _emscripten_bind_SIGSurface_setHeightOfUnderstory_2 = Module['_emscripten_bind_SIGSurface_setHeightOfUnderstory_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setHeightOfUnderstory_2');
var _emscripten_bind_SIGSurface_setIsUsingChaparral_1 = Module['_emscripten_bind_SIGSurface_setIsUsingChaparral_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setIsUsingChaparral_1');
var _emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1 = Module['_emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1');
var _emscripten_bind_SIGSurface_setIsUsingWesternAspen_1 = Module['_emscripten_bind_SIGSurface_setIsUsingWesternAspen_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setIsUsingWesternAspen_1');
var _emscripten_bind_SIGSurface_setMoistureDeadAggregate_2 = Module['_emscripten_bind_SIGSurface_setMoistureDeadAggregate_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureDeadAggregate_2');
var _emscripten_bind_SIGSurface_setMoistureHundredHour_2 = Module['_emscripten_bind_SIGSurface_setMoistureHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureHundredHour_2');
var _emscripten_bind_SIGSurface_setMoistureInputMode_1 = Module['_emscripten_bind_SIGSurface_setMoistureInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureInputMode_1');
var _emscripten_bind_SIGSurface_setMoistureLiveAggregate_2 = Module['_emscripten_bind_SIGSurface_setMoistureLiveAggregate_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureLiveAggregate_2');
var _emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2 = Module['_emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2');
var _emscripten_bind_SIGSurface_setMoistureLiveWoody_2 = Module['_emscripten_bind_SIGSurface_setMoistureLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureLiveWoody_2');
var _emscripten_bind_SIGSurface_setMoistureOneHour_2 = Module['_emscripten_bind_SIGSurface_setMoistureOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureOneHour_2');
var _emscripten_bind_SIGSurface_setMoistureScenarios_1 = Module['_emscripten_bind_SIGSurface_setMoistureScenarios_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureScenarios_1');
var _emscripten_bind_SIGSurface_setMoistureTenHour_2 = Module['_emscripten_bind_SIGSurface_setMoistureTenHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setMoistureTenHour_2');
var _emscripten_bind_SIGSurface_setOverstoryBasalArea_2 = Module['_emscripten_bind_SIGSurface_setOverstoryBasalArea_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setOverstoryBasalArea_2');
var _emscripten_bind_SIGSurface_setPalmettoCoverage_2 = Module['_emscripten_bind_SIGSurface_setPalmettoCoverage_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setPalmettoCoverage_2');
var _emscripten_bind_SIGSurface_setSecondFuelModelNumber_1 = Module['_emscripten_bind_SIGSurface_setSecondFuelModelNumber_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setSecondFuelModelNumber_1');
var _emscripten_bind_SIGSurface_setSlope_2 = Module['_emscripten_bind_SIGSurface_setSlope_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setSlope_2');
var _emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1 = Module['_emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1');
var _emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1 = Module['_emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1');
var _emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2 = Module['_emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2');
var _emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1 = Module['_emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1');
var _emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1 = Module['_emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1');
var _emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1 = Module['_emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1');
var _emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1 = Module['_emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1');
var _emscripten_bind_SIGSurface_setWindDirection_1 = Module['_emscripten_bind_SIGSurface_setWindDirection_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setWindDirection_1');
var _emscripten_bind_SIGSurface_setWindHeightInputMode_1 = Module['_emscripten_bind_SIGSurface_setWindHeightInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setWindHeightInputMode_1');
var _emscripten_bind_SIGSurface_setWindSpeed_2 = Module['_emscripten_bind_SIGSurface_setWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setWindSpeed_2');
var _emscripten_bind_SIGSurface_updateSurfaceInputs_21 = Module['_emscripten_bind_SIGSurface_updateSurfaceInputs_21'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_updateSurfaceInputs_21');
var _emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25 = Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25');
var _emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25 = Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25');
var _emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26 = Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26');
var _emscripten_bind_SIGSurface_setFuelModelNumber_1 = Module['_emscripten_bind_SIGSurface_setFuelModelNumber_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface_setFuelModelNumber_1');
var _emscripten_bind_SIGSurface___destroy___0 = Module['_emscripten_bind_SIGSurface___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSurface___destroy___0');
var _emscripten_bind_PalmettoGallberry_PalmettoGallberry_0 = Module['_emscripten_bind_PalmettoGallberry_PalmettoGallberry_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_PalmettoGallberry_0');
var _emscripten_bind_PalmettoGallberry_initializeMembers_0 = Module['_emscripten_bind_PalmettoGallberry_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_initializeMembers_0');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3');
var _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2 = Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2');
var _emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0 = Module['_emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0');
var _emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0 = Module['_emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0');
var _emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0 = Module['_emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0');
var _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0 = Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0');
var _emscripten_bind_PalmettoGallberry___destroy___0 = Module['_emscripten_bind_PalmettoGallberry___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_PalmettoGallberry___destroy___0');
var _emscripten_bind_WesternAspen_WesternAspen_0 = Module['_emscripten_bind_WesternAspen_WesternAspen_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_WesternAspen_0');
var _emscripten_bind_WesternAspen_initializeMembers_0 = Module['_emscripten_bind_WesternAspen_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_initializeMembers_0');
var _emscripten_bind_WesternAspen_calculateAspenMortality_3 = Module['_emscripten_bind_WesternAspen_calculateAspenMortality_3'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_calculateAspenMortality_3');
var _emscripten_bind_WesternAspen_getAspenFuelBedDepth_1 = Module['_emscripten_bind_WesternAspen_getAspenFuelBedDepth_1'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenFuelBedDepth_1');
var _emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0 = Module['_emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0');
var _emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0 = Module['_emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0');
var _emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0 = Module['_emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0');
var _emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0 = Module['_emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0');
var _emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0 = Module['_emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0');
var _emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0 = Module['_emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0');
var _emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0 = Module['_emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0');
var _emscripten_bind_WesternAspen_getAspenMortality_0 = Module['_emscripten_bind_WesternAspen_getAspenMortality_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenMortality_0');
var _emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0 = Module['_emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0');
var _emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0 = Module['_emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0');
var _emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0 = Module['_emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0');
var _emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0 = Module['_emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0');
var _emscripten_bind_WesternAspen___destroy___0 = Module['_emscripten_bind_WesternAspen___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_WesternAspen___destroy___0');
var _emscripten_bind_SIGCrown_SIGCrown_1 = Module['_emscripten_bind_SIGCrown_SIGCrown_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_SIGCrown_1');
var _emscripten_bind_SIGCrown_getFireType_0 = Module['_emscripten_bind_SIGCrown_getFireType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFireType_0');
var _emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1 = Module['_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1');
var _emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1 = Module['_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1');
var _emscripten_bind_SIGCrown_isAllFuelLoadZero_1 = Module['_emscripten_bind_SIGCrown_isAllFuelLoadZero_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_isAllFuelLoadZero_1');
var _emscripten_bind_SIGCrown_isFuelDynamic_1 = Module['_emscripten_bind_SIGCrown_isFuelDynamic_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_isFuelDynamic_1');
var _emscripten_bind_SIGCrown_isFuelModelDefined_1 = Module['_emscripten_bind_SIGCrown_isFuelModelDefined_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_isFuelModelDefined_1');
var _emscripten_bind_SIGCrown_isFuelModelReserved_1 = Module['_emscripten_bind_SIGCrown_isFuelModelReserved_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_isFuelModelReserved_1');
var _emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1 = Module['_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1');
var _emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1 = Module['_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1');
var _emscripten_bind_SIGCrown_getAspect_0 = Module['_emscripten_bind_SIGCrown_getAspect_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getAspect_0');
var _emscripten_bind_SIGCrown_getCanopyBaseHeight_1 = Module['_emscripten_bind_SIGCrown_getCanopyBaseHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCanopyBaseHeight_1');
var _emscripten_bind_SIGCrown_getCanopyBulkDensity_1 = Module['_emscripten_bind_SIGCrown_getCanopyBulkDensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCanopyBulkDensity_1');
var _emscripten_bind_SIGCrown_getCanopyCover_1 = Module['_emscripten_bind_SIGCrown_getCanopyCover_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCanopyCover_1');
var _emscripten_bind_SIGCrown_getCanopyHeight_1 = Module['_emscripten_bind_SIGCrown_getCanopyHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCanopyHeight_1');
var _emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1 = Module['_emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1');
var _emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1 = Module['_emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1');
var _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1 = Module['_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1');
var _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1 = Module['_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1');
var _emscripten_bind_SIGCrown_getCrownFireActiveRatio_0 = Module['_emscripten_bind_SIGCrown_getCrownFireActiveRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFireActiveRatio_0');
var _emscripten_bind_SIGCrown_getCrownFireArea_1 = Module['_emscripten_bind_SIGCrown_getCrownFireArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFireArea_1');
var _emscripten_bind_SIGCrown_getCrownFirePerimeter_1 = Module['_emscripten_bind_SIGCrown_getCrownFirePerimeter_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFirePerimeter_1');
var _emscripten_bind_SIGCrown_getCrownTransitionRatio_0 = Module['_emscripten_bind_SIGCrown_getCrownTransitionRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownTransitionRatio_0');
var _emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0 = Module['_emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0');
var _emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1 = Module['_emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1');
var _emscripten_bind_SIGCrown_getCrownFireSpreadRate_1 = Module['_emscripten_bind_SIGCrown_getCrownFireSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFireSpreadRate_1');
var _emscripten_bind_SIGCrown_getCrownFirelineIntensity_1 = Module['_emscripten_bind_SIGCrown_getCrownFirelineIntensity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFirelineIntensity_1');
var _emscripten_bind_SIGCrown_getCrownFlameLength_1 = Module['_emscripten_bind_SIGCrown_getCrownFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFlameLength_1');
var _emscripten_bind_SIGCrown_getCrownFractionBurned_0 = Module['_emscripten_bind_SIGCrown_getCrownFractionBurned_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownFractionBurned_0');
var _emscripten_bind_SIGCrown_getCrownRatio_1 = Module['_emscripten_bind_SIGCrown_getCrownRatio_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getCrownRatio_1');
var _emscripten_bind_SIGCrown_getFinalFirelineIntesity_1 = Module['_emscripten_bind_SIGCrown_getFinalFirelineIntesity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalFirelineIntesity_1');
var _emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1 = Module['_emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1');
var _emscripten_bind_SIGCrown_getFinalSpreadRate_1 = Module['_emscripten_bind_SIGCrown_getFinalSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalSpreadRate_1');
var _emscripten_bind_SIGCrown_getFinalSpreadDistance_1 = Module['_emscripten_bind_SIGCrown_getFinalSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalSpreadDistance_1');
var _emscripten_bind_SIGCrown_getFinalFireArea_1 = Module['_emscripten_bind_SIGCrown_getFinalFireArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalFireArea_1');
var _emscripten_bind_SIGCrown_getFinalFirePerimeter_1 = Module['_emscripten_bind_SIGCrown_getFinalFirePerimeter_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalFirePerimeter_1');
var _emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2 = Module['_emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2');
var _emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2 = Module['_emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2');
var _emscripten_bind_SIGCrown_getFuelLoadHundredHour_2 = Module['_emscripten_bind_SIGCrown_getFuelLoadHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelLoadHundredHour_2');
var _emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2 = Module['_emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2');
var _emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2 = Module['_emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2');
var _emscripten_bind_SIGCrown_getFuelLoadOneHour_2 = Module['_emscripten_bind_SIGCrown_getFuelLoadOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelLoadOneHour_2');
var _emscripten_bind_SIGCrown_getFuelLoadTenHour_2 = Module['_emscripten_bind_SIGCrown_getFuelLoadTenHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelLoadTenHour_2');
var _emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2 = Module['_emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2');
var _emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2 = Module['_emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2');
var _emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2 = Module['_emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2');
var _emscripten_bind_SIGCrown_getFuelSavrOneHour_2 = Module['_emscripten_bind_SIGCrown_getFuelSavrOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelSavrOneHour_2');
var _emscripten_bind_SIGCrown_getFuelbedDepth_2 = Module['_emscripten_bind_SIGCrown_getFuelbedDepth_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelbedDepth_2');
var _emscripten_bind_SIGCrown_getMoistureFoliar_1 = Module['_emscripten_bind_SIGCrown_getMoistureFoliar_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureFoliar_1');
var _emscripten_bind_SIGCrown_getMoistureHundredHour_1 = Module['_emscripten_bind_SIGCrown_getMoistureHundredHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureHundredHour_1');
var _emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1 = Module['_emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1');
var _emscripten_bind_SIGCrown_getMoistureLiveWoody_1 = Module['_emscripten_bind_SIGCrown_getMoistureLiveWoody_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureLiveWoody_1');
var _emscripten_bind_SIGCrown_getMoistureOneHour_1 = Module['_emscripten_bind_SIGCrown_getMoistureOneHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureOneHour_1');
var _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2');
var _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2');
var _emscripten_bind_SIGCrown_getMoistureTenHour_1 = Module['_emscripten_bind_SIGCrown_getMoistureTenHour_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureTenHour_1');
var _emscripten_bind_SIGCrown_getSlope_1 = Module['_emscripten_bind_SIGCrown_getSlope_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getSlope_1');
var _emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1 = Module['_emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1');
var _emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1 = Module['_emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1');
var _emscripten_bind_SIGCrown_getWindDirection_0 = Module['_emscripten_bind_SIGCrown_getWindDirection_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getWindDirection_0');
var _emscripten_bind_SIGCrown_getWindSpeed_2 = Module['_emscripten_bind_SIGCrown_getWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getWindSpeed_2');
var _emscripten_bind_SIGCrown_getFuelModelNumber_0 = Module['_emscripten_bind_SIGCrown_getFuelModelNumber_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelModelNumber_0');
var _emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1');
var _emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0 = Module['_emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0');
var _emscripten_bind_SIGCrown_getFuelCode_1 = Module['_emscripten_bind_SIGCrown_getFuelCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelCode_1');
var _emscripten_bind_SIGCrown_getFuelName_1 = Module['_emscripten_bind_SIGCrown_getFuelName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFuelName_1');
var _emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1');
var _emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1');
var _emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1 = Module['_emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1');
var _emscripten_bind_SIGCrown_doCrownRun_0 = Module['_emscripten_bind_SIGCrown_doCrownRun_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_doCrownRun_0');
var _emscripten_bind_SIGCrown_doCrownRunRothermel_0 = Module['_emscripten_bind_SIGCrown_doCrownRunRothermel_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_doCrownRunRothermel_0');
var _emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0 = Module['_emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0');
var _emscripten_bind_SIGCrown_initializeMembers_0 = Module['_emscripten_bind_SIGCrown_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_initializeMembers_0');
var _emscripten_bind_SIGCrown_setAspect_1 = Module['_emscripten_bind_SIGCrown_setAspect_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setAspect_1');
var _emscripten_bind_SIGCrown_setCanopyBaseHeight_2 = Module['_emscripten_bind_SIGCrown_setCanopyBaseHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCanopyBaseHeight_2');
var _emscripten_bind_SIGCrown_setCanopyBulkDensity_2 = Module['_emscripten_bind_SIGCrown_setCanopyBulkDensity_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCanopyBulkDensity_2');
var _emscripten_bind_SIGCrown_setCanopyCover_2 = Module['_emscripten_bind_SIGCrown_setCanopyCover_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCanopyCover_2');
var _emscripten_bind_SIGCrown_setCanopyHeight_2 = Module['_emscripten_bind_SIGCrown_setCanopyHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCanopyHeight_2');
var _emscripten_bind_SIGCrown_setCrownRatio_2 = Module['_emscripten_bind_SIGCrown_setCrownRatio_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCrownRatio_2');
var _emscripten_bind_SIGCrown_setFuelModelNumber_1 = Module['_emscripten_bind_SIGCrown_setFuelModelNumber_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setFuelModelNumber_1');
var _emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1 = Module['_emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1');
var _emscripten_bind_SIGCrown_setElapsedTime_2 = Module['_emscripten_bind_SIGCrown_setElapsedTime_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setElapsedTime_2');
var _emscripten_bind_SIGCrown_setFuelModels_1 = Module['_emscripten_bind_SIGCrown_setFuelModels_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setFuelModels_1');
var _emscripten_bind_SIGCrown_setMoistureDeadAggregate_2 = Module['_emscripten_bind_SIGCrown_setMoistureDeadAggregate_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureDeadAggregate_2');
var _emscripten_bind_SIGCrown_setMoistureFoliar_2 = Module['_emscripten_bind_SIGCrown_setMoistureFoliar_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureFoliar_2');
var _emscripten_bind_SIGCrown_setMoistureHundredHour_2 = Module['_emscripten_bind_SIGCrown_setMoistureHundredHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureHundredHour_2');
var _emscripten_bind_SIGCrown_setMoistureInputMode_1 = Module['_emscripten_bind_SIGCrown_setMoistureInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureInputMode_1');
var _emscripten_bind_SIGCrown_setMoistureLiveAggregate_2 = Module['_emscripten_bind_SIGCrown_setMoistureLiveAggregate_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureLiveAggregate_2');
var _emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2 = Module['_emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2');
var _emscripten_bind_SIGCrown_setMoistureLiveWoody_2 = Module['_emscripten_bind_SIGCrown_setMoistureLiveWoody_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureLiveWoody_2');
var _emscripten_bind_SIGCrown_setMoistureOneHour_2 = Module['_emscripten_bind_SIGCrown_setMoistureOneHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureOneHour_2');
var _emscripten_bind_SIGCrown_setMoistureScenarios_1 = Module['_emscripten_bind_SIGCrown_setMoistureScenarios_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureScenarios_1');
var _emscripten_bind_SIGCrown_setMoistureTenHour_2 = Module['_emscripten_bind_SIGCrown_setMoistureTenHour_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setMoistureTenHour_2');
var _emscripten_bind_SIGCrown_setSlope_2 = Module['_emscripten_bind_SIGCrown_setSlope_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setSlope_2');
var _emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1 = Module['_emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1');
var _emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1 = Module['_emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1');
var _emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1 = Module['_emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1');
var _emscripten_bind_SIGCrown_setWindDirection_1 = Module['_emscripten_bind_SIGCrown_setWindDirection_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setWindDirection_1');
var _emscripten_bind_SIGCrown_setWindHeightInputMode_1 = Module['_emscripten_bind_SIGCrown_setWindHeightInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setWindHeightInputMode_1');
var _emscripten_bind_SIGCrown_setWindSpeed_2 = Module['_emscripten_bind_SIGCrown_setWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_setWindSpeed_2');
var _emscripten_bind_SIGCrown_updateCrownInputs_25 = Module['_emscripten_bind_SIGCrown_updateCrownInputs_25'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_updateCrownInputs_25');
var _emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21 = Module['_emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21');
var _emscripten_bind_SIGCrown_getFinalFlameLength_1 = Module['_emscripten_bind_SIGCrown_getFinalFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown_getFinalFlameLength_1');
var _emscripten_bind_SIGCrown___destroy___0 = Module['_emscripten_bind_SIGCrown___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGCrown___destroy___0');
var _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0 = Module['_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0');
var _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1 = Module['_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1');
var _emscripten_bind_SpeciesMasterTableRecord___destroy___0 = Module['_emscripten_bind_SpeciesMasterTableRecord___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTableRecord___destroy___0');
var _emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0 = Module['_emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0');
var _emscripten_bind_SpeciesMasterTable_initializeMasterTable_0 = Module['_emscripten_bind_SpeciesMasterTable_initializeMasterTable_0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable_initializeMasterTable_0');
var _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1 = Module['_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1');
var _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2 = Module['_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2');
var _emscripten_bind_SpeciesMasterTable_insertRecord_17 = Module['_emscripten_bind_SpeciesMasterTable_insertRecord_17'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable_insertRecord_17');
var _emscripten_bind_SpeciesMasterTable___destroy___0 = Module['_emscripten_bind_SpeciesMasterTable___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SpeciesMasterTable___destroy___0');
var _emscripten_bind_SIGMortality_SIGMortality_1 = Module['_emscripten_bind_SIGMortality_SIGMortality_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_SIGMortality_1');
var _emscripten_bind_SIGMortality_initializeMembers_0 = Module['_emscripten_bind_SIGMortality_initializeMembers_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_initializeMembers_0');
var _emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2 = Module['_emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2');
var _emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2 = Module['_emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2');
var _emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2 = Module['_emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2');
var _emscripten_bind_SIGMortality_calculateMortality_1 = Module['_emscripten_bind_SIGMortality_calculateMortality_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_calculateMortality_1');
var _emscripten_bind_SIGMortality_calculateScorchHeight_7 = Module['_emscripten_bind_SIGMortality_calculateScorchHeight_7'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_calculateScorchHeight_7');
var _emscripten_bind_SIGMortality_calculateMortalityAllDirections_1 = Module['_emscripten_bind_SIGMortality_calculateMortalityAllDirections_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_calculateMortalityAllDirections_1');
var _emscripten_bind_SIGMortality_getRequiredFieldVector_0 = Module['_emscripten_bind_SIGMortality_getRequiredFieldVector_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getRequiredFieldVector_0');
var _emscripten_bind_SIGMortality_getBeetleDamage_0 = Module['_emscripten_bind_SIGMortality_getBeetleDamage_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBeetleDamage_0');
var _emscripten_bind_SIGMortality_getCrownDamageEquationCode_0 = Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownDamageEquationCode_0');
var _emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getCrownDamageType_0 = Module['_emscripten_bind_SIGMortality_getCrownDamageType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownDamageType_0');
var _emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getSpeciesCode_0 = Module['_emscripten_bind_SIGMortality_getSpeciesCode_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesCode_0');
var _emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getEquationType_0 = Module['_emscripten_bind_SIGMortality_getEquationType_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getEquationType_0');
var _emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getFireSeverity_0 = Module['_emscripten_bind_SIGMortality_getFireSeverity_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getFireSeverity_0');
var _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0 = Module['_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0');
var _emscripten_bind_SIGMortality_getGACCRegion_0 = Module['_emscripten_bind_SIGMortality_getGACCRegion_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getGACCRegion_0');
var _emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1 = Module['_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1');
var _emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2 = Module['_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2');
var _emscripten_bind_SIGMortality_getBarkThickness_1 = Module['_emscripten_bind_SIGMortality_getBarkThickness_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBarkThickness_1');
var _emscripten_bind_SIGMortality_getBasalAreaKillled_0 = Module['_emscripten_bind_SIGMortality_getBasalAreaKillled_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBasalAreaKillled_0');
var _emscripten_bind_SIGMortality_getBasalAreaPostfire_0 = Module['_emscripten_bind_SIGMortality_getBasalAreaPostfire_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBasalAreaPostfire_0');
var _emscripten_bind_SIGMortality_getBasalAreaPrefire_0 = Module['_emscripten_bind_SIGMortality_getBasalAreaPrefire_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBasalAreaPrefire_0');
var _emscripten_bind_SIGMortality_getBoleCharHeight_1 = Module['_emscripten_bind_SIGMortality_getBoleCharHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBoleCharHeight_1');
var _emscripten_bind_SIGMortality_getBoleCharHeightBacking_1 = Module['_emscripten_bind_SIGMortality_getBoleCharHeightBacking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBoleCharHeightBacking_1');
var _emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1 = Module['_emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1');
var _emscripten_bind_SIGMortality_getCambiumKillRating_0 = Module['_emscripten_bind_SIGMortality_getCambiumKillRating_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCambiumKillRating_0');
var _emscripten_bind_SIGMortality_getCrownDamage_0 = Module['_emscripten_bind_SIGMortality_getCrownDamage_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownDamage_0');
var _emscripten_bind_SIGMortality_getCrownRatio_1 = Module['_emscripten_bind_SIGMortality_getCrownRatio_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownRatio_1');
var _emscripten_bind_SIGMortality_getCVSorCLS_0 = Module['_emscripten_bind_SIGMortality_getCVSorCLS_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCVSorCLS_0');
var _emscripten_bind_SIGMortality_getDBH_1 = Module['_emscripten_bind_SIGMortality_getDBH_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getDBH_1');
var _emscripten_bind_SIGMortality_getFlameLength_1 = Module['_emscripten_bind_SIGMortality_getFlameLength_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getFlameLength_1');
var _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1 = Module['_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1');
var _emscripten_bind_SIGMortality_getKilledTrees_0 = Module['_emscripten_bind_SIGMortality_getKilledTrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getKilledTrees_0');
var _emscripten_bind_SIGMortality_getProbabilityOfMortality_1 = Module['_emscripten_bind_SIGMortality_getProbabilityOfMortality_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getProbabilityOfMortality_1');
var _emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1 = Module['_emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1');
var _emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1 = Module['_emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1');
var _emscripten_bind_SIGMortality_getScorchHeight_1 = Module['_emscripten_bind_SIGMortality_getScorchHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getScorchHeight_1');
var _emscripten_bind_SIGMortality_getScorchHeightBacking_1 = Module['_emscripten_bind_SIGMortality_getScorchHeightBacking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getScorchHeightBacking_1');
var _emscripten_bind_SIGMortality_getScorchHeightFlanking_1 = Module['_emscripten_bind_SIGMortality_getScorchHeightFlanking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getScorchHeightFlanking_1');
var _emscripten_bind_SIGMortality_getTotalPrefireTrees_0 = Module['_emscripten_bind_SIGMortality_getTotalPrefireTrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTotalPrefireTrees_0');
var _emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1');
var _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1');
var _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1');
var _emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1');
var _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1');
var _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1 = Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1');
var _emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1 = Module['_emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1');
var _emscripten_bind_SIGMortality_getTreeHeight_1 = Module['_emscripten_bind_SIGMortality_getTreeHeight_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getTreeHeight_1');
var _emscripten_bind_SIGMortality_postfireCanopyCover_0 = Module['_emscripten_bind_SIGMortality_postfireCanopyCover_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_postfireCanopyCover_0');
var _emscripten_bind_SIGMortality_prefireCanopyCover_0 = Module['_emscripten_bind_SIGMortality_prefireCanopyCover_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_prefireCanopyCover_0');
var _emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0 = Module['_emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0');
var _emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1 = Module['_emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1');
var _emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0 = Module['_emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0');
var _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1');
var _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2 = Module['_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2');
var _emscripten_bind_SIGMortality_setAirTemperature_2 = Module['_emscripten_bind_SIGMortality_setAirTemperature_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setAirTemperature_2');
var _emscripten_bind_SIGMortality_setBeetleDamage_1 = Module['_emscripten_bind_SIGMortality_setBeetleDamage_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setBeetleDamage_1');
var _emscripten_bind_SIGMortality_setBoleCharHeight_2 = Module['_emscripten_bind_SIGMortality_setBoleCharHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setBoleCharHeight_2');
var _emscripten_bind_SIGMortality_setCambiumKillRating_1 = Module['_emscripten_bind_SIGMortality_setCambiumKillRating_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setCambiumKillRating_1');
var _emscripten_bind_SIGMortality_setCrownDamage_1 = Module['_emscripten_bind_SIGMortality_setCrownDamage_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setCrownDamage_1');
var _emscripten_bind_SIGMortality_setCrownRatio_2 = Module['_emscripten_bind_SIGMortality_setCrownRatio_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setCrownRatio_2');
var _emscripten_bind_SIGMortality_setDBH_2 = Module['_emscripten_bind_SIGMortality_setDBH_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setDBH_2');
var _emscripten_bind_SIGMortality_setEquationType_1 = Module['_emscripten_bind_SIGMortality_setEquationType_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setEquationType_1');
var _emscripten_bind_SIGMortality_setFireSeverity_1 = Module['_emscripten_bind_SIGMortality_setFireSeverity_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setFireSeverity_1');
var _emscripten_bind_SIGMortality_setFirelineIntensity_2 = Module['_emscripten_bind_SIGMortality_setFirelineIntensity_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setFirelineIntensity_2');
var _emscripten_bind_SIGMortality_setFlameLength_2 = Module['_emscripten_bind_SIGMortality_setFlameLength_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setFlameLength_2');
var _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1 = Module['_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1');
var _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2 = Module['_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2');
var _emscripten_bind_SIGMortality_setMidFlameWindSpeed_2 = Module['_emscripten_bind_SIGMortality_setMidFlameWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setMidFlameWindSpeed_2');
var _emscripten_bind_SIGMortality_setGACCRegion_1 = Module['_emscripten_bind_SIGMortality_setGACCRegion_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setGACCRegion_1');
var _emscripten_bind_SIGMortality_setScorchHeight_2 = Module['_emscripten_bind_SIGMortality_setScorchHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setScorchHeight_2');
var _emscripten_bind_SIGMortality_setSpeciesCode_1 = Module['_emscripten_bind_SIGMortality_setSpeciesCode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSpeciesCode_1');
var _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2');
var _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2');
var _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2');
var _emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2');
var _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2');
var _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2');
var _emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2 = Module['_emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2');
var _emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2 = Module['_emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2');
var _emscripten_bind_SIGMortality_setTreeHeight_2 = Module['_emscripten_bind_SIGMortality_setTreeHeight_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setTreeHeight_2');
var _emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1 = Module['_emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1');
var _emscripten_bind_SIGMortality_setWindHeightInputMode_1 = Module['_emscripten_bind_SIGMortality_setWindHeightInputMode_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setWindHeightInputMode_1');
var _emscripten_bind_SIGMortality_setWindSpeed_2 = Module['_emscripten_bind_SIGMortality_setWindSpeed_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setWindSpeed_2');
var _emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4 = Module['_emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4');
var _emscripten_bind_SIGMortality___destroy___0 = Module['_emscripten_bind_SIGMortality___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGMortality___destroy___0');
var _emscripten_bind_WindSpeedUtility_WindSpeedUtility_0 = Module['_emscripten_bind_WindSpeedUtility_WindSpeedUtility_0'] = makeInvalidEarlyAccess('_emscripten_bind_WindSpeedUtility_WindSpeedUtility_0');
var _emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2 = Module['_emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2'] = makeInvalidEarlyAccess('_emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2');
var _emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1 = Module['_emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1'] = makeInvalidEarlyAccess('_emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1');
var _emscripten_bind_WindSpeedUtility___destroy___0 = Module['_emscripten_bind_WindSpeedUtility___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_WindSpeedUtility___destroy___0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0');
var _emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0 = Module['_emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0');
var _emscripten_bind_SIGSlopeTool_SIGSlopeTool_0 = Module['_emscripten_bind_SIGSlopeTool_SIGSlopeTool_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_SIGSlopeTool_0');
var _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1 = Module['_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1');
var _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistance_2 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistance_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistance_2');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1');
var _emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1 = Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1');
var _emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1 = Module['_emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1');
var _emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1 = Module['_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1');
var _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1 = Module['_emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1');
var _emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1 = Module['_emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1');
var _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1 = Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1');
var _emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1 = Module['_emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1');
var _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0 = Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0');
var _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0 = Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0');
var _emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0 = Module['_emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0');
var _emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0 = Module['_emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0');
var _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1 = Module['_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1');
var _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0 = Module['_emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0');
var _emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0 = Module['_emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0');
var _emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2 = Module['_emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2');
var _emscripten_bind_SIGSlopeTool_setContourInterval_2 = Module['_emscripten_bind_SIGSlopeTool_setContourInterval_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setContourInterval_2');
var _emscripten_bind_SIGSlopeTool_setMapDistance_2 = Module['_emscripten_bind_SIGSlopeTool_setMapDistance_2'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setMapDistance_2');
var _emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1 = Module['_emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1');
var _emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1 = Module['_emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1');
var _emscripten_bind_SIGSlopeTool_setNumberOfContours_1 = Module['_emscripten_bind_SIGSlopeTool_setNumberOfContours_1'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool_setNumberOfContours_1');
var _emscripten_bind_SIGSlopeTool___destroy___0 = Module['_emscripten_bind_SIGSlopeTool___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_SIGSlopeTool___destroy___0');
var _emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0 = Module['_emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0');
var _emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0 = Module['_emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0');
var _emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2 = Module['_emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2');
var _emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2 = Module['_emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2');
var _emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1 = Module['_emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1');
var _emscripten_bind_VaporPressureDeficitCalculator___destroy___0 = Module['_emscripten_bind_VaporPressureDeficitCalculator___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_VaporPressureDeficitCalculator___destroy___0');
var _emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0 = Module['_emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0');
var _emscripten_bind_RelativeHumidityTool_calculate_0 = Module['_emscripten_bind_RelativeHumidityTool_calculate_0'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_calculate_0');
var _emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1 = Module['_emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1');
var _emscripten_bind_RelativeHumidityTool_getSiteElevation_1 = Module['_emscripten_bind_RelativeHumidityTool_getSiteElevation_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getSiteElevation_1');
var _emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1 = Module['_emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1');
var _emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1 = Module['_emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1');
var _emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1 = Module['_emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1');
var _emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1 = Module['_emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1');
var _emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2 = Module['_emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2');
var _emscripten_bind_RelativeHumidityTool_setSiteElevation_2 = Module['_emscripten_bind_RelativeHumidityTool_setSiteElevation_2'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_setSiteElevation_2');
var _emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2 = Module['_emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2');
var _emscripten_bind_RelativeHumidityTool___destroy___0 = Module['_emscripten_bind_RelativeHumidityTool___destroy___0'] = makeInvalidEarlyAccess('_emscripten_bind_RelativeHumidityTool___destroy___0');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_Acres = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_Acres'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_Acres');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles');
var _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers = Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers'] = makeInvalidEarlyAccess('_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers');
var _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre = Module['_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre'] = makeInvalidEarlyAccess('_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre');
var _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare = Module['_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare'] = makeInvalidEarlyAccess('_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare');
var _emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction = Module['_emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction'] = makeInvalidEarlyAccess('_emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction');
var _emscripten_enum_FractionUnits_FractionUnitsEnum_Percent = Module['_emscripten_enum_FractionUnits_FractionUnitsEnum_Percent'] = makeInvalidEarlyAccess('_emscripten_enum_FractionUnits_FractionUnitsEnum_Percent');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Feet = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Feet'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Feet');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Inches = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Inches'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Inches');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Meters = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Meters'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Meters');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Chains = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Chains'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Chains');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Miles = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Miles'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Miles');
var _emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers = Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers'] = makeInvalidEarlyAccess('_emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers');
var _emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot = Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot'] = makeInvalidEarlyAccess('_emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot');
var _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre = Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre'] = makeInvalidEarlyAccess('_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre');
var _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare = Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare'] = makeInvalidEarlyAccess('_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare');
var _emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter = Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter'] = makeInvalidEarlyAccess('_emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter');
var _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet = Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet');
var _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters = Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters');
var _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches = Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches');
var _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters = Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour');
var _emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour = Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour'] = makeInvalidEarlyAccess('_emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_Bar = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Bar'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_Bar');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere');
var _emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch = Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch'] = makeInvalidEarlyAccess('_emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch');
var _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees = Module['_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees'] = makeInvalidEarlyAccess('_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees');
var _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent = Module['_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent'] = makeInvalidEarlyAccess('_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent');
var _emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot = Module['_emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot'] = makeInvalidEarlyAccess('_emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot');
var _emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter = Module['_emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter'] = makeInvalidEarlyAccess('_emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter');
var _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound = Module['_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound'] = makeInvalidEarlyAccess('_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound');
var _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram = Module['_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram'] = makeInvalidEarlyAccess('_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram');
var _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot = Module['_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot');
var _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter = Module['_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter');
var _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot = Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot'] = makeInvalidEarlyAccess('_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot');
var _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter = Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter'] = makeInvalidEarlyAccess('_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter');
var _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter = Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter'] = makeInvalidEarlyAccess('_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter');
var _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute = Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute');
var _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond = Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond');
var _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond = Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond');
var _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute = Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute');
var _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter = Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter'] = makeInvalidEarlyAccess('_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter');
var _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond = Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond'] = makeInvalidEarlyAccess('_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond');
var _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute = Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute');
var _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond = Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond'] = makeInvalidEarlyAccess('_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond');
var _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute = Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute'] = makeInvalidEarlyAccess('_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute');
var _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter = Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter'] = makeInvalidEarlyAccess('_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter');
var _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit = Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit'] = makeInvalidEarlyAccess('_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit');
var _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius = Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius'] = makeInvalidEarlyAccess('_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius');
var _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin = Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin'] = makeInvalidEarlyAccess('_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin');
var _emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes = Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes'] = makeInvalidEarlyAccess('_emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes');
var _emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds = Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds'] = makeInvalidEarlyAccess('_emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds');
var _emscripten_enum_TimeUnits_TimeUnitsEnum_Hours = Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Hours'] = makeInvalidEarlyAccess('_emscripten_enum_TimeUnits_TimeUnitsEnum_Hours');
var _emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack = Module['_emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack'] = makeInvalidEarlyAccess('_emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack');
var _emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack = Module['_emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack'] = makeInvalidEarlyAccess('_emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Unreported = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Unreported'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Unreported');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Reported = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Reported'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Reported');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Attacked = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Attacked'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Attacked');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Contained = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Contained'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Contained');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Overrun = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Overrun'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Overrun');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted');
var _emscripten_enum_ContainStatus_ContainStatusEnum_Overflow = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Overflow'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_Overflow');
var _emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded');
var _emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded = Module['_emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded'] = makeInvalidEarlyAccess('_emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded');
var _emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank = Module['_emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank'] = makeInvalidEarlyAccess('_emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank');
var _emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank = Module['_emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank'] = makeInvalidEarlyAccess('_emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank');
var _emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks = Module['_emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks'] = makeInvalidEarlyAccess('_emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks');
var _emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank = Module['_emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank'] = makeInvalidEarlyAccess('_emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed');
var _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss = Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss'] = makeInvalidEarlyAccess('_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss');
var _emscripten_enum_LightningCharge_LightningChargeEnum_Negative = Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Negative'] = makeInvalidEarlyAccess('_emscripten_enum_LightningCharge_LightningChargeEnum_Negative');
var _emscripten_enum_LightningCharge_LightningChargeEnum_Positive = Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Positive'] = makeInvalidEarlyAccess('_emscripten_enum_LightningCharge_LightningChargeEnum_Positive');
var _emscripten_enum_LightningCharge_LightningChargeEnum_Unknown = Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Unknown'] = makeInvalidEarlyAccess('_emscripten_enum_LightningCharge_LightningChargeEnum_Unknown');
var _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED = Module['_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED'] = makeInvalidEarlyAccess('_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED');
var _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN = Module['_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN'] = makeInvalidEarlyAccess('_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE');
var _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE = Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE'] = makeInvalidEarlyAccess('_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE');
var _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD = Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD'] = makeInvalidEarlyAccess('_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD');
var _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM = Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM'] = makeInvalidEarlyAccess('_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM');
var _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD = Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD'] = makeInvalidEarlyAccess('_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD');
var _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP = Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP'] = makeInvalidEarlyAccess('_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP');
var _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead = Module['_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead'] = makeInvalidEarlyAccess('_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead');
var _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live = Module['_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live'] = makeInvalidEarlyAccess('_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses');
var _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels = Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels'] = makeInvalidEarlyAccess('_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels');
var _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low = Module['_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low'] = makeInvalidEarlyAccess('_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low');
var _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate = Module['_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate'] = makeInvalidEarlyAccess('_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate');
var _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet = Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet'] = makeInvalidEarlyAccess('_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet');
var _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise = Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise'] = makeInvalidEarlyAccess('_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise');
var _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush = Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush'] = makeInvalidEarlyAccess('_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush');
var _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad = Module['_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad'] = makeInvalidEarlyAccess('_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad');
var _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType = Module['_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType'] = makeInvalidEarlyAccess('_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType');
var _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass = Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass');
var _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate = Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate');
var _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass = Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass');
var _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass = Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass');
var _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario = Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate');
var _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate = Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate'] = makeInvalidEarlyAccess('_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate');
var _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint = Module['_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint');
var _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter = Module['_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter');
var _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod = Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod'] = makeInvalidEarlyAccess('_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod');
var _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic = Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic'] = makeInvalidEarlyAccess('_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic');
var _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic = Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic'] = makeInvalidEarlyAccess('_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic');
var _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional = Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional'] = makeInvalidEarlyAccess('_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional');
var _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered = Module['_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered'] = makeInvalidEarlyAccess('_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered');
var _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered = Module['_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered'] = makeInvalidEarlyAccess('_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered');
var _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput = Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput'] = makeInvalidEarlyAccess('_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput');
var _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio = Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio'] = makeInvalidEarlyAccess('_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio');
var _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio = Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio'] = makeInvalidEarlyAccess('_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio');
var _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope = Module['_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope'] = makeInvalidEarlyAccess('_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope');
var _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth = Module['_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth'] = makeInvalidEarlyAccess('_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth');
var _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame = Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame'] = makeInvalidEarlyAccess('_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame');
var _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot = Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot'] = makeInvalidEarlyAccess('_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot');
var _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter = Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter'] = makeInvalidEarlyAccess('_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter');
var _emscripten_enum_WindUpslopeAlignmentMode_NotAligned = Module['_emscripten_enum_WindUpslopeAlignmentMode_NotAligned'] = makeInvalidEarlyAccess('_emscripten_enum_WindUpslopeAlignmentMode_NotAligned');
var _emscripten_enum_WindUpslopeAlignmentMode_Aligned = Module['_emscripten_enum_WindUpslopeAlignmentMode_Aligned'] = makeInvalidEarlyAccess('_emscripten_enum_WindUpslopeAlignmentMode_Aligned');
var _emscripten_enum_SurfaceRunInDirectionOf_MaxSpread = Module['_emscripten_enum_SurfaceRunInDirectionOf_MaxSpread'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceRunInDirectionOf_MaxSpread');
var _emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest = Module['_emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest');
var _emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking = Module['_emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking'] = makeInvalidEarlyAccess('_emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking');
var _emscripten_enum_FireType_FireTypeEnum_Surface = Module['_emscripten_enum_FireType_FireTypeEnum_Surface'] = makeInvalidEarlyAccess('_emscripten_enum_FireType_FireTypeEnum_Surface');
var _emscripten_enum_FireType_FireTypeEnum_Torching = Module['_emscripten_enum_FireType_FireTypeEnum_Torching'] = makeInvalidEarlyAccess('_emscripten_enum_FireType_FireTypeEnum_Torching');
var _emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire = Module['_emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire'] = makeInvalidEarlyAccess('_emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire');
var _emscripten_enum_FireType_FireTypeEnum_Crowning = Module['_emscripten_enum_FireType_FireTypeEnum_Crowning'] = makeInvalidEarlyAccess('_emscripten_enum_FireType_FireTypeEnum_Crowning');
var _emscripten_enum_BeetleDamage_not_set = Module['_emscripten_enum_BeetleDamage_not_set'] = makeInvalidEarlyAccess('_emscripten_enum_BeetleDamage_not_set');
var _emscripten_enum_BeetleDamage_no = Module['_emscripten_enum_BeetleDamage_no'] = makeInvalidEarlyAccess('_emscripten_enum_BeetleDamage_no');
var _emscripten_enum_BeetleDamage_yes = Module['_emscripten_enum_BeetleDamage_yes'] = makeInvalidEarlyAccess('_emscripten_enum_BeetleDamage_yes');
var _emscripten_enum_CrownFireCalculationMethod_rothermel = Module['_emscripten_enum_CrownFireCalculationMethod_rothermel'] = makeInvalidEarlyAccess('_emscripten_enum_CrownFireCalculationMethod_rothermel');
var _emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt = Module['_emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt'] = makeInvalidEarlyAccess('_emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt');
var _emscripten_enum_CrownDamageEquationCode_not_set = Module['_emscripten_enum_CrownDamageEquationCode_not_set'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_not_set');
var _emscripten_enum_CrownDamageEquationCode_white_fir = Module['_emscripten_enum_CrownDamageEquationCode_white_fir'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_white_fir');
var _emscripten_enum_CrownDamageEquationCode_subalpine_fir = Module['_emscripten_enum_CrownDamageEquationCode_subalpine_fir'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_subalpine_fir');
var _emscripten_enum_CrownDamageEquationCode_incense_cedar = Module['_emscripten_enum_CrownDamageEquationCode_incense_cedar'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_incense_cedar');
var _emscripten_enum_CrownDamageEquationCode_western_larch = Module['_emscripten_enum_CrownDamageEquationCode_western_larch'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_western_larch');
var _emscripten_enum_CrownDamageEquationCode_whitebark_pine = Module['_emscripten_enum_CrownDamageEquationCode_whitebark_pine'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_whitebark_pine');
var _emscripten_enum_CrownDamageEquationCode_engelmann_spruce = Module['_emscripten_enum_CrownDamageEquationCode_engelmann_spruce'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_engelmann_spruce');
var _emscripten_enum_CrownDamageEquationCode_sugar_pine = Module['_emscripten_enum_CrownDamageEquationCode_sugar_pine'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_sugar_pine');
var _emscripten_enum_CrownDamageEquationCode_red_fir = Module['_emscripten_enum_CrownDamageEquationCode_red_fir'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_red_fir');
var _emscripten_enum_CrownDamageEquationCode_ponderosa_pine = Module['_emscripten_enum_CrownDamageEquationCode_ponderosa_pine'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_ponderosa_pine');
var _emscripten_enum_CrownDamageEquationCode_ponderosa_kill = Module['_emscripten_enum_CrownDamageEquationCode_ponderosa_kill'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_ponderosa_kill');
var _emscripten_enum_CrownDamageEquationCode_douglas_fir = Module['_emscripten_enum_CrownDamageEquationCode_douglas_fir'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageEquationCode_douglas_fir');
var _emscripten_enum_CrownDamageType_not_set = Module['_emscripten_enum_CrownDamageType_not_set'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageType_not_set');
var _emscripten_enum_CrownDamageType_crown_length = Module['_emscripten_enum_CrownDamageType_crown_length'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageType_crown_length');
var _emscripten_enum_CrownDamageType_crown_volume = Module['_emscripten_enum_CrownDamageType_crown_volume'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageType_crown_volume');
var _emscripten_enum_CrownDamageType_crown_kill = Module['_emscripten_enum_CrownDamageType_crown_kill'] = makeInvalidEarlyAccess('_emscripten_enum_CrownDamageType_crown_kill');
var _emscripten_enum_EquationType_not_set = Module['_emscripten_enum_EquationType_not_set'] = makeInvalidEarlyAccess('_emscripten_enum_EquationType_not_set');
var _emscripten_enum_EquationType_crown_scorch = Module['_emscripten_enum_EquationType_crown_scorch'] = makeInvalidEarlyAccess('_emscripten_enum_EquationType_crown_scorch');
var _emscripten_enum_EquationType_bole_char = Module['_emscripten_enum_EquationType_bole_char'] = makeInvalidEarlyAccess('_emscripten_enum_EquationType_bole_char');
var _emscripten_enum_EquationType_crown_damage = Module['_emscripten_enum_EquationType_crown_damage'] = makeInvalidEarlyAccess('_emscripten_enum_EquationType_crown_damage');
var _emscripten_enum_FireSeverity_not_set = Module['_emscripten_enum_FireSeverity_not_set'] = makeInvalidEarlyAccess('_emscripten_enum_FireSeverity_not_set');
var _emscripten_enum_FireSeverity_empty = Module['_emscripten_enum_FireSeverity_empty'] = makeInvalidEarlyAccess('_emscripten_enum_FireSeverity_empty');
var _emscripten_enum_FireSeverity_low = Module['_emscripten_enum_FireSeverity_low'] = makeInvalidEarlyAccess('_emscripten_enum_FireSeverity_low');
var _emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length = Module['_emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length'] = makeInvalidEarlyAccess('_emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length');
var _emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height = Module['_emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height'] = makeInvalidEarlyAccess('_emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height');
var _emscripten_enum_GACC_NotSet = Module['_emscripten_enum_GACC_NotSet'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_NotSet');
var _emscripten_enum_GACC_Alaska = Module['_emscripten_enum_GACC_Alaska'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_Alaska');
var _emscripten_enum_GACC_California = Module['_emscripten_enum_GACC_California'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_California');
var _emscripten_enum_GACC_EasternArea = Module['_emscripten_enum_GACC_EasternArea'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_EasternArea');
var _emscripten_enum_GACC_GreatBasin = Module['_emscripten_enum_GACC_GreatBasin'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_GreatBasin');
var _emscripten_enum_GACC_NorthernRockies = Module['_emscripten_enum_GACC_NorthernRockies'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_NorthernRockies');
var _emscripten_enum_GACC_Northwest = Module['_emscripten_enum_GACC_Northwest'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_Northwest');
var _emscripten_enum_GACC_RockeyMountain = Module['_emscripten_enum_GACC_RockeyMountain'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_RockeyMountain');
var _emscripten_enum_GACC_SouthernArea = Module['_emscripten_enum_GACC_SouthernArea'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_SouthernArea');
var _emscripten_enum_GACC_Southwest = Module['_emscripten_enum_GACC_Southwest'] = makeInvalidEarlyAccess('_emscripten_enum_GACC_Southwest');
var _emscripten_enum_RequiredFieldNames_region = Module['_emscripten_enum_RequiredFieldNames_region'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_region');
var _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch = Module['_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch');
var _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value = Module['_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value');
var _emscripten_enum_RequiredFieldNames_equation_type = Module['_emscripten_enum_RequiredFieldNames_equation_type'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_equation_type');
var _emscripten_enum_RequiredFieldNames_dbh = Module['_emscripten_enum_RequiredFieldNames_dbh'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_dbh');
var _emscripten_enum_RequiredFieldNames_tree_height = Module['_emscripten_enum_RequiredFieldNames_tree_height'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_tree_height');
var _emscripten_enum_RequiredFieldNames_crown_ratio = Module['_emscripten_enum_RequiredFieldNames_crown_ratio'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_crown_ratio');
var _emscripten_enum_RequiredFieldNames_crown_damage = Module['_emscripten_enum_RequiredFieldNames_crown_damage'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_crown_damage');
var _emscripten_enum_RequiredFieldNames_cambium_kill_rating = Module['_emscripten_enum_RequiredFieldNames_cambium_kill_rating'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_cambium_kill_rating');
var _emscripten_enum_RequiredFieldNames_beetle_damage = Module['_emscripten_enum_RequiredFieldNames_beetle_damage'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_beetle_damage');
var _emscripten_enum_RequiredFieldNames_bole_char_height = Module['_emscripten_enum_RequiredFieldNames_bole_char_height'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_bole_char_height');
var _emscripten_enum_RequiredFieldNames_bark_thickness = Module['_emscripten_enum_RequiredFieldNames_bark_thickness'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_bark_thickness');
var _emscripten_enum_RequiredFieldNames_fire_severity = Module['_emscripten_enum_RequiredFieldNames_fire_severity'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_fire_severity');
var _emscripten_enum_RequiredFieldNames_num_inputs = Module['_emscripten_enum_RequiredFieldNames_num_inputs'] = makeInvalidEarlyAccess('_emscripten_enum_RequiredFieldNames_num_inputs');
var _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH = Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH');
var _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST = Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST');
var _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH = Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH');
var _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST = Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F = Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F');
var _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT = Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT');
var _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT = Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT');
var _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT = Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT');
var _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY = Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY');
var _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT = Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT');
var _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN = Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT');
var _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT = Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT');
var _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED = Module['_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED');
var _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED = Module['_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED');
var _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT = Module['_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT');
var _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT = Module['_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE');
var _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET = Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET'] = makeInvalidEarlyAccess('_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION');
var _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY = Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY'] = makeInvalidEarlyAccess('_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE');
var _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES = Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES'] = makeInvalidEarlyAccess('_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES');
var ___cxa_free_exception = makeInvalidEarlyAccess('___cxa_free_exception');
var _strerror = makeInvalidEarlyAccess('_strerror');
var _emscripten_stack_get_end = makeInvalidEarlyAccess('_emscripten_stack_get_end');
var _emscripten_stack_get_base = makeInvalidEarlyAccess('_emscripten_stack_get_base');
var _setThrew = makeInvalidEarlyAccess('_setThrew');
var __emscripten_tempret_set = makeInvalidEarlyAccess('__emscripten_tempret_set');
var _emscripten_stack_init = makeInvalidEarlyAccess('_emscripten_stack_init');
var _emscripten_stack_get_free = makeInvalidEarlyAccess('_emscripten_stack_get_free');
var __emscripten_stack_restore = makeInvalidEarlyAccess('__emscripten_stack_restore');
var __emscripten_stack_alloc = makeInvalidEarlyAccess('__emscripten_stack_alloc');
var _emscripten_stack_get_current = makeInvalidEarlyAccess('_emscripten_stack_get_current');
var ___cxa_increment_exception_refcount = makeInvalidEarlyAccess('___cxa_increment_exception_refcount');
var ___cxa_decrement_exception_refcount = makeInvalidEarlyAccess('___cxa_decrement_exception_refcount');
var ___get_exception_message = makeInvalidEarlyAccess('___get_exception_message');
var ___cxa_can_catch = makeInvalidEarlyAccess('___cxa_can_catch');
var ___cxa_get_exception_ptr = makeInvalidEarlyAccess('___cxa_get_exception_ptr');

function assignWasmExports(wasmExports) {
  _fflush = createExportWrapper('fflush', 1);
  Module['_webidl_free'] = _webidl_free = createExportWrapper('webidl_free', 1);
  Module['_free'] = _free = createExportWrapper('free', 1);
  Module['_webidl_malloc'] = _webidl_malloc = createExportWrapper('webidl_malloc', 1);
  Module['_malloc'] = _malloc = createExportWrapper('malloc', 1);
  Module['_emscripten_bind_VoidPtr___destroy___0'] = _emscripten_bind_VoidPtr___destroy___0 = createExportWrapper('emscripten_bind_VoidPtr___destroy___0', 1);
  Module['_emscripten_bind_DoublePtr___destroy___0'] = _emscripten_bind_DoublePtr___destroy___0 = createExportWrapper('emscripten_bind_DoublePtr___destroy___0', 1);
  Module['_emscripten_bind_BoolVector_BoolVector_0'] = _emscripten_bind_BoolVector_BoolVector_0 = createExportWrapper('emscripten_bind_BoolVector_BoolVector_0', 0);
  Module['_emscripten_bind_BoolVector_BoolVector_1'] = _emscripten_bind_BoolVector_BoolVector_1 = createExportWrapper('emscripten_bind_BoolVector_BoolVector_1', 1);
  Module['_emscripten_bind_BoolVector_resize_1'] = _emscripten_bind_BoolVector_resize_1 = createExportWrapper('emscripten_bind_BoolVector_resize_1', 2);
  Module['_emscripten_bind_BoolVector_get_1'] = _emscripten_bind_BoolVector_get_1 = createExportWrapper('emscripten_bind_BoolVector_get_1', 2);
  Module['_emscripten_bind_BoolVector_set_2'] = _emscripten_bind_BoolVector_set_2 = createExportWrapper('emscripten_bind_BoolVector_set_2', 3);
  Module['_emscripten_bind_BoolVector_size_0'] = _emscripten_bind_BoolVector_size_0 = createExportWrapper('emscripten_bind_BoolVector_size_0', 1);
  Module['_emscripten_bind_BoolVector___destroy___0'] = _emscripten_bind_BoolVector___destroy___0 = createExportWrapper('emscripten_bind_BoolVector___destroy___0', 1);
  Module['_emscripten_bind_CharVector_CharVector_0'] = _emscripten_bind_CharVector_CharVector_0 = createExportWrapper('emscripten_bind_CharVector_CharVector_0', 0);
  Module['_emscripten_bind_CharVector_CharVector_1'] = _emscripten_bind_CharVector_CharVector_1 = createExportWrapper('emscripten_bind_CharVector_CharVector_1', 1);
  Module['_emscripten_bind_CharVector_resize_1'] = _emscripten_bind_CharVector_resize_1 = createExportWrapper('emscripten_bind_CharVector_resize_1', 2);
  Module['_emscripten_bind_CharVector_get_1'] = _emscripten_bind_CharVector_get_1 = createExportWrapper('emscripten_bind_CharVector_get_1', 2);
  Module['_emscripten_bind_CharVector_set_2'] = _emscripten_bind_CharVector_set_2 = createExportWrapper('emscripten_bind_CharVector_set_2', 3);
  Module['_emscripten_bind_CharVector_size_0'] = _emscripten_bind_CharVector_size_0 = createExportWrapper('emscripten_bind_CharVector_size_0', 1);
  Module['_emscripten_bind_CharVector___destroy___0'] = _emscripten_bind_CharVector___destroy___0 = createExportWrapper('emscripten_bind_CharVector___destroy___0', 1);
  Module['_emscripten_bind_IntVector_IntVector_0'] = _emscripten_bind_IntVector_IntVector_0 = createExportWrapper('emscripten_bind_IntVector_IntVector_0', 0);
  Module['_emscripten_bind_IntVector_IntVector_1'] = _emscripten_bind_IntVector_IntVector_1 = createExportWrapper('emscripten_bind_IntVector_IntVector_1', 1);
  Module['_emscripten_bind_IntVector_resize_1'] = _emscripten_bind_IntVector_resize_1 = createExportWrapper('emscripten_bind_IntVector_resize_1', 2);
  Module['_emscripten_bind_IntVector_get_1'] = _emscripten_bind_IntVector_get_1 = createExportWrapper('emscripten_bind_IntVector_get_1', 2);
  Module['_emscripten_bind_IntVector_set_2'] = _emscripten_bind_IntVector_set_2 = createExportWrapper('emscripten_bind_IntVector_set_2', 3);
  Module['_emscripten_bind_IntVector_size_0'] = _emscripten_bind_IntVector_size_0 = createExportWrapper('emscripten_bind_IntVector_size_0', 1);
  Module['_emscripten_bind_IntVector___destroy___0'] = _emscripten_bind_IntVector___destroy___0 = createExportWrapper('emscripten_bind_IntVector___destroy___0', 1);
  Module['_emscripten_bind_DoubleVector_DoubleVector_0'] = _emscripten_bind_DoubleVector_DoubleVector_0 = createExportWrapper('emscripten_bind_DoubleVector_DoubleVector_0', 0);
  Module['_emscripten_bind_DoubleVector_DoubleVector_1'] = _emscripten_bind_DoubleVector_DoubleVector_1 = createExportWrapper('emscripten_bind_DoubleVector_DoubleVector_1', 1);
  Module['_emscripten_bind_DoubleVector_resize_1'] = _emscripten_bind_DoubleVector_resize_1 = createExportWrapper('emscripten_bind_DoubleVector_resize_1', 2);
  Module['_emscripten_bind_DoubleVector_get_1'] = _emscripten_bind_DoubleVector_get_1 = createExportWrapper('emscripten_bind_DoubleVector_get_1', 2);
  Module['_emscripten_bind_DoubleVector_set_2'] = _emscripten_bind_DoubleVector_set_2 = createExportWrapper('emscripten_bind_DoubleVector_set_2', 3);
  Module['_emscripten_bind_DoubleVector_size_0'] = _emscripten_bind_DoubleVector_size_0 = createExportWrapper('emscripten_bind_DoubleVector_size_0', 1);
  Module['_emscripten_bind_DoubleVector___destroy___0'] = _emscripten_bind_DoubleVector___destroy___0 = createExportWrapper('emscripten_bind_DoubleVector___destroy___0', 1);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0'] = _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0', 0);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1'] = _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1', 1);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_resize_1'] = _emscripten_bind_SpeciesMasterTableRecordVector_resize_1 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_resize_1', 2);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_get_1'] = _emscripten_bind_SpeciesMasterTableRecordVector_get_1 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_get_1', 2);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_set_2'] = _emscripten_bind_SpeciesMasterTableRecordVector_set_2 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_set_2', 3);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector_size_0'] = _emscripten_bind_SpeciesMasterTableRecordVector_size_0 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector_size_0', 1);
  Module['_emscripten_bind_SpeciesMasterTableRecordVector___destroy___0'] = _emscripten_bind_SpeciesMasterTableRecordVector___destroy___0 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecordVector___destroy___0', 1);
  Module['_emscripten_bind_AreaUnits_toBaseUnits_2'] = _emscripten_bind_AreaUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_AreaUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_AreaUnits_fromBaseUnits_2'] = _emscripten_bind_AreaUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_AreaUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_AreaUnits___destroy___0'] = _emscripten_bind_AreaUnits___destroy___0 = createExportWrapper('emscripten_bind_AreaUnits___destroy___0', 1);
  Module['_emscripten_bind_BasalAreaUnits_toBaseUnits_2'] = _emscripten_bind_BasalAreaUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_BasalAreaUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_BasalAreaUnits_fromBaseUnits_2'] = _emscripten_bind_BasalAreaUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_BasalAreaUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_BasalAreaUnits___destroy___0'] = _emscripten_bind_BasalAreaUnits___destroy___0 = createExportWrapper('emscripten_bind_BasalAreaUnits___destroy___0', 1);
  Module['_emscripten_bind_FractionUnits_toBaseUnits_2'] = _emscripten_bind_FractionUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_FractionUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_FractionUnits_fromBaseUnits_2'] = _emscripten_bind_FractionUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_FractionUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_FractionUnits___destroy___0'] = _emscripten_bind_FractionUnits___destroy___0 = createExportWrapper('emscripten_bind_FractionUnits___destroy___0', 1);
  Module['_emscripten_bind_LengthUnits_toBaseUnits_2'] = _emscripten_bind_LengthUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_LengthUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_LengthUnits_fromBaseUnits_2'] = _emscripten_bind_LengthUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_LengthUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_LengthUnits___destroy___0'] = _emscripten_bind_LengthUnits___destroy___0 = createExportWrapper('emscripten_bind_LengthUnits___destroy___0', 1);
  Module['_emscripten_bind_LoadingUnits_toBaseUnits_2'] = _emscripten_bind_LoadingUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_LoadingUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_LoadingUnits_fromBaseUnits_2'] = _emscripten_bind_LoadingUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_LoadingUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_LoadingUnits___destroy___0'] = _emscripten_bind_LoadingUnits___destroy___0 = createExportWrapper('emscripten_bind_LoadingUnits___destroy___0', 1);
  Module['_emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2'] = _emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2'] = _emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0'] = _emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0 = createExportWrapper('emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0', 1);
  Module['_emscripten_bind_SpeedUnits_toBaseUnits_2'] = _emscripten_bind_SpeedUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_SpeedUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_SpeedUnits_fromBaseUnits_2'] = _emscripten_bind_SpeedUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_SpeedUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_SpeedUnits___destroy___0'] = _emscripten_bind_SpeedUnits___destroy___0 = createExportWrapper('emscripten_bind_SpeedUnits___destroy___0', 1);
  Module['_emscripten_bind_PressureUnits_toBaseUnits_2'] = _emscripten_bind_PressureUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_PressureUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_PressureUnits_fromBaseUnits_2'] = _emscripten_bind_PressureUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_PressureUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_PressureUnits___destroy___0'] = _emscripten_bind_PressureUnits___destroy___0 = createExportWrapper('emscripten_bind_PressureUnits___destroy___0', 1);
  Module['_emscripten_bind_SlopeUnits_toBaseUnits_2'] = _emscripten_bind_SlopeUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_SlopeUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_SlopeUnits_fromBaseUnits_2'] = _emscripten_bind_SlopeUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_SlopeUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_SlopeUnits___destroy___0'] = _emscripten_bind_SlopeUnits___destroy___0 = createExportWrapper('emscripten_bind_SlopeUnits___destroy___0', 1);
  Module['_emscripten_bind_DensityUnits_toBaseUnits_2'] = _emscripten_bind_DensityUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_DensityUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_DensityUnits_fromBaseUnits_2'] = _emscripten_bind_DensityUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_DensityUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_DensityUnits___destroy___0'] = _emscripten_bind_DensityUnits___destroy___0 = createExportWrapper('emscripten_bind_DensityUnits___destroy___0', 1);
  Module['_emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2'] = _emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2'] = _emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_HeatOfCombustionUnits___destroy___0'] = _emscripten_bind_HeatOfCombustionUnits___destroy___0 = createExportWrapper('emscripten_bind_HeatOfCombustionUnits___destroy___0', 1);
  Module['_emscripten_bind_HeatSinkUnits_toBaseUnits_2'] = _emscripten_bind_HeatSinkUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_HeatSinkUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_HeatSinkUnits_fromBaseUnits_2'] = _emscripten_bind_HeatSinkUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_HeatSinkUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_HeatSinkUnits___destroy___0'] = _emscripten_bind_HeatSinkUnits___destroy___0 = createExportWrapper('emscripten_bind_HeatSinkUnits___destroy___0', 1);
  Module['_emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2'] = _emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2'] = _emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_HeatPerUnitAreaUnits___destroy___0'] = _emscripten_bind_HeatPerUnitAreaUnits___destroy___0 = createExportWrapper('emscripten_bind_HeatPerUnitAreaUnits___destroy___0', 1);
  Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2'] = _emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2'] = _emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0'] = _emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0 = createExportWrapper('emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0', 1);
  Module['_emscripten_bind_FirelineIntensityUnits_toBaseUnits_2'] = _emscripten_bind_FirelineIntensityUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_FirelineIntensityUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2'] = _emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_FirelineIntensityUnits___destroy___0'] = _emscripten_bind_FirelineIntensityUnits___destroy___0 = createExportWrapper('emscripten_bind_FirelineIntensityUnits___destroy___0', 1);
  Module['_emscripten_bind_TemperatureUnits_toBaseUnits_2'] = _emscripten_bind_TemperatureUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_TemperatureUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_TemperatureUnits_fromBaseUnits_2'] = _emscripten_bind_TemperatureUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_TemperatureUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_TemperatureUnits___destroy___0'] = _emscripten_bind_TemperatureUnits___destroy___0 = createExportWrapper('emscripten_bind_TemperatureUnits___destroy___0', 1);
  Module['_emscripten_bind_TimeUnits_toBaseUnits_2'] = _emscripten_bind_TimeUnits_toBaseUnits_2 = createExportWrapper('emscripten_bind_TimeUnits_toBaseUnits_2', 2);
  Module['_emscripten_bind_TimeUnits_fromBaseUnits_2'] = _emscripten_bind_TimeUnits_fromBaseUnits_2 = createExportWrapper('emscripten_bind_TimeUnits_fromBaseUnits_2', 2);
  Module['_emscripten_bind_TimeUnits___destroy___0'] = _emscripten_bind_TimeUnits___destroy___0 = createExportWrapper('emscripten_bind_TimeUnits___destroy___0', 1);
  Module['_emscripten_bind_FireSize_getBackingSpreadRate_1'] = _emscripten_bind_FireSize_getBackingSpreadRate_1 = createExportWrapper('emscripten_bind_FireSize_getBackingSpreadRate_1', 2);
  Module['_emscripten_bind_FireSize_getEccentricity_0'] = _emscripten_bind_FireSize_getEccentricity_0 = createExportWrapper('emscripten_bind_FireSize_getEccentricity_0', 1);
  Module['_emscripten_bind_FireSize_getEllipticalA_3'] = _emscripten_bind_FireSize_getEllipticalA_3 = createExportWrapper('emscripten_bind_FireSize_getEllipticalA_3', 4);
  Module['_emscripten_bind_FireSize_getEllipticalB_3'] = _emscripten_bind_FireSize_getEllipticalB_3 = createExportWrapper('emscripten_bind_FireSize_getEllipticalB_3', 4);
  Module['_emscripten_bind_FireSize_getEllipticalC_3'] = _emscripten_bind_FireSize_getEllipticalC_3 = createExportWrapper('emscripten_bind_FireSize_getEllipticalC_3', 4);
  Module['_emscripten_bind_FireSize_getFireArea_4'] = _emscripten_bind_FireSize_getFireArea_4 = createExportWrapper('emscripten_bind_FireSize_getFireArea_4', 5);
  Module['_emscripten_bind_FireSize_getFireLength_3'] = _emscripten_bind_FireSize_getFireLength_3 = createExportWrapper('emscripten_bind_FireSize_getFireLength_3', 4);
  Module['_emscripten_bind_FireSize_getFireLengthToWidthRatio_0'] = _emscripten_bind_FireSize_getFireLengthToWidthRatio_0 = createExportWrapper('emscripten_bind_FireSize_getFireLengthToWidthRatio_0', 1);
  Module['_emscripten_bind_FireSize_getFirePerimeter_4'] = _emscripten_bind_FireSize_getFirePerimeter_4 = createExportWrapper('emscripten_bind_FireSize_getFirePerimeter_4', 5);
  Module['_emscripten_bind_FireSize_getFlankingSpreadRate_1'] = _emscripten_bind_FireSize_getFlankingSpreadRate_1 = createExportWrapper('emscripten_bind_FireSize_getFlankingSpreadRate_1', 2);
  Module['_emscripten_bind_FireSize_getHeadingToBackingRatio_0'] = _emscripten_bind_FireSize_getHeadingToBackingRatio_0 = createExportWrapper('emscripten_bind_FireSize_getHeadingToBackingRatio_0', 1);
  Module['_emscripten_bind_FireSize_getMaxFireWidth_3'] = _emscripten_bind_FireSize_getMaxFireWidth_3 = createExportWrapper('emscripten_bind_FireSize_getMaxFireWidth_3', 4);
  Module['_emscripten_bind_FireSize_calculateFireBasicDimensions_5'] = _emscripten_bind_FireSize_calculateFireBasicDimensions_5 = createExportWrapper('emscripten_bind_FireSize_calculateFireBasicDimensions_5', 6);
  Module['_emscripten_bind_FireSize___destroy___0'] = _emscripten_bind_FireSize___destroy___0 = createExportWrapper('emscripten_bind_FireSize___destroy___0', 1);
  Module['_emscripten_bind_SIGContainAdapter_SIGContainAdapter_0'] = _emscripten_bind_SIGContainAdapter_SIGContainAdapter_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_SIGContainAdapter_0', 0);
  Module['_emscripten_bind_SIGContainAdapter_getContainmentStatus_0'] = _emscripten_bind_SIGContainAdapter_getContainmentStatus_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getContainmentStatus_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterX_0'] = _emscripten_bind_SIGContainAdapter_getFirePerimeterX_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFirePerimeterX_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterY_0'] = _emscripten_bind_SIGContainAdapter_getFirePerimeterY_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFirePerimeterY_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getAttackDistance_1'] = _emscripten_bind_SIGContainAdapter_getAttackDistance_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getAttackDistance_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1'] = _emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFinalCost_0'] = _emscripten_bind_SIGContainAdapter_getFinalCost_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalCost_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1'] = _emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFinalFireSize_1'] = _emscripten_bind_SIGContainAdapter_getFinalFireSize_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalFireSize_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1'] = _emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFinalProductionRate_1'] = _emscripten_bind_SIGContainAdapter_getFinalProductionRate_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFinalProductionRate_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0'] = _emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFireBackAtReport_0'] = _emscripten_bind_SIGContainAdapter_getFireBackAtReport_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFireBackAtReport_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0'] = _emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0'] = _emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1'] = _emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0'] = _emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1'] = _emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1'] = _emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getReportSize_1'] = _emscripten_bind_SIGContainAdapter_getReportSize_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getReportSize_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getReportRate_1'] = _emscripten_bind_SIGContainAdapter_getReportRate_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_getReportRate_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_getTactic_0'] = _emscripten_bind_SIGContainAdapter_getTactic_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getTactic_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0'] = _emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1'] = _emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_removeResourceAt_1'] = _emscripten_bind_SIGContainAdapter_removeResourceAt_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_removeResourceAt_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1'] = _emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_addResource_9'] = _emscripten_bind_SIGContainAdapter_addResource_9 = createExportWrapper('emscripten_bind_SIGContainAdapter_addResource_9', 10);
  Module['_emscripten_bind_SIGContainAdapter_doContainRun_0'] = _emscripten_bind_SIGContainAdapter_doContainRun_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_doContainRun_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_removeAllResources_0'] = _emscripten_bind_SIGContainAdapter_removeAllResources_0 = createExportWrapper('emscripten_bind_SIGContainAdapter_removeAllResources_0', 1);
  Module['_emscripten_bind_SIGContainAdapter_setAttackDistance_2'] = _emscripten_bind_SIGContainAdapter_setAttackDistance_2 = createExportWrapper('emscripten_bind_SIGContainAdapter_setAttackDistance_2', 3);
  Module['_emscripten_bind_SIGContainAdapter_setFireStartTime_1'] = _emscripten_bind_SIGContainAdapter_setFireStartTime_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setFireStartTime_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setLwRatio_1'] = _emscripten_bind_SIGContainAdapter_setLwRatio_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setLwRatio_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setMaxFireSize_1'] = _emscripten_bind_SIGContainAdapter_setMaxFireSize_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setMaxFireSize_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setMaxFireTime_1'] = _emscripten_bind_SIGContainAdapter_setMaxFireTime_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setMaxFireTime_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setMaxSteps_1'] = _emscripten_bind_SIGContainAdapter_setMaxSteps_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setMaxSteps_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setMinSteps_1'] = _emscripten_bind_SIGContainAdapter_setMinSteps_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setMinSteps_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setReportRate_2'] = _emscripten_bind_SIGContainAdapter_setReportRate_2 = createExportWrapper('emscripten_bind_SIGContainAdapter_setReportRate_2', 3);
  Module['_emscripten_bind_SIGContainAdapter_setReportSize_2'] = _emscripten_bind_SIGContainAdapter_setReportSize_2 = createExportWrapper('emscripten_bind_SIGContainAdapter_setReportSize_2', 3);
  Module['_emscripten_bind_SIGContainAdapter_setRetry_1'] = _emscripten_bind_SIGContainAdapter_setRetry_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setRetry_1', 2);
  Module['_emscripten_bind_SIGContainAdapter_setTactic_1'] = _emscripten_bind_SIGContainAdapter_setTactic_1 = createExportWrapper('emscripten_bind_SIGContainAdapter_setTactic_1', 2);
  Module['_emscripten_bind_SIGContainAdapter___destroy___0'] = _emscripten_bind_SIGContainAdapter___destroy___0 = createExportWrapper('emscripten_bind_SIGContainAdapter___destroy___0', 1);
  Module['_emscripten_bind_SIGIgnite_SIGIgnite_0'] = _emscripten_bind_SIGIgnite_SIGIgnite_0 = createExportWrapper('emscripten_bind_SIGIgnite_SIGIgnite_0', 0);
  Module['_emscripten_bind_SIGIgnite_initializeMembers_0'] = _emscripten_bind_SIGIgnite_initializeMembers_0 = createExportWrapper('emscripten_bind_SIGIgnite_initializeMembers_0', 1);
  Module['_emscripten_bind_SIGIgnite_getFuelBedType_0'] = _emscripten_bind_SIGIgnite_getFuelBedType_0 = createExportWrapper('emscripten_bind_SIGIgnite_getFuelBedType_0', 1);
  Module['_emscripten_bind_SIGIgnite_getLightningChargeType_0'] = _emscripten_bind_SIGIgnite_getLightningChargeType_0 = createExportWrapper('emscripten_bind_SIGIgnite_getLightningChargeType_0', 1);
  Module['_emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0'] = _emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0 = createExportWrapper('emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0', 1);
  Module['_emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1'] = _emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1 = createExportWrapper('emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1', 2);
  Module['_emscripten_bind_SIGIgnite_setAirTemperature_2'] = _emscripten_bind_SIGIgnite_setAirTemperature_2 = createExportWrapper('emscripten_bind_SIGIgnite_setAirTemperature_2', 3);
  Module['_emscripten_bind_SIGIgnite_setDuffDepth_2'] = _emscripten_bind_SIGIgnite_setDuffDepth_2 = createExportWrapper('emscripten_bind_SIGIgnite_setDuffDepth_2', 3);
  Module['_emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1'] = _emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1 = createExportWrapper('emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1', 2);
  Module['_emscripten_bind_SIGIgnite_setLightningChargeType_1'] = _emscripten_bind_SIGIgnite_setLightningChargeType_1 = createExportWrapper('emscripten_bind_SIGIgnite_setLightningChargeType_1', 2);
  Module['_emscripten_bind_SIGIgnite_setMoistureHundredHour_2'] = _emscripten_bind_SIGIgnite_setMoistureHundredHour_2 = createExportWrapper('emscripten_bind_SIGIgnite_setMoistureHundredHour_2', 3);
  Module['_emscripten_bind_SIGIgnite_setMoistureOneHour_2'] = _emscripten_bind_SIGIgnite_setMoistureOneHour_2 = createExportWrapper('emscripten_bind_SIGIgnite_setMoistureOneHour_2', 3);
  Module['_emscripten_bind_SIGIgnite_setSunShade_2'] = _emscripten_bind_SIGIgnite_setSunShade_2 = createExportWrapper('emscripten_bind_SIGIgnite_setSunShade_2', 3);
  Module['_emscripten_bind_SIGIgnite_updateIgniteInputs_11'] = _emscripten_bind_SIGIgnite_updateIgniteInputs_11 = createExportWrapper('emscripten_bind_SIGIgnite_updateIgniteInputs_11', 12);
  Module['_emscripten_bind_SIGIgnite_getAirTemperature_1'] = _emscripten_bind_SIGIgnite_getAirTemperature_1 = createExportWrapper('emscripten_bind_SIGIgnite_getAirTemperature_1', 2);
  Module['_emscripten_bind_SIGIgnite_getDuffDepth_1'] = _emscripten_bind_SIGIgnite_getDuffDepth_1 = createExportWrapper('emscripten_bind_SIGIgnite_getDuffDepth_1', 2);
  Module['_emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1'] = _emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1 = createExportWrapper('emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1', 2);
  Module['_emscripten_bind_SIGIgnite_getFuelTemperature_1'] = _emscripten_bind_SIGIgnite_getFuelTemperature_1 = createExportWrapper('emscripten_bind_SIGIgnite_getFuelTemperature_1', 2);
  Module['_emscripten_bind_SIGIgnite_getMoistureHundredHour_1'] = _emscripten_bind_SIGIgnite_getMoistureHundredHour_1 = createExportWrapper('emscripten_bind_SIGIgnite_getMoistureHundredHour_1', 2);
  Module['_emscripten_bind_SIGIgnite_getMoistureOneHour_1'] = _emscripten_bind_SIGIgnite_getMoistureOneHour_1 = createExportWrapper('emscripten_bind_SIGIgnite_getMoistureOneHour_1', 2);
  Module['_emscripten_bind_SIGIgnite_getSunShade_1'] = _emscripten_bind_SIGIgnite_getSunShade_1 = createExportWrapper('emscripten_bind_SIGIgnite_getSunShade_1', 2);
  Module['_emscripten_bind_SIGIgnite_isFuelDepthNeeded_0'] = _emscripten_bind_SIGIgnite_isFuelDepthNeeded_0 = createExportWrapper('emscripten_bind_SIGIgnite_isFuelDepthNeeded_0', 1);
  Module['_emscripten_bind_SIGIgnite___destroy___0'] = _emscripten_bind_SIGIgnite___destroy___0 = createExportWrapper('emscripten_bind_SIGIgnite___destroy___0', 1);
  Module['_emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0'] = _emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0', 0);
  Module['_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1'] = _emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1'] = _emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2', 3);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0'] = _emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0', 1);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1'] = _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1 = createExportWrapper('emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1', 2);
  Module['_emscripten_bind_SIGMoistureScenarios___destroy___0'] = _emscripten_bind_SIGMoistureScenarios___destroy___0 = createExportWrapper('emscripten_bind_SIGMoistureScenarios___destroy___0', 1);
  Module['_emscripten_bind_SIGSpot_SIGSpot_0'] = _emscripten_bind_SIGSpot_SIGSpot_0 = createExportWrapper('emscripten_bind_SIGSpot_SIGSpot_0', 0);
  Module['_emscripten_bind_SIGSpot_getDownwindCanopyMode_0'] = _emscripten_bind_SIGSpot_getDownwindCanopyMode_0 = createExportWrapper('emscripten_bind_SIGSpot_getDownwindCanopyMode_0', 1);
  Module['_emscripten_bind_SIGSpot_getLocation_0'] = _emscripten_bind_SIGSpot_getLocation_0 = createExportWrapper('emscripten_bind_SIGSpot_getLocation_0', 1);
  Module['_emscripten_bind_SIGSpot_getTreeSpecies_0'] = _emscripten_bind_SIGSpot_getTreeSpecies_0 = createExportWrapper('emscripten_bind_SIGSpot_getTreeSpecies_0', 1);
  Module['_emscripten_bind_SIGSpot_getBurningPileFlameHeight_1'] = _emscripten_bind_SIGSpot_getBurningPileFlameHeight_1 = createExportWrapper('emscripten_bind_SIGSpot_getBurningPileFlameHeight_1', 2);
  Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1'] = _emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1 = createExportWrapper('emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1', 2);
  Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1'] = _emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1 = createExportWrapper('emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1', 2);
  Module['_emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1'] = _emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getDBH_1'] = _emscripten_bind_SIGSpot_getDBH_1 = createExportWrapper('emscripten_bind_SIGSpot_getDBH_1', 2);
  Module['_emscripten_bind_SIGSpot_getDownwindCoverHeight_1'] = _emscripten_bind_SIGSpot_getDownwindCoverHeight_1 = createExportWrapper('emscripten_bind_SIGSpot_getDownwindCoverHeight_1', 2);
  Module['_emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1'] = _emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1'] = _emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0'] = _emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0 = createExportWrapper('emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0', 1);
  Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1'] = _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1'] = _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1'] = _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1'] = _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1'] = _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1'] = _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1'] = _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1'] = _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1'] = _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1'] = _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1 = createExportWrapper('emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1', 2);
  Module['_emscripten_bind_SIGSpot_getRidgeToValleyDistance_1'] = _emscripten_bind_SIGSpot_getRidgeToValleyDistance_1 = createExportWrapper('emscripten_bind_SIGSpot_getRidgeToValleyDistance_1', 2);
  Module['_emscripten_bind_SIGSpot_getRidgeToValleyElevation_1'] = _emscripten_bind_SIGSpot_getRidgeToValleyElevation_1 = createExportWrapper('emscripten_bind_SIGSpot_getRidgeToValleyElevation_1', 2);
  Module['_emscripten_bind_SIGSpot_getSurfaceFlameLength_1'] = _emscripten_bind_SIGSpot_getSurfaceFlameLength_1 = createExportWrapper('emscripten_bind_SIGSpot_getSurfaceFlameLength_1', 2);
  Module['_emscripten_bind_SIGSpot_getTreeHeight_1'] = _emscripten_bind_SIGSpot_getTreeHeight_1 = createExportWrapper('emscripten_bind_SIGSpot_getTreeHeight_1', 2);
  Module['_emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1'] = _emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1 = createExportWrapper('emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1', 2);
  Module['_emscripten_bind_SIGSpot_getTorchingTrees_0'] = _emscripten_bind_SIGSpot_getTorchingTrees_0 = createExportWrapper('emscripten_bind_SIGSpot_getTorchingTrees_0', 1);
  Module['_emscripten_bind_SIGSpot_calculateAll_0'] = _emscripten_bind_SIGSpot_calculateAll_0 = createExportWrapper('emscripten_bind_SIGSpot_calculateAll_0', 1);
  Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0'] = _emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0 = createExportWrapper('emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0', 1);
  Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0'] = _emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0 = createExportWrapper('emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0', 1);
  Module['_emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0'] = _emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0 = createExportWrapper('emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0', 1);
  Module['_emscripten_bind_SIGSpot_initializeMembers_0'] = _emscripten_bind_SIGSpot_initializeMembers_0 = createExportWrapper('emscripten_bind_SIGSpot_initializeMembers_0', 1);
  Module['_emscripten_bind_SIGSpot_setActiveCrownFlameLength_2'] = _emscripten_bind_SIGSpot_setActiveCrownFlameLength_2 = createExportWrapper('emscripten_bind_SIGSpot_setActiveCrownFlameLength_2', 3);
  Module['_emscripten_bind_SIGSpot_setBurningPileFlameHeight_2'] = _emscripten_bind_SIGSpot_setBurningPileFlameHeight_2 = createExportWrapper('emscripten_bind_SIGSpot_setBurningPileFlameHeight_2', 3);
  Module['_emscripten_bind_SIGSpot_setDBH_2'] = _emscripten_bind_SIGSpot_setDBH_2 = createExportWrapper('emscripten_bind_SIGSpot_setDBH_2', 3);
  Module['_emscripten_bind_SIGSpot_setDownwindCanopyMode_1'] = _emscripten_bind_SIGSpot_setDownwindCanopyMode_1 = createExportWrapper('emscripten_bind_SIGSpot_setDownwindCanopyMode_1', 2);
  Module['_emscripten_bind_SIGSpot_setDownwindCoverHeight_2'] = _emscripten_bind_SIGSpot_setDownwindCoverHeight_2 = createExportWrapper('emscripten_bind_SIGSpot_setDownwindCoverHeight_2', 3);
  Module['_emscripten_bind_SIGSpot_setFireType_1'] = _emscripten_bind_SIGSpot_setFireType_1 = createExportWrapper('emscripten_bind_SIGSpot_setFireType_1', 2);
  Module['_emscripten_bind_SIGSpot_setFlameLength_2'] = _emscripten_bind_SIGSpot_setFlameLength_2 = createExportWrapper('emscripten_bind_SIGSpot_setFlameLength_2', 3);
  Module['_emscripten_bind_SIGSpot_setFirelineIntensity_2'] = _emscripten_bind_SIGSpot_setFirelineIntensity_2 = createExportWrapper('emscripten_bind_SIGSpot_setFirelineIntensity_2', 3);
  Module['_emscripten_bind_SIGSpot_setLocation_1'] = _emscripten_bind_SIGSpot_setLocation_1 = createExportWrapper('emscripten_bind_SIGSpot_setLocation_1', 2);
  Module['_emscripten_bind_SIGSpot_setRidgeToValleyDistance_2'] = _emscripten_bind_SIGSpot_setRidgeToValleyDistance_2 = createExportWrapper('emscripten_bind_SIGSpot_setRidgeToValleyDistance_2', 3);
  Module['_emscripten_bind_SIGSpot_setRidgeToValleyElevation_2'] = _emscripten_bind_SIGSpot_setRidgeToValleyElevation_2 = createExportWrapper('emscripten_bind_SIGSpot_setRidgeToValleyElevation_2', 3);
  Module['_emscripten_bind_SIGSpot_setTorchingTrees_1'] = _emscripten_bind_SIGSpot_setTorchingTrees_1 = createExportWrapper('emscripten_bind_SIGSpot_setTorchingTrees_1', 2);
  Module['_emscripten_bind_SIGSpot_setTreeHeight_2'] = _emscripten_bind_SIGSpot_setTreeHeight_2 = createExportWrapper('emscripten_bind_SIGSpot_setTreeHeight_2', 3);
  Module['_emscripten_bind_SIGSpot_setTreeSpecies_1'] = _emscripten_bind_SIGSpot_setTreeSpecies_1 = createExportWrapper('emscripten_bind_SIGSpot_setTreeSpecies_1', 2);
  Module['_emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2'] = _emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2 = createExportWrapper('emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2', 3);
  Module['_emscripten_bind_SIGSpot_setWindSpeed_2'] = _emscripten_bind_SIGSpot_setWindSpeed_2 = createExportWrapper('emscripten_bind_SIGSpot_setWindSpeed_2', 3);
  Module['_emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3'] = _emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3 = createExportWrapper('emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3', 4);
  Module['_emscripten_bind_SIGSpot_setWindHeightInputMode_1'] = _emscripten_bind_SIGSpot_setWindHeightInputMode_1 = createExportWrapper('emscripten_bind_SIGSpot_setWindHeightInputMode_1', 2);
  Module['_emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12'] = _emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12 = createExportWrapper('emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12', 13);
  Module['_emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12'] = _emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12 = createExportWrapper('emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12', 13);
  Module['_emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16'] = _emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16 = createExportWrapper('emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16', 17);
  Module['_emscripten_bind_SIGSpot___destroy___0'] = _emscripten_bind_SIGSpot___destroy___0 = createExportWrapper('emscripten_bind_SIGSpot___destroy___0', 1);
  Module['_emscripten_bind_SIGFuelModels_SIGFuelModels_0'] = _emscripten_bind_SIGFuelModels_SIGFuelModels_0 = createExportWrapper('emscripten_bind_SIGFuelModels_SIGFuelModels_0', 0);
  Module['_emscripten_bind_SIGFuelModels_SIGFuelModels_1'] = _emscripten_bind_SIGFuelModels_SIGFuelModels_1 = createExportWrapper('emscripten_bind_SIGFuelModels_SIGFuelModels_1', 1);
  Module['_emscripten_bind_SIGFuelModels_equal_1'] = _emscripten_bind_SIGFuelModels_equal_1 = createExportWrapper('emscripten_bind_SIGFuelModels_equal_1', 2);
  Module['_emscripten_bind_SIGFuelModels_clearCustomFuelModel_1'] = _emscripten_bind_SIGFuelModels_clearCustomFuelModel_1 = createExportWrapper('emscripten_bind_SIGFuelModels_clearCustomFuelModel_1', 2);
  Module['_emscripten_bind_SIGFuelModels_getIsDynamic_1'] = _emscripten_bind_SIGFuelModels_getIsDynamic_1 = createExportWrapper('emscripten_bind_SIGFuelModels_getIsDynamic_1', 2);
  Module['_emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1'] = _emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1 = createExportWrapper('emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1', 2);
  Module['_emscripten_bind_SIGFuelModels_isFuelModelDefined_1'] = _emscripten_bind_SIGFuelModels_isFuelModelDefined_1 = createExportWrapper('emscripten_bind_SIGFuelModels_isFuelModelDefined_1', 2);
  Module['_emscripten_bind_SIGFuelModels_isFuelModelReserved_1'] = _emscripten_bind_SIGFuelModels_isFuelModelReserved_1 = createExportWrapper('emscripten_bind_SIGFuelModels_isFuelModelReserved_1', 2);
  Module['_emscripten_bind_SIGFuelModels_setCustomFuelModel_21'] = _emscripten_bind_SIGFuelModels_setCustomFuelModel_21 = createExportWrapper('emscripten_bind_SIGFuelModels_setCustomFuelModel_21', 22);
  Module['_emscripten_bind_SIGFuelModels_getFuelCode_1'] = _emscripten_bind_SIGFuelModels_getFuelCode_1 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelCode_1', 2);
  Module['_emscripten_bind_SIGFuelModels_getFuelName_1'] = _emscripten_bind_SIGFuelModels_getFuelName_1 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelName_1', 2);
  Module['_emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2'] = _emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2'] = _emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2'] = _emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2'] = _emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2'] = _emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getFuelbedDepth_2'] = _emscripten_bind_SIGFuelModels_getFuelbedDepth_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getFuelbedDepth_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2'] = _emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2'] = _emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2'] = _emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getSavrLiveWoody_2'] = _emscripten_bind_SIGFuelModels_getSavrLiveWoody_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getSavrLiveWoody_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getSavrOneHour_2'] = _emscripten_bind_SIGFuelModels_getSavrOneHour_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getSavrOneHour_2', 3);
  Module['_emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2'] = _emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2 = createExportWrapper('emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2', 3);
  Module['_emscripten_bind_SIGFuelModels___destroy___0'] = _emscripten_bind_SIGFuelModels___destroy___0 = createExportWrapper('emscripten_bind_SIGFuelModels___destroy___0', 1);
  Module['_emscripten_bind_SIGSurface_SIGSurface_1'] = _emscripten_bind_SIGSurface_SIGSurface_1 = createExportWrapper('emscripten_bind_SIGSurface_SIGSurface_1', 1);
  Module['_emscripten_bind_SIGSurface_getAspenFireSeverity_0'] = _emscripten_bind_SIGSurface_getAspenFireSeverity_0 = createExportWrapper('emscripten_bind_SIGSurface_getAspenFireSeverity_0', 1);
  Module['_emscripten_bind_SIGSurface_getChaparralFuelType_0'] = _emscripten_bind_SIGSurface_getChaparralFuelType_0 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralFuelType_0', 1);
  Module['_emscripten_bind_SIGSurface_getMoistureInputMode_0'] = _emscripten_bind_SIGSurface_getMoistureInputMode_0 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureInputMode_0', 1);
  Module['_emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0'] = _emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0 = createExportWrapper('emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0', 1);
  Module['_emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0'] = _emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0 = createExportWrapper('emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0', 1);
  Module['_emscripten_bind_SIGSurface_getWindHeightInputMode_0'] = _emscripten_bind_SIGSurface_getWindHeightInputMode_0 = createExportWrapper('emscripten_bind_SIGSurface_getWindHeightInputMode_0', 1);
  Module['_emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0'] = _emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0 = createExportWrapper('emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0', 1);
  Module['_emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0'] = _emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0 = createExportWrapper('emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0', 1);
  Module['_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1'] = _emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1 = createExportWrapper('emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1', 2);
  Module['_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1'] = _emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1 = createExportWrapper('emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1', 2);
  Module['_emscripten_bind_SIGSurface_getIsUsingChaparral_0'] = _emscripten_bind_SIGSurface_getIsUsingChaparral_0 = createExportWrapper('emscripten_bind_SIGSurface_getIsUsingChaparral_0', 1);
  Module['_emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0'] = _emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0 = createExportWrapper('emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0', 1);
  Module['_emscripten_bind_SIGSurface_getIsUsingWesternAspen_0'] = _emscripten_bind_SIGSurface_getIsUsingWesternAspen_0 = createExportWrapper('emscripten_bind_SIGSurface_getIsUsingWesternAspen_0', 1);
  Module['_emscripten_bind_SIGSurface_isAllFuelLoadZero_1'] = _emscripten_bind_SIGSurface_isAllFuelLoadZero_1 = createExportWrapper('emscripten_bind_SIGSurface_isAllFuelLoadZero_1', 2);
  Module['_emscripten_bind_SIGSurface_isFuelDynamic_1'] = _emscripten_bind_SIGSurface_isFuelDynamic_1 = createExportWrapper('emscripten_bind_SIGSurface_isFuelDynamic_1', 2);
  Module['_emscripten_bind_SIGSurface_isFuelModelDefined_1'] = _emscripten_bind_SIGSurface_isFuelModelDefined_1 = createExportWrapper('emscripten_bind_SIGSurface_isFuelModelDefined_1', 2);
  Module['_emscripten_bind_SIGSurface_isFuelModelReserved_1'] = _emscripten_bind_SIGSurface_isFuelModelReserved_1 = createExportWrapper('emscripten_bind_SIGSurface_isFuelModelReserved_1', 2);
  Module['_emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1'] = _emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1 = createExportWrapper('emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1', 2);
  Module['_emscripten_bind_SIGSurface_isUsingTwoFuelModels_0'] = _emscripten_bind_SIGSurface_isUsingTwoFuelModels_0 = createExportWrapper('emscripten_bind_SIGSurface_isUsingTwoFuelModels_0', 1);
  Module['_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1'] = _emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1 = createExportWrapper('emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1', 2);
  Module['_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1'] = _emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1 = createExportWrapper('emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1', 2);
  Module['_emscripten_bind_SIGSurface_calculateFlameLength_3'] = _emscripten_bind_SIGSurface_calculateFlameLength_3 = createExportWrapper('emscripten_bind_SIGSurface_calculateFlameLength_3', 4);
  Module['_emscripten_bind_SIGSurface_getAgeOfRough_0'] = _emscripten_bind_SIGSurface_getAgeOfRough_0 = createExportWrapper('emscripten_bind_SIGSurface_getAgeOfRough_0', 1);
  Module['_emscripten_bind_SIGSurface_getAspect_0'] = _emscripten_bind_SIGSurface_getAspect_0 = createExportWrapper('emscripten_bind_SIGSurface_getAspect_0', 1);
  Module['_emscripten_bind_SIGSurface_getAspenCuringLevel_1'] = _emscripten_bind_SIGSurface_getAspenCuringLevel_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenCuringLevel_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenDBH_1'] = _emscripten_bind_SIGSurface_getAspenDBH_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenDBH_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1'] = _emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1'] = _emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1'] = _emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1'] = _emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1'] = _emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1'] = _emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1'] = _emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1', 2);
  Module['_emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1'] = _emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1 = createExportWrapper('emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1', 2);
  Module['_emscripten_bind_SIGSurface_getBackingFirelineIntensity_1'] = _emscripten_bind_SIGSurface_getBackingFirelineIntensity_1 = createExportWrapper('emscripten_bind_SIGSurface_getBackingFirelineIntensity_1', 2);
  Module['_emscripten_bind_SIGSurface_getBackingFlameLength_1'] = _emscripten_bind_SIGSurface_getBackingFlameLength_1 = createExportWrapper('emscripten_bind_SIGSurface_getBackingFlameLength_1', 2);
  Module['_emscripten_bind_SIGSurface_getBackingSpreadDistance_1'] = _emscripten_bind_SIGSurface_getBackingSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGSurface_getBackingSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGSurface_getBackingSpreadRate_1'] = _emscripten_bind_SIGSurface_getBackingSpreadRate_1 = createExportWrapper('emscripten_bind_SIGSurface_getBackingSpreadRate_1', 2);
  Module['_emscripten_bind_SIGSurface_getBulkDensity_1'] = _emscripten_bind_SIGSurface_getBulkDensity_1 = createExportWrapper('emscripten_bind_SIGSurface_getBulkDensity_1', 2);
  Module['_emscripten_bind_SIGSurface_getCanopyCover_1'] = _emscripten_bind_SIGSurface_getCanopyCover_1 = createExportWrapper('emscripten_bind_SIGSurface_getCanopyCover_1', 2);
  Module['_emscripten_bind_SIGSurface_getCanopyHeight_1'] = _emscripten_bind_SIGSurface_getCanopyHeight_1 = createExportWrapper('emscripten_bind_SIGSurface_getCanopyHeight_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralAge_1'] = _emscripten_bind_SIGSurface_getChaparralAge_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralAge_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0'] = _emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0', 1);
  Module['_emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0'] = _emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0', 1);
  Module['_emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1'] = _emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralDensity_3'] = _emscripten_bind_SIGSurface_getChaparralDensity_3 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralDensity_3', 4);
  Module['_emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1'] = _emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0'] = _emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0', 1);
  Module['_emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3'] = _emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3', 4);
  Module['_emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1'] = _emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1'] = _emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1'] = _emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralMoisture_3'] = _emscripten_bind_SIGSurface_getChaparralMoisture_3 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralMoisture_3', 4);
  Module['_emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1'] = _emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1'] = _emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1'] = _emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2'] = _emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2 = createExportWrapper('emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2', 3);
  Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1'] = _emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1 = createExportWrapper('emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1', 2);
  Module['_emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1'] = _emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1 = createExportWrapper('emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1', 2);
  Module['_emscripten_bind_SIGSurface_getCharacteristicSAVR_1'] = _emscripten_bind_SIGSurface_getCharacteristicSAVR_1 = createExportWrapper('emscripten_bind_SIGSurface_getCharacteristicSAVR_1', 2);
  Module['_emscripten_bind_SIGSurface_getCrownRatio_1'] = _emscripten_bind_SIGSurface_getCrownRatio_1 = createExportWrapper('emscripten_bind_SIGSurface_getCrownRatio_1', 2);
  Module['_emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0'] = _emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0 = createExportWrapper('emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0', 1);
  Module['_emscripten_bind_SIGSurface_getDirectionOfInterest_0'] = _emscripten_bind_SIGSurface_getDirectionOfInterest_0 = createExportWrapper('emscripten_bind_SIGSurface_getDirectionOfInterest_0', 1);
  Module['_emscripten_bind_SIGSurface_getDirectionOfBacking_0'] = _emscripten_bind_SIGSurface_getDirectionOfBacking_0 = createExportWrapper('emscripten_bind_SIGSurface_getDirectionOfBacking_0', 1);
  Module['_emscripten_bind_SIGSurface_getDirectionOfFlanking_0'] = _emscripten_bind_SIGSurface_getDirectionOfFlanking_0 = createExportWrapper('emscripten_bind_SIGSurface_getDirectionOfFlanking_0', 1);
  Module['_emscripten_bind_SIGSurface_getElapsedTime_1'] = _emscripten_bind_SIGSurface_getElapsedTime_1 = createExportWrapper('emscripten_bind_SIGSurface_getElapsedTime_1', 2);
  Module['_emscripten_bind_SIGSurface_getEllipticalA_1'] = _emscripten_bind_SIGSurface_getEllipticalA_1 = createExportWrapper('emscripten_bind_SIGSurface_getEllipticalA_1', 2);
  Module['_emscripten_bind_SIGSurface_getEllipticalB_1'] = _emscripten_bind_SIGSurface_getEllipticalB_1 = createExportWrapper('emscripten_bind_SIGSurface_getEllipticalB_1', 2);
  Module['_emscripten_bind_SIGSurface_getEllipticalC_1'] = _emscripten_bind_SIGSurface_getEllipticalC_1 = createExportWrapper('emscripten_bind_SIGSurface_getEllipticalC_1', 2);
  Module['_emscripten_bind_SIGSurface_getFireLength_1'] = _emscripten_bind_SIGSurface_getFireLength_1 = createExportWrapper('emscripten_bind_SIGSurface_getFireLength_1', 2);
  Module['_emscripten_bind_SIGSurface_getMaxFireWidth_1'] = _emscripten_bind_SIGSurface_getMaxFireWidth_1 = createExportWrapper('emscripten_bind_SIGSurface_getMaxFireWidth_1', 2);
  Module['_emscripten_bind_SIGSurface_getFireArea_1'] = _emscripten_bind_SIGSurface_getFireArea_1 = createExportWrapper('emscripten_bind_SIGSurface_getFireArea_1', 2);
  Module['_emscripten_bind_SIGSurface_getFireEccentricity_0'] = _emscripten_bind_SIGSurface_getFireEccentricity_0 = createExportWrapper('emscripten_bind_SIGSurface_getFireEccentricity_0', 1);
  Module['_emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0'] = _emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0 = createExportWrapper('emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0', 1);
  Module['_emscripten_bind_SIGSurface_getFirePerimeter_1'] = _emscripten_bind_SIGSurface_getFirePerimeter_1 = createExportWrapper('emscripten_bind_SIGSurface_getFirePerimeter_1', 2);
  Module['_emscripten_bind_SIGSurface_getFirelineIntensity_1'] = _emscripten_bind_SIGSurface_getFirelineIntensity_1 = createExportWrapper('emscripten_bind_SIGSurface_getFirelineIntensity_1', 2);
  Module['_emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1'] = _emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1 = createExportWrapper('emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlameLength_1'] = _emscripten_bind_SIGSurface_getFlameLength_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlameLength_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1'] = _emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1'] = _emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlankingFlameLength_1'] = _emscripten_bind_SIGSurface_getFlankingFlameLength_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlankingFlameLength_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlankingSpreadRate_1'] = _emscripten_bind_SIGSurface_getFlankingSpreadRate_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlankingSpreadRate_1', 2);
  Module['_emscripten_bind_SIGSurface_getFlankingSpreadDistance_1'] = _emscripten_bind_SIGSurface_getFlankingSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGSurface_getFlankingSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2'] = _emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2'] = _emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelLoadHundredHour_2'] = _emscripten_bind_SIGSurface_getFuelLoadHundredHour_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelLoadHundredHour_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2'] = _emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2'] = _emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelLoadOneHour_2'] = _emscripten_bind_SIGSurface_getFuelLoadOneHour_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelLoadOneHour_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelLoadTenHour_2'] = _emscripten_bind_SIGSurface_getFuelLoadTenHour_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelLoadTenHour_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2'] = _emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2'] = _emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2'] = _emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelSavrOneHour_2'] = _emscripten_bind_SIGSurface_getFuelSavrOneHour_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelSavrOneHour_2', 3);
  Module['_emscripten_bind_SIGSurface_getFuelbedDepth_2'] = _emscripten_bind_SIGSurface_getFuelbedDepth_2 = createExportWrapper('emscripten_bind_SIGSurface_getFuelbedDepth_2', 3);
  Module['_emscripten_bind_SIGSurface_getHeadingSpreadRate_1'] = _emscripten_bind_SIGSurface_getHeadingSpreadRate_1 = createExportWrapper('emscripten_bind_SIGSurface_getHeadingSpreadRate_1', 2);
  Module['_emscripten_bind_SIGSurface_getHeadingToBackingRatio_0'] = _emscripten_bind_SIGSurface_getHeadingToBackingRatio_0 = createExportWrapper('emscripten_bind_SIGSurface_getHeadingToBackingRatio_0', 1);
  Module['_emscripten_bind_SIGSurface_getHeatPerUnitArea_1'] = _emscripten_bind_SIGSurface_getHeatPerUnitArea_1 = createExportWrapper('emscripten_bind_SIGSurface_getHeatPerUnitArea_1', 2);
  Module['_emscripten_bind_SIGSurface_getHeatSink_1'] = _emscripten_bind_SIGSurface_getHeatSink_1 = createExportWrapper('emscripten_bind_SIGSurface_getHeatSink_1', 2);
  Module['_emscripten_bind_SIGSurface_getHeatSource_1'] = _emscripten_bind_SIGSurface_getHeatSource_1 = createExportWrapper('emscripten_bind_SIGSurface_getHeatSource_1', 2);
  Module['_emscripten_bind_SIGSurface_getHeightOfUnderstory_1'] = _emscripten_bind_SIGSurface_getHeightOfUnderstory_1 = createExportWrapper('emscripten_bind_SIGSurface_getHeightOfUnderstory_1', 2);
  Module['_emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1'] = _emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1 = createExportWrapper('emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1', 2);
  Module['_emscripten_bind_SIGSurface_getMidflameWindspeed_1'] = _emscripten_bind_SIGSurface_getMidflameWindspeed_1 = createExportWrapper('emscripten_bind_SIGSurface_getMidflameWindspeed_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1'] = _emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureHundredHour_1'] = _emscripten_bind_SIGSurface_getMoistureHundredHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureHundredHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1'] = _emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1'] = _emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureLiveWoody_1'] = _emscripten_bind_SIGSurface_getMoistureLiveWoody_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureLiveWoody_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureOneHour_1'] = _emscripten_bind_SIGSurface_getMoistureOneHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureOneHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2'] = _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2', 3);
  Module['_emscripten_bind_SIGSurface_getMoistureTenHour_1'] = _emscripten_bind_SIGSurface_getMoistureTenHour_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureTenHour_1', 2);
  Module['_emscripten_bind_SIGSurface_getOverstoryBasalArea_1'] = _emscripten_bind_SIGSurface_getOverstoryBasalArea_1 = createExportWrapper('emscripten_bind_SIGSurface_getOverstoryBasalArea_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1'] = _emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getReactionIntensity_1'] = _emscripten_bind_SIGSurface_getReactionIntensity_1 = createExportWrapper('emscripten_bind_SIGSurface_getReactionIntensity_1', 2);
  Module['_emscripten_bind_SIGSurface_getResidenceTime_1'] = _emscripten_bind_SIGSurface_getResidenceTime_1 = createExportWrapper('emscripten_bind_SIGSurface_getResidenceTime_1', 2);
  Module['_emscripten_bind_SIGSurface_getSlope_1'] = _emscripten_bind_SIGSurface_getSlope_1 = createExportWrapper('emscripten_bind_SIGSurface_getSlope_1', 2);
  Module['_emscripten_bind_SIGSurface_getSlopeFactor_0'] = _emscripten_bind_SIGSurface_getSlopeFactor_0 = createExportWrapper('emscripten_bind_SIGSurface_getSlopeFactor_0', 1);
  Module['_emscripten_bind_SIGSurface_getSpreadDistance_1'] = _emscripten_bind_SIGSurface_getSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGSurface_getSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1'] = _emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1 = createExportWrapper('emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1', 2);
  Module['_emscripten_bind_SIGSurface_getSpreadRate_1'] = _emscripten_bind_SIGSurface_getSpreadRate_1 = createExportWrapper('emscripten_bind_SIGSurface_getSpreadRate_1', 2);
  Module['_emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1'] = _emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1 = createExportWrapper('emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1', 2);
  Module['_emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1'] = _emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1 = createExportWrapper('emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1', 2);
  Module['_emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1'] = _emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1'] = _emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1'] = _emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1 = createExportWrapper('emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1', 2);
  Module['_emscripten_bind_SIGSurface_getWindDirection_0'] = _emscripten_bind_SIGSurface_getWindDirection_0 = createExportWrapper('emscripten_bind_SIGSurface_getWindDirection_0', 1);
  Module['_emscripten_bind_SIGSurface_getWindSpeed_2'] = _emscripten_bind_SIGSurface_getWindSpeed_2 = createExportWrapper('emscripten_bind_SIGSurface_getWindSpeed_2', 3);
  Module['_emscripten_bind_SIGSurface_getAspenFuelModelNumber_0'] = _emscripten_bind_SIGSurface_getAspenFuelModelNumber_0 = createExportWrapper('emscripten_bind_SIGSurface_getAspenFuelModelNumber_0', 1);
  Module['_emscripten_bind_SIGSurface_getFuelModelNumber_0'] = _emscripten_bind_SIGSurface_getFuelModelNumber_0 = createExportWrapper('emscripten_bind_SIGSurface_getFuelModelNumber_0', 1);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1'] = _emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1', 2);
  Module['_emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0'] = _emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0 = createExportWrapper('emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0', 1);
  Module['_emscripten_bind_SIGSurface_getFuelCode_1'] = _emscripten_bind_SIGSurface_getFuelCode_1 = createExportWrapper('emscripten_bind_SIGSurface_getFuelCode_1', 2);
  Module['_emscripten_bind_SIGSurface_getFuelName_1'] = _emscripten_bind_SIGSurface_getFuelName_1 = createExportWrapper('emscripten_bind_SIGSurface_getFuelName_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1'] = _emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1'] = _emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1', 2);
  Module['_emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1'] = _emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1 = createExportWrapper('emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1', 2);
  Module['_emscripten_bind_SIGSurface_doSurfaceRun_0'] = _emscripten_bind_SIGSurface_doSurfaceRun_0 = createExportWrapper('emscripten_bind_SIGSurface_doSurfaceRun_0', 1);
  Module['_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2'] = _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2 = createExportWrapper('emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2', 3);
  Module['_emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0'] = _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0 = createExportWrapper('emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0', 1);
  Module['_emscripten_bind_SIGSurface_initializeMembers_0'] = _emscripten_bind_SIGSurface_initializeMembers_0 = createExportWrapper('emscripten_bind_SIGSurface_initializeMembers_0', 1);
  Module['_emscripten_bind_SIGSurface_setAgeOfRough_1'] = _emscripten_bind_SIGSurface_setAgeOfRough_1 = createExportWrapper('emscripten_bind_SIGSurface_setAgeOfRough_1', 2);
  Module['_emscripten_bind_SIGSurface_setAspect_1'] = _emscripten_bind_SIGSurface_setAspect_1 = createExportWrapper('emscripten_bind_SIGSurface_setAspect_1', 2);
  Module['_emscripten_bind_SIGSurface_setAspenCuringLevel_2'] = _emscripten_bind_SIGSurface_setAspenCuringLevel_2 = createExportWrapper('emscripten_bind_SIGSurface_setAspenCuringLevel_2', 3);
  Module['_emscripten_bind_SIGSurface_setAspenDBH_2'] = _emscripten_bind_SIGSurface_setAspenDBH_2 = createExportWrapper('emscripten_bind_SIGSurface_setAspenDBH_2', 3);
  Module['_emscripten_bind_SIGSurface_setAspenFireSeverity_1'] = _emscripten_bind_SIGSurface_setAspenFireSeverity_1 = createExportWrapper('emscripten_bind_SIGSurface_setAspenFireSeverity_1', 2);
  Module['_emscripten_bind_SIGSurface_setAspenFuelModelNumber_1'] = _emscripten_bind_SIGSurface_setAspenFuelModelNumber_1 = createExportWrapper('emscripten_bind_SIGSurface_setAspenFuelModelNumber_1', 2);
  Module['_emscripten_bind_SIGSurface_setCanopyCover_2'] = _emscripten_bind_SIGSurface_setCanopyCover_2 = createExportWrapper('emscripten_bind_SIGSurface_setCanopyCover_2', 3);
  Module['_emscripten_bind_SIGSurface_setCanopyHeight_2'] = _emscripten_bind_SIGSurface_setCanopyHeight_2 = createExportWrapper('emscripten_bind_SIGSurface_setCanopyHeight_2', 3);
  Module['_emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2'] = _emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2 = createExportWrapper('emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2', 3);
  Module['_emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1'] = _emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1 = createExportWrapper('emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1', 2);
  Module['_emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1'] = _emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1 = createExportWrapper('emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1', 2);
  Module['_emscripten_bind_SIGSurface_setChaparralFuelType_1'] = _emscripten_bind_SIGSurface_setChaparralFuelType_1 = createExportWrapper('emscripten_bind_SIGSurface_setChaparralFuelType_1', 2);
  Module['_emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2'] = _emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2 = createExportWrapper('emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2', 3);
  Module['_emscripten_bind_SIGSurface_setCrownRatio_2'] = _emscripten_bind_SIGSurface_setCrownRatio_2 = createExportWrapper('emscripten_bind_SIGSurface_setCrownRatio_2', 3);
  Module['_emscripten_bind_SIGSurface_setDirectionOfInterest_1'] = _emscripten_bind_SIGSurface_setDirectionOfInterest_1 = createExportWrapper('emscripten_bind_SIGSurface_setDirectionOfInterest_1', 2);
  Module['_emscripten_bind_SIGSurface_setElapsedTime_2'] = _emscripten_bind_SIGSurface_setElapsedTime_2 = createExportWrapper('emscripten_bind_SIGSurface_setElapsedTime_2', 3);
  Module['_emscripten_bind_SIGSurface_setFirstFuelModelNumber_1'] = _emscripten_bind_SIGSurface_setFirstFuelModelNumber_1 = createExportWrapper('emscripten_bind_SIGSurface_setFirstFuelModelNumber_1', 2);
  Module['_emscripten_bind_SIGSurface_setFuelModels_1'] = _emscripten_bind_SIGSurface_setFuelModels_1 = createExportWrapper('emscripten_bind_SIGSurface_setFuelModels_1', 2);
  Module['_emscripten_bind_SIGSurface_setHeightOfUnderstory_2'] = _emscripten_bind_SIGSurface_setHeightOfUnderstory_2 = createExportWrapper('emscripten_bind_SIGSurface_setHeightOfUnderstory_2', 3);
  Module['_emscripten_bind_SIGSurface_setIsUsingChaparral_1'] = _emscripten_bind_SIGSurface_setIsUsingChaparral_1 = createExportWrapper('emscripten_bind_SIGSurface_setIsUsingChaparral_1', 2);
  Module['_emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1'] = _emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1 = createExportWrapper('emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1', 2);
  Module['_emscripten_bind_SIGSurface_setIsUsingWesternAspen_1'] = _emscripten_bind_SIGSurface_setIsUsingWesternAspen_1 = createExportWrapper('emscripten_bind_SIGSurface_setIsUsingWesternAspen_1', 2);
  Module['_emscripten_bind_SIGSurface_setMoistureDeadAggregate_2'] = _emscripten_bind_SIGSurface_setMoistureDeadAggregate_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureDeadAggregate_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureHundredHour_2'] = _emscripten_bind_SIGSurface_setMoistureHundredHour_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureHundredHour_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureInputMode_1'] = _emscripten_bind_SIGSurface_setMoistureInputMode_1 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureInputMode_1', 2);
  Module['_emscripten_bind_SIGSurface_setMoistureLiveAggregate_2'] = _emscripten_bind_SIGSurface_setMoistureLiveAggregate_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureLiveAggregate_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2'] = _emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureLiveWoody_2'] = _emscripten_bind_SIGSurface_setMoistureLiveWoody_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureLiveWoody_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureOneHour_2'] = _emscripten_bind_SIGSurface_setMoistureOneHour_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureOneHour_2', 3);
  Module['_emscripten_bind_SIGSurface_setMoistureScenarios_1'] = _emscripten_bind_SIGSurface_setMoistureScenarios_1 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureScenarios_1', 2);
  Module['_emscripten_bind_SIGSurface_setMoistureTenHour_2'] = _emscripten_bind_SIGSurface_setMoistureTenHour_2 = createExportWrapper('emscripten_bind_SIGSurface_setMoistureTenHour_2', 3);
  Module['_emscripten_bind_SIGSurface_setOverstoryBasalArea_2'] = _emscripten_bind_SIGSurface_setOverstoryBasalArea_2 = createExportWrapper('emscripten_bind_SIGSurface_setOverstoryBasalArea_2', 3);
  Module['_emscripten_bind_SIGSurface_setPalmettoCoverage_2'] = _emscripten_bind_SIGSurface_setPalmettoCoverage_2 = createExportWrapper('emscripten_bind_SIGSurface_setPalmettoCoverage_2', 3);
  Module['_emscripten_bind_SIGSurface_setSecondFuelModelNumber_1'] = _emscripten_bind_SIGSurface_setSecondFuelModelNumber_1 = createExportWrapper('emscripten_bind_SIGSurface_setSecondFuelModelNumber_1', 2);
  Module['_emscripten_bind_SIGSurface_setSlope_2'] = _emscripten_bind_SIGSurface_setSlope_2 = createExportWrapper('emscripten_bind_SIGSurface_setSlope_2', 3);
  Module['_emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1'] = _emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1 = createExportWrapper('emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1', 2);
  Module['_emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1'] = _emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1 = createExportWrapper('emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1', 2);
  Module['_emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2'] = _emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2 = createExportWrapper('emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2', 3);
  Module['_emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1'] = _emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1 = createExportWrapper('emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1', 2);
  Module['_emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1'] = _emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1 = createExportWrapper('emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1', 2);
  Module['_emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1'] = _emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1 = createExportWrapper('emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1', 2);
  Module['_emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1'] = _emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1 = createExportWrapper('emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1', 2);
  Module['_emscripten_bind_SIGSurface_setWindDirection_1'] = _emscripten_bind_SIGSurface_setWindDirection_1 = createExportWrapper('emscripten_bind_SIGSurface_setWindDirection_1', 2);
  Module['_emscripten_bind_SIGSurface_setWindHeightInputMode_1'] = _emscripten_bind_SIGSurface_setWindHeightInputMode_1 = createExportWrapper('emscripten_bind_SIGSurface_setWindHeightInputMode_1', 2);
  Module['_emscripten_bind_SIGSurface_setWindSpeed_2'] = _emscripten_bind_SIGSurface_setWindSpeed_2 = createExportWrapper('emscripten_bind_SIGSurface_setWindSpeed_2', 3);
  Module['_emscripten_bind_SIGSurface_updateSurfaceInputs_21'] = _emscripten_bind_SIGSurface_updateSurfaceInputs_21 = createExportWrapper('emscripten_bind_SIGSurface_updateSurfaceInputs_21', 22);
  Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25'] = _emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25 = createExportWrapper('emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25', 26);
  Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25'] = _emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25 = createExportWrapper('emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25', 26);
  Module['_emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26'] = _emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26 = createExportWrapper('emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26', 27);
  Module['_emscripten_bind_SIGSurface_setFuelModelNumber_1'] = _emscripten_bind_SIGSurface_setFuelModelNumber_1 = createExportWrapper('emscripten_bind_SIGSurface_setFuelModelNumber_1', 2);
  Module['_emscripten_bind_SIGSurface___destroy___0'] = _emscripten_bind_SIGSurface___destroy___0 = createExportWrapper('emscripten_bind_SIGSurface___destroy___0', 1);
  Module['_emscripten_bind_PalmettoGallberry_PalmettoGallberry_0'] = _emscripten_bind_PalmettoGallberry_PalmettoGallberry_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_PalmettoGallberry_0', 0);
  Module['_emscripten_bind_PalmettoGallberry_initializeMembers_0'] = _emscripten_bind_PalmettoGallberry_initializeMembers_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_initializeMembers_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1', 2);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3', 4);
  Module['_emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2'] = _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2 = createExportWrapper('emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2', 3);
  Module['_emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0'] = _emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0'] = _emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0'] = _emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0'] = _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0 = createExportWrapper('emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0', 1);
  Module['_emscripten_bind_PalmettoGallberry___destroy___0'] = _emscripten_bind_PalmettoGallberry___destroy___0 = createExportWrapper('emscripten_bind_PalmettoGallberry___destroy___0', 1);
  Module['_emscripten_bind_WesternAspen_WesternAspen_0'] = _emscripten_bind_WesternAspen_WesternAspen_0 = createExportWrapper('emscripten_bind_WesternAspen_WesternAspen_0', 0);
  Module['_emscripten_bind_WesternAspen_initializeMembers_0'] = _emscripten_bind_WesternAspen_initializeMembers_0 = createExportWrapper('emscripten_bind_WesternAspen_initializeMembers_0', 1);
  Module['_emscripten_bind_WesternAspen_calculateAspenMortality_3'] = _emscripten_bind_WesternAspen_calculateAspenMortality_3 = createExportWrapper('emscripten_bind_WesternAspen_calculateAspenMortality_3', 4);
  Module['_emscripten_bind_WesternAspen_getAspenFuelBedDepth_1'] = _emscripten_bind_WesternAspen_getAspenFuelBedDepth_1 = createExportWrapper('emscripten_bind_WesternAspen_getAspenFuelBedDepth_1', 2);
  Module['_emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0'] = _emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0'] = _emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0'] = _emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0'] = _emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0'] = _emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0'] = _emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0'] = _emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenMortality_0'] = _emscripten_bind_WesternAspen_getAspenMortality_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenMortality_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0'] = _emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0'] = _emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0'] = _emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0', 1);
  Module['_emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0'] = _emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0 = createExportWrapper('emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0', 1);
  Module['_emscripten_bind_WesternAspen___destroy___0'] = _emscripten_bind_WesternAspen___destroy___0 = createExportWrapper('emscripten_bind_WesternAspen___destroy___0', 1);
  Module['_emscripten_bind_SIGCrown_SIGCrown_1'] = _emscripten_bind_SIGCrown_SIGCrown_1 = createExportWrapper('emscripten_bind_SIGCrown_SIGCrown_1', 1);
  Module['_emscripten_bind_SIGCrown_getFireType_0'] = _emscripten_bind_SIGCrown_getFireType_0 = createExportWrapper('emscripten_bind_SIGCrown_getFireType_0', 1);
  Module['_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1'] = _emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1 = createExportWrapper('emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1', 2);
  Module['_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1'] = _emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1 = createExportWrapper('emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1', 2);
  Module['_emscripten_bind_SIGCrown_isAllFuelLoadZero_1'] = _emscripten_bind_SIGCrown_isAllFuelLoadZero_1 = createExportWrapper('emscripten_bind_SIGCrown_isAllFuelLoadZero_1', 2);
  Module['_emscripten_bind_SIGCrown_isFuelDynamic_1'] = _emscripten_bind_SIGCrown_isFuelDynamic_1 = createExportWrapper('emscripten_bind_SIGCrown_isFuelDynamic_1', 2);
  Module['_emscripten_bind_SIGCrown_isFuelModelDefined_1'] = _emscripten_bind_SIGCrown_isFuelModelDefined_1 = createExportWrapper('emscripten_bind_SIGCrown_isFuelModelDefined_1', 2);
  Module['_emscripten_bind_SIGCrown_isFuelModelReserved_1'] = _emscripten_bind_SIGCrown_isFuelModelReserved_1 = createExportWrapper('emscripten_bind_SIGCrown_isFuelModelReserved_1', 2);
  Module['_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1'] = _emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1 = createExportWrapper('emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1', 2);
  Module['_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1'] = _emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1 = createExportWrapper('emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1', 2);
  Module['_emscripten_bind_SIGCrown_getAspect_0'] = _emscripten_bind_SIGCrown_getAspect_0 = createExportWrapper('emscripten_bind_SIGCrown_getAspect_0', 1);
  Module['_emscripten_bind_SIGCrown_getCanopyBaseHeight_1'] = _emscripten_bind_SIGCrown_getCanopyBaseHeight_1 = createExportWrapper('emscripten_bind_SIGCrown_getCanopyBaseHeight_1', 2);
  Module['_emscripten_bind_SIGCrown_getCanopyBulkDensity_1'] = _emscripten_bind_SIGCrown_getCanopyBulkDensity_1 = createExportWrapper('emscripten_bind_SIGCrown_getCanopyBulkDensity_1', 2);
  Module['_emscripten_bind_SIGCrown_getCanopyCover_1'] = _emscripten_bind_SIGCrown_getCanopyCover_1 = createExportWrapper('emscripten_bind_SIGCrown_getCanopyCover_1', 2);
  Module['_emscripten_bind_SIGCrown_getCanopyHeight_1'] = _emscripten_bind_SIGCrown_getCanopyHeight_1 = createExportWrapper('emscripten_bind_SIGCrown_getCanopyHeight_1', 2);
  Module['_emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1'] = _emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1 = createExportWrapper('emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1'] = _emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1'] = _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1'] = _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFireActiveRatio_0'] = _emscripten_bind_SIGCrown_getCrownFireActiveRatio_0 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFireActiveRatio_0', 1);
  Module['_emscripten_bind_SIGCrown_getCrownFireArea_1'] = _emscripten_bind_SIGCrown_getCrownFireArea_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFireArea_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFirePerimeter_1'] = _emscripten_bind_SIGCrown_getCrownFirePerimeter_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFirePerimeter_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownTransitionRatio_0'] = _emscripten_bind_SIGCrown_getCrownTransitionRatio_0 = createExportWrapper('emscripten_bind_SIGCrown_getCrownTransitionRatio_0', 1);
  Module['_emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0'] = _emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0', 1);
  Module['_emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1'] = _emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFireSpreadRate_1'] = _emscripten_bind_SIGCrown_getCrownFireSpreadRate_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFireSpreadRate_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFirelineIntensity_1'] = _emscripten_bind_SIGCrown_getCrownFirelineIntensity_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFirelineIntensity_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFlameLength_1'] = _emscripten_bind_SIGCrown_getCrownFlameLength_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFlameLength_1', 2);
  Module['_emscripten_bind_SIGCrown_getCrownFractionBurned_0'] = _emscripten_bind_SIGCrown_getCrownFractionBurned_0 = createExportWrapper('emscripten_bind_SIGCrown_getCrownFractionBurned_0', 1);
  Module['_emscripten_bind_SIGCrown_getCrownRatio_1'] = _emscripten_bind_SIGCrown_getCrownRatio_1 = createExportWrapper('emscripten_bind_SIGCrown_getCrownRatio_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalFirelineIntesity_1'] = _emscripten_bind_SIGCrown_getFinalFirelineIntesity_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalFirelineIntesity_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1'] = _emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalSpreadRate_1'] = _emscripten_bind_SIGCrown_getFinalSpreadRate_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalSpreadRate_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalSpreadDistance_1'] = _emscripten_bind_SIGCrown_getFinalSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalFireArea_1'] = _emscripten_bind_SIGCrown_getFinalFireArea_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalFireArea_1', 2);
  Module['_emscripten_bind_SIGCrown_getFinalFirePerimeter_1'] = _emscripten_bind_SIGCrown_getFinalFirePerimeter_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalFirePerimeter_1', 2);
  Module['_emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2'] = _emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2'] = _emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelLoadHundredHour_2'] = _emscripten_bind_SIGCrown_getFuelLoadHundredHour_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelLoadHundredHour_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2'] = _emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2'] = _emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelLoadOneHour_2'] = _emscripten_bind_SIGCrown_getFuelLoadOneHour_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelLoadOneHour_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelLoadTenHour_2'] = _emscripten_bind_SIGCrown_getFuelLoadTenHour_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelLoadTenHour_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2'] = _emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2'] = _emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2'] = _emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelSavrOneHour_2'] = _emscripten_bind_SIGCrown_getFuelSavrOneHour_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelSavrOneHour_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelbedDepth_2'] = _emscripten_bind_SIGCrown_getFuelbedDepth_2 = createExportWrapper('emscripten_bind_SIGCrown_getFuelbedDepth_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureFoliar_1'] = _emscripten_bind_SIGCrown_getMoistureFoliar_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureFoliar_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureHundredHour_1'] = _emscripten_bind_SIGCrown_getMoistureHundredHour_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureHundredHour_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1'] = _emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureLiveWoody_1'] = _emscripten_bind_SIGCrown_getMoistureLiveWoody_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureLiveWoody_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureOneHour_1'] = _emscripten_bind_SIGCrown_getMoistureOneHour_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureOneHour_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2'] = _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2', 3);
  Module['_emscripten_bind_SIGCrown_getMoistureTenHour_1'] = _emscripten_bind_SIGCrown_getMoistureTenHour_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureTenHour_1', 2);
  Module['_emscripten_bind_SIGCrown_getSlope_1'] = _emscripten_bind_SIGCrown_getSlope_1 = createExportWrapper('emscripten_bind_SIGCrown_getSlope_1', 2);
  Module['_emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1'] = _emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1 = createExportWrapper('emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1', 2);
  Module['_emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1'] = _emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1 = createExportWrapper('emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1', 2);
  Module['_emscripten_bind_SIGCrown_getWindDirection_0'] = _emscripten_bind_SIGCrown_getWindDirection_0 = createExportWrapper('emscripten_bind_SIGCrown_getWindDirection_0', 1);
  Module['_emscripten_bind_SIGCrown_getWindSpeed_2'] = _emscripten_bind_SIGCrown_getWindSpeed_2 = createExportWrapper('emscripten_bind_SIGCrown_getWindSpeed_2', 3);
  Module['_emscripten_bind_SIGCrown_getFuelModelNumber_0'] = _emscripten_bind_SIGCrown_getFuelModelNumber_0 = createExportWrapper('emscripten_bind_SIGCrown_getFuelModelNumber_0', 1);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1'] = _emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1', 2);
  Module['_emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0'] = _emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0 = createExportWrapper('emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0', 1);
  Module['_emscripten_bind_SIGCrown_getFuelCode_1'] = _emscripten_bind_SIGCrown_getFuelCode_1 = createExportWrapper('emscripten_bind_SIGCrown_getFuelCode_1', 2);
  Module['_emscripten_bind_SIGCrown_getFuelName_1'] = _emscripten_bind_SIGCrown_getFuelName_1 = createExportWrapper('emscripten_bind_SIGCrown_getFuelName_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1'] = _emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1'] = _emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1', 2);
  Module['_emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1'] = _emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1 = createExportWrapper('emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1', 2);
  Module['_emscripten_bind_SIGCrown_doCrownRun_0'] = _emscripten_bind_SIGCrown_doCrownRun_0 = createExportWrapper('emscripten_bind_SIGCrown_doCrownRun_0', 1);
  Module['_emscripten_bind_SIGCrown_doCrownRunRothermel_0'] = _emscripten_bind_SIGCrown_doCrownRunRothermel_0 = createExportWrapper('emscripten_bind_SIGCrown_doCrownRunRothermel_0', 1);
  Module['_emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0'] = _emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0 = createExportWrapper('emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0', 1);
  Module['_emscripten_bind_SIGCrown_initializeMembers_0'] = _emscripten_bind_SIGCrown_initializeMembers_0 = createExportWrapper('emscripten_bind_SIGCrown_initializeMembers_0', 1);
  Module['_emscripten_bind_SIGCrown_setAspect_1'] = _emscripten_bind_SIGCrown_setAspect_1 = createExportWrapper('emscripten_bind_SIGCrown_setAspect_1', 2);
  Module['_emscripten_bind_SIGCrown_setCanopyBaseHeight_2'] = _emscripten_bind_SIGCrown_setCanopyBaseHeight_2 = createExportWrapper('emscripten_bind_SIGCrown_setCanopyBaseHeight_2', 3);
  Module['_emscripten_bind_SIGCrown_setCanopyBulkDensity_2'] = _emscripten_bind_SIGCrown_setCanopyBulkDensity_2 = createExportWrapper('emscripten_bind_SIGCrown_setCanopyBulkDensity_2', 3);
  Module['_emscripten_bind_SIGCrown_setCanopyCover_2'] = _emscripten_bind_SIGCrown_setCanopyCover_2 = createExportWrapper('emscripten_bind_SIGCrown_setCanopyCover_2', 3);
  Module['_emscripten_bind_SIGCrown_setCanopyHeight_2'] = _emscripten_bind_SIGCrown_setCanopyHeight_2 = createExportWrapper('emscripten_bind_SIGCrown_setCanopyHeight_2', 3);
  Module['_emscripten_bind_SIGCrown_setCrownRatio_2'] = _emscripten_bind_SIGCrown_setCrownRatio_2 = createExportWrapper('emscripten_bind_SIGCrown_setCrownRatio_2', 3);
  Module['_emscripten_bind_SIGCrown_setFuelModelNumber_1'] = _emscripten_bind_SIGCrown_setFuelModelNumber_1 = createExportWrapper('emscripten_bind_SIGCrown_setFuelModelNumber_1', 2);
  Module['_emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1'] = _emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1 = createExportWrapper('emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1', 2);
  Module['_emscripten_bind_SIGCrown_setElapsedTime_2'] = _emscripten_bind_SIGCrown_setElapsedTime_2 = createExportWrapper('emscripten_bind_SIGCrown_setElapsedTime_2', 3);
  Module['_emscripten_bind_SIGCrown_setFuelModels_1'] = _emscripten_bind_SIGCrown_setFuelModels_1 = createExportWrapper('emscripten_bind_SIGCrown_setFuelModels_1', 2);
  Module['_emscripten_bind_SIGCrown_setMoistureDeadAggregate_2'] = _emscripten_bind_SIGCrown_setMoistureDeadAggregate_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureDeadAggregate_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureFoliar_2'] = _emscripten_bind_SIGCrown_setMoistureFoliar_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureFoliar_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureHundredHour_2'] = _emscripten_bind_SIGCrown_setMoistureHundredHour_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureHundredHour_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureInputMode_1'] = _emscripten_bind_SIGCrown_setMoistureInputMode_1 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureInputMode_1', 2);
  Module['_emscripten_bind_SIGCrown_setMoistureLiveAggregate_2'] = _emscripten_bind_SIGCrown_setMoistureLiveAggregate_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureLiveAggregate_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2'] = _emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureLiveWoody_2'] = _emscripten_bind_SIGCrown_setMoistureLiveWoody_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureLiveWoody_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureOneHour_2'] = _emscripten_bind_SIGCrown_setMoistureOneHour_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureOneHour_2', 3);
  Module['_emscripten_bind_SIGCrown_setMoistureScenarios_1'] = _emscripten_bind_SIGCrown_setMoistureScenarios_1 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureScenarios_1', 2);
  Module['_emscripten_bind_SIGCrown_setMoistureTenHour_2'] = _emscripten_bind_SIGCrown_setMoistureTenHour_2 = createExportWrapper('emscripten_bind_SIGCrown_setMoistureTenHour_2', 3);
  Module['_emscripten_bind_SIGCrown_setSlope_2'] = _emscripten_bind_SIGCrown_setSlope_2 = createExportWrapper('emscripten_bind_SIGCrown_setSlope_2', 3);
  Module['_emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1'] = _emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1 = createExportWrapper('emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1', 2);
  Module['_emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1'] = _emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1 = createExportWrapper('emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1', 2);
  Module['_emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1'] = _emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1 = createExportWrapper('emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1', 2);
  Module['_emscripten_bind_SIGCrown_setWindDirection_1'] = _emscripten_bind_SIGCrown_setWindDirection_1 = createExportWrapper('emscripten_bind_SIGCrown_setWindDirection_1', 2);
  Module['_emscripten_bind_SIGCrown_setWindHeightInputMode_1'] = _emscripten_bind_SIGCrown_setWindHeightInputMode_1 = createExportWrapper('emscripten_bind_SIGCrown_setWindHeightInputMode_1', 2);
  Module['_emscripten_bind_SIGCrown_setWindSpeed_2'] = _emscripten_bind_SIGCrown_setWindSpeed_2 = createExportWrapper('emscripten_bind_SIGCrown_setWindSpeed_2', 3);
  Module['_emscripten_bind_SIGCrown_updateCrownInputs_25'] = _emscripten_bind_SIGCrown_updateCrownInputs_25 = createExportWrapper('emscripten_bind_SIGCrown_updateCrownInputs_25', 26);
  Module['_emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21'] = _emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21 = createExportWrapper('emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21', 22);
  Module['_emscripten_bind_SIGCrown_getFinalFlameLength_1'] = _emscripten_bind_SIGCrown_getFinalFlameLength_1 = createExportWrapper('emscripten_bind_SIGCrown_getFinalFlameLength_1', 2);
  Module['_emscripten_bind_SIGCrown___destroy___0'] = _emscripten_bind_SIGCrown___destroy___0 = createExportWrapper('emscripten_bind_SIGCrown___destroy___0', 1);
  Module['_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0'] = _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0', 0);
  Module['_emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1'] = _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1', 1);
  Module['_emscripten_bind_SpeciesMasterTableRecord___destroy___0'] = _emscripten_bind_SpeciesMasterTableRecord___destroy___0 = createExportWrapper('emscripten_bind_SpeciesMasterTableRecord___destroy___0', 1);
  Module['_emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0'] = _emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0 = createExportWrapper('emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0', 0);
  Module['_emscripten_bind_SpeciesMasterTable_initializeMasterTable_0'] = _emscripten_bind_SpeciesMasterTable_initializeMasterTable_0 = createExportWrapper('emscripten_bind_SpeciesMasterTable_initializeMasterTable_0', 1);
  Module['_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1'] = _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2'] = _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2 = createExportWrapper('emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2', 3);
  Module['_emscripten_bind_SpeciesMasterTable_insertRecord_17'] = _emscripten_bind_SpeciesMasterTable_insertRecord_17 = createExportWrapper('emscripten_bind_SpeciesMasterTable_insertRecord_17', 18);
  Module['_emscripten_bind_SpeciesMasterTable___destroy___0'] = _emscripten_bind_SpeciesMasterTable___destroy___0 = createExportWrapper('emscripten_bind_SpeciesMasterTable___destroy___0', 1);
  Module['_emscripten_bind_SIGMortality_SIGMortality_1'] = _emscripten_bind_SIGMortality_SIGMortality_1 = createExportWrapper('emscripten_bind_SIGMortality_SIGMortality_1', 1);
  Module['_emscripten_bind_SIGMortality_initializeMembers_0'] = _emscripten_bind_SIGMortality_initializeMembers_0 = createExportWrapper('emscripten_bind_SIGMortality_initializeMembers_0', 1);
  Module['_emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2'] = _emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2 = createExportWrapper('emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2', 3);
  Module['_emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2'] = _emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2 = createExportWrapper('emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2', 3);
  Module['_emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2'] = _emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2 = createExportWrapper('emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2', 3);
  Module['_emscripten_bind_SIGMortality_calculateMortality_1'] = _emscripten_bind_SIGMortality_calculateMortality_1 = createExportWrapper('emscripten_bind_SIGMortality_calculateMortality_1', 2);
  Module['_emscripten_bind_SIGMortality_calculateScorchHeight_7'] = _emscripten_bind_SIGMortality_calculateScorchHeight_7 = createExportWrapper('emscripten_bind_SIGMortality_calculateScorchHeight_7', 8);
  Module['_emscripten_bind_SIGMortality_calculateMortalityAllDirections_1'] = _emscripten_bind_SIGMortality_calculateMortalityAllDirections_1 = createExportWrapper('emscripten_bind_SIGMortality_calculateMortalityAllDirections_1', 2);
  Module['_emscripten_bind_SIGMortality_getRequiredFieldVector_0'] = _emscripten_bind_SIGMortality_getRequiredFieldVector_0 = createExportWrapper('emscripten_bind_SIGMortality_getRequiredFieldVector_0', 1);
  Module['_emscripten_bind_SIGMortality_getBeetleDamage_0'] = _emscripten_bind_SIGMortality_getBeetleDamage_0 = createExportWrapper('emscripten_bind_SIGMortality_getBeetleDamage_0', 1);
  Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCode_0'] = _emscripten_bind_SIGMortality_getCrownDamageEquationCode_0 = createExportWrapper('emscripten_bind_SIGMortality_getCrownDamageEquationCode_0', 1);
  Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getCrownDamageType_0'] = _emscripten_bind_SIGMortality_getCrownDamageType_0 = createExportWrapper('emscripten_bind_SIGMortality_getCrownDamageType_0', 1);
  Module['_emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getSpeciesCode_0'] = _emscripten_bind_SIGMortality_getSpeciesCode_0 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesCode_0', 1);
  Module['_emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getEquationType_0'] = _emscripten_bind_SIGMortality_getEquationType_0 = createExportWrapper('emscripten_bind_SIGMortality_getEquationType_0', 1);
  Module['_emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getFireSeverity_0'] = _emscripten_bind_SIGMortality_getFireSeverity_0 = createExportWrapper('emscripten_bind_SIGMortality_getFireSeverity_0', 1);
  Module['_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0'] = _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0 = createExportWrapper('emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0', 1);
  Module['_emscripten_bind_SIGMortality_getGACCRegion_0'] = _emscripten_bind_SIGMortality_getGACCRegion_0 = createExportWrapper('emscripten_bind_SIGMortality_getGACCRegion_0', 1);
  Module['_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1'] = _emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1', 2);
  Module['_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2'] = _emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2', 3);
  Module['_emscripten_bind_SIGMortality_getBarkThickness_1'] = _emscripten_bind_SIGMortality_getBarkThickness_1 = createExportWrapper('emscripten_bind_SIGMortality_getBarkThickness_1', 2);
  Module['_emscripten_bind_SIGMortality_getBasalAreaKillled_0'] = _emscripten_bind_SIGMortality_getBasalAreaKillled_0 = createExportWrapper('emscripten_bind_SIGMortality_getBasalAreaKillled_0', 1);
  Module['_emscripten_bind_SIGMortality_getBasalAreaPostfire_0'] = _emscripten_bind_SIGMortality_getBasalAreaPostfire_0 = createExportWrapper('emscripten_bind_SIGMortality_getBasalAreaPostfire_0', 1);
  Module['_emscripten_bind_SIGMortality_getBasalAreaPrefire_0'] = _emscripten_bind_SIGMortality_getBasalAreaPrefire_0 = createExportWrapper('emscripten_bind_SIGMortality_getBasalAreaPrefire_0', 1);
  Module['_emscripten_bind_SIGMortality_getBoleCharHeight_1'] = _emscripten_bind_SIGMortality_getBoleCharHeight_1 = createExportWrapper('emscripten_bind_SIGMortality_getBoleCharHeight_1', 2);
  Module['_emscripten_bind_SIGMortality_getBoleCharHeightBacking_1'] = _emscripten_bind_SIGMortality_getBoleCharHeightBacking_1 = createExportWrapper('emscripten_bind_SIGMortality_getBoleCharHeightBacking_1', 2);
  Module['_emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1'] = _emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1 = createExportWrapper('emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1', 2);
  Module['_emscripten_bind_SIGMortality_getCambiumKillRating_0'] = _emscripten_bind_SIGMortality_getCambiumKillRating_0 = createExportWrapper('emscripten_bind_SIGMortality_getCambiumKillRating_0', 1);
  Module['_emscripten_bind_SIGMortality_getCrownDamage_0'] = _emscripten_bind_SIGMortality_getCrownDamage_0 = createExportWrapper('emscripten_bind_SIGMortality_getCrownDamage_0', 1);
  Module['_emscripten_bind_SIGMortality_getCrownRatio_1'] = _emscripten_bind_SIGMortality_getCrownRatio_1 = createExportWrapper('emscripten_bind_SIGMortality_getCrownRatio_1', 2);
  Module['_emscripten_bind_SIGMortality_getCVSorCLS_0'] = _emscripten_bind_SIGMortality_getCVSorCLS_0 = createExportWrapper('emscripten_bind_SIGMortality_getCVSorCLS_0', 1);
  Module['_emscripten_bind_SIGMortality_getDBH_1'] = _emscripten_bind_SIGMortality_getDBH_1 = createExportWrapper('emscripten_bind_SIGMortality_getDBH_1', 2);
  Module['_emscripten_bind_SIGMortality_getFlameLength_1'] = _emscripten_bind_SIGMortality_getFlameLength_1 = createExportWrapper('emscripten_bind_SIGMortality_getFlameLength_1', 2);
  Module['_emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1'] = _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1 = createExportWrapper('emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1', 2);
  Module['_emscripten_bind_SIGMortality_getKilledTrees_0'] = _emscripten_bind_SIGMortality_getKilledTrees_0 = createExportWrapper('emscripten_bind_SIGMortality_getKilledTrees_0', 1);
  Module['_emscripten_bind_SIGMortality_getProbabilityOfMortality_1'] = _emscripten_bind_SIGMortality_getProbabilityOfMortality_1 = createExportWrapper('emscripten_bind_SIGMortality_getProbabilityOfMortality_1', 2);
  Module['_emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1'] = _emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1 = createExportWrapper('emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1', 2);
  Module['_emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1'] = _emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1 = createExportWrapper('emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1', 2);
  Module['_emscripten_bind_SIGMortality_getScorchHeight_1'] = _emscripten_bind_SIGMortality_getScorchHeight_1 = createExportWrapper('emscripten_bind_SIGMortality_getScorchHeight_1', 2);
  Module['_emscripten_bind_SIGMortality_getScorchHeightBacking_1'] = _emscripten_bind_SIGMortality_getScorchHeightBacking_1 = createExportWrapper('emscripten_bind_SIGMortality_getScorchHeightBacking_1', 2);
  Module['_emscripten_bind_SIGMortality_getScorchHeightFlanking_1'] = _emscripten_bind_SIGMortality_getScorchHeightFlanking_1 = createExportWrapper('emscripten_bind_SIGMortality_getScorchHeightFlanking_1', 2);
  Module['_emscripten_bind_SIGMortality_getTotalPrefireTrees_0'] = _emscripten_bind_SIGMortality_getTotalPrefireTrees_0 = createExportWrapper('emscripten_bind_SIGMortality_getTotalPrefireTrees_0', 1);
  Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1'] = _emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1'] = _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1'] = _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1'] = _emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1'] = _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1'] = _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1'] = _emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1', 2);
  Module['_emscripten_bind_SIGMortality_getTreeHeight_1'] = _emscripten_bind_SIGMortality_getTreeHeight_1 = createExportWrapper('emscripten_bind_SIGMortality_getTreeHeight_1', 2);
  Module['_emscripten_bind_SIGMortality_postfireCanopyCover_0'] = _emscripten_bind_SIGMortality_postfireCanopyCover_0 = createExportWrapper('emscripten_bind_SIGMortality_postfireCanopyCover_0', 1);
  Module['_emscripten_bind_SIGMortality_prefireCanopyCover_0'] = _emscripten_bind_SIGMortality_prefireCanopyCover_0 = createExportWrapper('emscripten_bind_SIGMortality_prefireCanopyCover_0', 1);
  Module['_emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0'] = _emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0 = createExportWrapper('emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0', 1);
  Module['_emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1'] = _emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1 = createExportWrapper('emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1', 2);
  Module['_emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0'] = _emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0 = createExportWrapper('emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0', 1);
  Module['_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1'] = _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2'] = _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2 = createExportWrapper('emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2', 3);
  Module['_emscripten_bind_SIGMortality_setAirTemperature_2'] = _emscripten_bind_SIGMortality_setAirTemperature_2 = createExportWrapper('emscripten_bind_SIGMortality_setAirTemperature_2', 3);
  Module['_emscripten_bind_SIGMortality_setBeetleDamage_1'] = _emscripten_bind_SIGMortality_setBeetleDamage_1 = createExportWrapper('emscripten_bind_SIGMortality_setBeetleDamage_1', 2);
  Module['_emscripten_bind_SIGMortality_setBoleCharHeight_2'] = _emscripten_bind_SIGMortality_setBoleCharHeight_2 = createExportWrapper('emscripten_bind_SIGMortality_setBoleCharHeight_2', 3);
  Module['_emscripten_bind_SIGMortality_setCambiumKillRating_1'] = _emscripten_bind_SIGMortality_setCambiumKillRating_1 = createExportWrapper('emscripten_bind_SIGMortality_setCambiumKillRating_1', 2);
  Module['_emscripten_bind_SIGMortality_setCrownDamage_1'] = _emscripten_bind_SIGMortality_setCrownDamage_1 = createExportWrapper('emscripten_bind_SIGMortality_setCrownDamage_1', 2);
  Module['_emscripten_bind_SIGMortality_setCrownRatio_2'] = _emscripten_bind_SIGMortality_setCrownRatio_2 = createExportWrapper('emscripten_bind_SIGMortality_setCrownRatio_2', 3);
  Module['_emscripten_bind_SIGMortality_setDBH_2'] = _emscripten_bind_SIGMortality_setDBH_2 = createExportWrapper('emscripten_bind_SIGMortality_setDBH_2', 3);
  Module['_emscripten_bind_SIGMortality_setEquationType_1'] = _emscripten_bind_SIGMortality_setEquationType_1 = createExportWrapper('emscripten_bind_SIGMortality_setEquationType_1', 2);
  Module['_emscripten_bind_SIGMortality_setFireSeverity_1'] = _emscripten_bind_SIGMortality_setFireSeverity_1 = createExportWrapper('emscripten_bind_SIGMortality_setFireSeverity_1', 2);
  Module['_emscripten_bind_SIGMortality_setFirelineIntensity_2'] = _emscripten_bind_SIGMortality_setFirelineIntensity_2 = createExportWrapper('emscripten_bind_SIGMortality_setFirelineIntensity_2', 3);
  Module['_emscripten_bind_SIGMortality_setFlameLength_2'] = _emscripten_bind_SIGMortality_setFlameLength_2 = createExportWrapper('emscripten_bind_SIGMortality_setFlameLength_2', 3);
  Module['_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1'] = _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1 = createExportWrapper('emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1', 2);
  Module['_emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2'] = _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2 = createExportWrapper('emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2', 3);
  Module['_emscripten_bind_SIGMortality_setMidFlameWindSpeed_2'] = _emscripten_bind_SIGMortality_setMidFlameWindSpeed_2 = createExportWrapper('emscripten_bind_SIGMortality_setMidFlameWindSpeed_2', 3);
  Module['_emscripten_bind_SIGMortality_setGACCRegion_1'] = _emscripten_bind_SIGMortality_setGACCRegion_1 = createExportWrapper('emscripten_bind_SIGMortality_setGACCRegion_1', 2);
  Module['_emscripten_bind_SIGMortality_setScorchHeight_2'] = _emscripten_bind_SIGMortality_setScorchHeight_2 = createExportWrapper('emscripten_bind_SIGMortality_setScorchHeight_2', 3);
  Module['_emscripten_bind_SIGMortality_setSpeciesCode_1'] = _emscripten_bind_SIGMortality_setSpeciesCode_1 = createExportWrapper('emscripten_bind_SIGMortality_setSpeciesCode_1', 2);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2'] = _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2', 3);
  Module['_emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2'] = _emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2 = createExportWrapper('emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2', 3);
  Module['_emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2'] = _emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2 = createExportWrapper('emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2', 3);
  Module['_emscripten_bind_SIGMortality_setTreeHeight_2'] = _emscripten_bind_SIGMortality_setTreeHeight_2 = createExportWrapper('emscripten_bind_SIGMortality_setTreeHeight_2', 3);
  Module['_emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1'] = _emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1 = createExportWrapper('emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1', 2);
  Module['_emscripten_bind_SIGMortality_setWindHeightInputMode_1'] = _emscripten_bind_SIGMortality_setWindHeightInputMode_1 = createExportWrapper('emscripten_bind_SIGMortality_setWindHeightInputMode_1', 2);
  Module['_emscripten_bind_SIGMortality_setWindSpeed_2'] = _emscripten_bind_SIGMortality_setWindSpeed_2 = createExportWrapper('emscripten_bind_SIGMortality_setWindSpeed_2', 3);
  Module['_emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4'] = _emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4 = createExportWrapper('emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4', 5);
  Module['_emscripten_bind_SIGMortality___destroy___0'] = _emscripten_bind_SIGMortality___destroy___0 = createExportWrapper('emscripten_bind_SIGMortality___destroy___0', 1);
  Module['_emscripten_bind_WindSpeedUtility_WindSpeedUtility_0'] = _emscripten_bind_WindSpeedUtility_WindSpeedUtility_0 = createExportWrapper('emscripten_bind_WindSpeedUtility_WindSpeedUtility_0', 0);
  Module['_emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2'] = _emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2 = createExportWrapper('emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2', 3);
  Module['_emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1'] = _emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1 = createExportWrapper('emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1', 2);
  Module['_emscripten_bind_WindSpeedUtility___destroy___0'] = _emscripten_bind_WindSpeedUtility___destroy___0 = createExportWrapper('emscripten_bind_WindSpeedUtility___destroy___0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0', 0);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8', 9);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1', 2);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0', 1);
  Module['_emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0'] = _emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0 = createExportWrapper('emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0', 1);
  Module['_emscripten_bind_SIGSlopeTool_SIGSlopeTool_0'] = _emscripten_bind_SIGSlopeTool_SIGSlopeTool_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_SIGSlopeTool_0', 0);
  Module['_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1'] = _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistance_2'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistance_2 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistance_2', 3);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2', 3);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1'] = _emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1'] = _emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1'] = _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1'] = _emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1'] = _emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1'] = _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1'] = _emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0'] = _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0'] = _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0'] = _emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0'] = _emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1'] = _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0'] = _emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0'] = _emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0 = createExportWrapper('emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0', 1);
  Module['_emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2'] = _emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2 = createExportWrapper('emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2', 3);
  Module['_emscripten_bind_SIGSlopeTool_setContourInterval_2'] = _emscripten_bind_SIGSlopeTool_setContourInterval_2 = createExportWrapper('emscripten_bind_SIGSlopeTool_setContourInterval_2', 3);
  Module['_emscripten_bind_SIGSlopeTool_setMapDistance_2'] = _emscripten_bind_SIGSlopeTool_setMapDistance_2 = createExportWrapper('emscripten_bind_SIGSlopeTool_setMapDistance_2', 3);
  Module['_emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1'] = _emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1'] = _emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1', 2);
  Module['_emscripten_bind_SIGSlopeTool_setNumberOfContours_1'] = _emscripten_bind_SIGSlopeTool_setNumberOfContours_1 = createExportWrapper('emscripten_bind_SIGSlopeTool_setNumberOfContours_1', 2);
  Module['_emscripten_bind_SIGSlopeTool___destroy___0'] = _emscripten_bind_SIGSlopeTool___destroy___0 = createExportWrapper('emscripten_bind_SIGSlopeTool___destroy___0', 1);
  Module['_emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0'] = _emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0', 0);
  Module['_emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0'] = _emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0', 1);
  Module['_emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2'] = _emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2', 3);
  Module['_emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2'] = _emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2', 3);
  Module['_emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1'] = _emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1', 2);
  Module['_emscripten_bind_VaporPressureDeficitCalculator___destroy___0'] = _emscripten_bind_VaporPressureDeficitCalculator___destroy___0 = createExportWrapper('emscripten_bind_VaporPressureDeficitCalculator___destroy___0', 1);
  Module['_emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0'] = _emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0 = createExportWrapper('emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0', 0);
  Module['_emscripten_bind_RelativeHumidityTool_calculate_0'] = _emscripten_bind_RelativeHumidityTool_calculate_0 = createExportWrapper('emscripten_bind_RelativeHumidityTool_calculate_0', 1);
  Module['_emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1'] = _emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_getSiteElevation_1'] = _emscripten_bind_RelativeHumidityTool_getSiteElevation_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getSiteElevation_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1'] = _emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1'] = _emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1'] = _emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1'] = _emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1 = createExportWrapper('emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1', 2);
  Module['_emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2'] = _emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2 = createExportWrapper('emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2', 3);
  Module['_emscripten_bind_RelativeHumidityTool_setSiteElevation_2'] = _emscripten_bind_RelativeHumidityTool_setSiteElevation_2 = createExportWrapper('emscripten_bind_RelativeHumidityTool_setSiteElevation_2', 3);
  Module['_emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2'] = _emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2 = createExportWrapper('emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2', 3);
  Module['_emscripten_bind_RelativeHumidityTool___destroy___0'] = _emscripten_bind_RelativeHumidityTool___destroy___0 = createExportWrapper('emscripten_bind_RelativeHumidityTool___destroy___0', 1);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet', 0);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_Acres'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_Acres = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_Acres', 0);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares', 0);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters', 0);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles', 0);
  Module['_emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers = createExportWrapper('emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers', 0);
  Module['_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre'] = _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre = createExportWrapper('emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre', 0);
  Module['_emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare'] = _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare = createExportWrapper('emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare', 0);
  Module['_emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction'] = _emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction = createExportWrapper('emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction', 0);
  Module['_emscripten_enum_FractionUnits_FractionUnitsEnum_Percent'] = _emscripten_enum_FractionUnits_FractionUnitsEnum_Percent = createExportWrapper('emscripten_enum_FractionUnits_FractionUnitsEnum_Percent', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Feet'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Feet = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Feet', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Inches'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Inches = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Inches', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Meters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Meters = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Meters', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Chains'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Chains = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Chains', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Miles'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Miles = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Miles', 0);
  Module['_emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers = createExportWrapper('emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers', 0);
  Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot = createExportWrapper('emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot', 0);
  Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre = createExportWrapper('emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre', 0);
  Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare = createExportWrapper('emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare', 0);
  Module['_emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter = createExportWrapper('emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter', 0);
  Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet = createExportWrapper('emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet', 0);
  Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters = createExportWrapper('emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters', 0);
  Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches = createExportWrapper('emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches', 0);
  Module['_emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters = createExportWrapper('emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour', 0);
  Module['_emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour = createExportWrapper('emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Bar'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Bar = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_Bar', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere', 0);
  Module['_emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch = createExportWrapper('emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch', 0);
  Module['_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees'] = _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees = createExportWrapper('emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees', 0);
  Module['_emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent'] = _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent = createExportWrapper('emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent', 0);
  Module['_emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot'] = _emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot = createExportWrapper('emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot', 0);
  Module['_emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter'] = _emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter = createExportWrapper('emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter', 0);
  Module['_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound'] = _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound = createExportWrapper('emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound', 0);
  Module['_emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram'] = _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram = createExportWrapper('emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram', 0);
  Module['_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot'] = _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot = createExportWrapper('emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot', 0);
  Module['_emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter'] = _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter = createExportWrapper('emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter', 0);
  Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot = createExportWrapper('emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot', 0);
  Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter = createExportWrapper('emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter', 0);
  Module['_emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter = createExportWrapper('emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter', 0);
  Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute = createExportWrapper('emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute', 0);
  Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond = createExportWrapper('emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond', 0);
  Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond = createExportWrapper('emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond', 0);
  Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute = createExportWrapper('emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute', 0);
  Module['_emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter = createExportWrapper('emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter', 0);
  Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond = createExportWrapper('emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond', 0);
  Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute = createExportWrapper('emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute', 0);
  Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond = createExportWrapper('emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond', 0);
  Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute = createExportWrapper('emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute', 0);
  Module['_emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter = createExportWrapper('emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter', 0);
  Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit = createExportWrapper('emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit', 0);
  Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius = createExportWrapper('emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius', 0);
  Module['_emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin = createExportWrapper('emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin', 0);
  Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes = createExportWrapper('emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes', 0);
  Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds = createExportWrapper('emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds', 0);
  Module['_emscripten_enum_TimeUnits_TimeUnitsEnum_Hours'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Hours = createExportWrapper('emscripten_enum_TimeUnits_TimeUnitsEnum_Hours', 0);
  Module['_emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack'] = _emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack = createExportWrapper('emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack', 0);
  Module['_emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack'] = _emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack = createExportWrapper('emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Unreported'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Unreported = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Unreported', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Reported'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Reported = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Reported', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Attacked'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Attacked = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Attacked', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Contained'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Contained = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Contained', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Overrun'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Overrun = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Overrun', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_Overflow'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Overflow = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_Overflow', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded'] = _emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded', 0);
  Module['_emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded'] = _emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded = createExportWrapper('emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded', 0);
  Module['_emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank = createExportWrapper('emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank', 0);
  Module['_emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank = createExportWrapper('emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank', 0);
  Module['_emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks'] = _emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks = createExportWrapper('emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks', 0);
  Module['_emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank = createExportWrapper('emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed', 0);
  Module['_emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss = createExportWrapper('emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss', 0);
  Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Negative'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Negative = createExportWrapper('emscripten_enum_LightningCharge_LightningChargeEnum_Negative', 0);
  Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Positive'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Positive = createExportWrapper('emscripten_enum_LightningCharge_LightningChargeEnum_Positive', 0);
  Module['_emscripten_enum_LightningCharge_LightningChargeEnum_Unknown'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Unknown = createExportWrapper('emscripten_enum_LightningCharge_LightningChargeEnum_Unknown', 0);
  Module['_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED'] = _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED = createExportWrapper('emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED', 0);
  Module['_emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN'] = _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN = createExportWrapper('emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE', 0);
  Module['_emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE = createExportWrapper('emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE', 0);
  Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD = createExportWrapper('emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD', 0);
  Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM = createExportWrapper('emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM', 0);
  Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD = createExportWrapper('emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD', 0);
  Module['_emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP = createExportWrapper('emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP', 0);
  Module['_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead'] = _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead = createExportWrapper('emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead', 0);
  Module['_emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live'] = _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live = createExportWrapper('emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses', 0);
  Module['_emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels = createExportWrapper('emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels', 0);
  Module['_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low'] = _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low = createExportWrapper('emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low', 0);
  Module['_emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate'] = _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate = createExportWrapper('emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate', 0);
  Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet = createExportWrapper('emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet', 0);
  Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise = createExportWrapper('emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise', 0);
  Module['_emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush = createExportWrapper('emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush', 0);
  Module['_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad'] = _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad = createExportWrapper('emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad', 0);
  Module['_emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType'] = _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType = createExportWrapper('emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType', 0);
  Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass = createExportWrapper('emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass', 0);
  Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate = createExportWrapper('emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate', 0);
  Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass = createExportWrapper('emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass', 0);
  Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass = createExportWrapper('emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass', 0);
  Module['_emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario = createExportWrapper('emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate', 0);
  Module['_emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate = createExportWrapper('emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate', 0);
  Module['_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint'] = _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint = createExportWrapper('emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint', 0);
  Module['_emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter'] = _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter = createExportWrapper('emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter', 0);
  Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod = createExportWrapper('emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod', 0);
  Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic = createExportWrapper('emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic', 0);
  Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic = createExportWrapper('emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic', 0);
  Module['_emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional = createExportWrapper('emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional', 0);
  Module['_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered'] = _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered = createExportWrapper('emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered', 0);
  Module['_emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered'] = _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered = createExportWrapper('emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered', 0);
  Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput = createExportWrapper('emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput', 0);
  Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio = createExportWrapper('emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio', 0);
  Module['_emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio = createExportWrapper('emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio', 0);
  Module['_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope'] = _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope = createExportWrapper('emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope', 0);
  Module['_emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth'] = _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth = createExportWrapper('emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth', 0);
  Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame = createExportWrapper('emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame', 0);
  Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot = createExportWrapper('emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot', 0);
  Module['_emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter = createExportWrapper('emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter', 0);
  Module['_emscripten_enum_WindUpslopeAlignmentMode_NotAligned'] = _emscripten_enum_WindUpslopeAlignmentMode_NotAligned = createExportWrapper('emscripten_enum_WindUpslopeAlignmentMode_NotAligned', 0);
  Module['_emscripten_enum_WindUpslopeAlignmentMode_Aligned'] = _emscripten_enum_WindUpslopeAlignmentMode_Aligned = createExportWrapper('emscripten_enum_WindUpslopeAlignmentMode_Aligned', 0);
  Module['_emscripten_enum_SurfaceRunInDirectionOf_MaxSpread'] = _emscripten_enum_SurfaceRunInDirectionOf_MaxSpread = createExportWrapper('emscripten_enum_SurfaceRunInDirectionOf_MaxSpread', 0);
  Module['_emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest'] = _emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest = createExportWrapper('emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest', 0);
  Module['_emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking'] = _emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking = createExportWrapper('emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking', 0);
  Module['_emscripten_enum_FireType_FireTypeEnum_Surface'] = _emscripten_enum_FireType_FireTypeEnum_Surface = createExportWrapper('emscripten_enum_FireType_FireTypeEnum_Surface', 0);
  Module['_emscripten_enum_FireType_FireTypeEnum_Torching'] = _emscripten_enum_FireType_FireTypeEnum_Torching = createExportWrapper('emscripten_enum_FireType_FireTypeEnum_Torching', 0);
  Module['_emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire'] = _emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire = createExportWrapper('emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire', 0);
  Module['_emscripten_enum_FireType_FireTypeEnum_Crowning'] = _emscripten_enum_FireType_FireTypeEnum_Crowning = createExportWrapper('emscripten_enum_FireType_FireTypeEnum_Crowning', 0);
  Module['_emscripten_enum_BeetleDamage_not_set'] = _emscripten_enum_BeetleDamage_not_set = createExportWrapper('emscripten_enum_BeetleDamage_not_set', 0);
  Module['_emscripten_enum_BeetleDamage_no'] = _emscripten_enum_BeetleDamage_no = createExportWrapper('emscripten_enum_BeetleDamage_no', 0);
  Module['_emscripten_enum_BeetleDamage_yes'] = _emscripten_enum_BeetleDamage_yes = createExportWrapper('emscripten_enum_BeetleDamage_yes', 0);
  Module['_emscripten_enum_CrownFireCalculationMethod_rothermel'] = _emscripten_enum_CrownFireCalculationMethod_rothermel = createExportWrapper('emscripten_enum_CrownFireCalculationMethod_rothermel', 0);
  Module['_emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt'] = _emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt = createExportWrapper('emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_not_set'] = _emscripten_enum_CrownDamageEquationCode_not_set = createExportWrapper('emscripten_enum_CrownDamageEquationCode_not_set', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_white_fir'] = _emscripten_enum_CrownDamageEquationCode_white_fir = createExportWrapper('emscripten_enum_CrownDamageEquationCode_white_fir', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_subalpine_fir'] = _emscripten_enum_CrownDamageEquationCode_subalpine_fir = createExportWrapper('emscripten_enum_CrownDamageEquationCode_subalpine_fir', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_incense_cedar'] = _emscripten_enum_CrownDamageEquationCode_incense_cedar = createExportWrapper('emscripten_enum_CrownDamageEquationCode_incense_cedar', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_western_larch'] = _emscripten_enum_CrownDamageEquationCode_western_larch = createExportWrapper('emscripten_enum_CrownDamageEquationCode_western_larch', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_whitebark_pine'] = _emscripten_enum_CrownDamageEquationCode_whitebark_pine = createExportWrapper('emscripten_enum_CrownDamageEquationCode_whitebark_pine', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_engelmann_spruce'] = _emscripten_enum_CrownDamageEquationCode_engelmann_spruce = createExportWrapper('emscripten_enum_CrownDamageEquationCode_engelmann_spruce', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_sugar_pine'] = _emscripten_enum_CrownDamageEquationCode_sugar_pine = createExportWrapper('emscripten_enum_CrownDamageEquationCode_sugar_pine', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_red_fir'] = _emscripten_enum_CrownDamageEquationCode_red_fir = createExportWrapper('emscripten_enum_CrownDamageEquationCode_red_fir', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_ponderosa_pine'] = _emscripten_enum_CrownDamageEquationCode_ponderosa_pine = createExportWrapper('emscripten_enum_CrownDamageEquationCode_ponderosa_pine', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_ponderosa_kill'] = _emscripten_enum_CrownDamageEquationCode_ponderosa_kill = createExportWrapper('emscripten_enum_CrownDamageEquationCode_ponderosa_kill', 0);
  Module['_emscripten_enum_CrownDamageEquationCode_douglas_fir'] = _emscripten_enum_CrownDamageEquationCode_douglas_fir = createExportWrapper('emscripten_enum_CrownDamageEquationCode_douglas_fir', 0);
  Module['_emscripten_enum_CrownDamageType_not_set'] = _emscripten_enum_CrownDamageType_not_set = createExportWrapper('emscripten_enum_CrownDamageType_not_set', 0);
  Module['_emscripten_enum_CrownDamageType_crown_length'] = _emscripten_enum_CrownDamageType_crown_length = createExportWrapper('emscripten_enum_CrownDamageType_crown_length', 0);
  Module['_emscripten_enum_CrownDamageType_crown_volume'] = _emscripten_enum_CrownDamageType_crown_volume = createExportWrapper('emscripten_enum_CrownDamageType_crown_volume', 0);
  Module['_emscripten_enum_CrownDamageType_crown_kill'] = _emscripten_enum_CrownDamageType_crown_kill = createExportWrapper('emscripten_enum_CrownDamageType_crown_kill', 0);
  Module['_emscripten_enum_EquationType_not_set'] = _emscripten_enum_EquationType_not_set = createExportWrapper('emscripten_enum_EquationType_not_set', 0);
  Module['_emscripten_enum_EquationType_crown_scorch'] = _emscripten_enum_EquationType_crown_scorch = createExportWrapper('emscripten_enum_EquationType_crown_scorch', 0);
  Module['_emscripten_enum_EquationType_bole_char'] = _emscripten_enum_EquationType_bole_char = createExportWrapper('emscripten_enum_EquationType_bole_char', 0);
  Module['_emscripten_enum_EquationType_crown_damage'] = _emscripten_enum_EquationType_crown_damage = createExportWrapper('emscripten_enum_EquationType_crown_damage', 0);
  Module['_emscripten_enum_FireSeverity_not_set'] = _emscripten_enum_FireSeverity_not_set = createExportWrapper('emscripten_enum_FireSeverity_not_set', 0);
  Module['_emscripten_enum_FireSeverity_empty'] = _emscripten_enum_FireSeverity_empty = createExportWrapper('emscripten_enum_FireSeverity_empty', 0);
  Module['_emscripten_enum_FireSeverity_low'] = _emscripten_enum_FireSeverity_low = createExportWrapper('emscripten_enum_FireSeverity_low', 0);
  Module['_emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length'] = _emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length = createExportWrapper('emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length', 0);
  Module['_emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height'] = _emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height = createExportWrapper('emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height', 0);
  Module['_emscripten_enum_GACC_NotSet'] = _emscripten_enum_GACC_NotSet = createExportWrapper('emscripten_enum_GACC_NotSet', 0);
  Module['_emscripten_enum_GACC_Alaska'] = _emscripten_enum_GACC_Alaska = createExportWrapper('emscripten_enum_GACC_Alaska', 0);
  Module['_emscripten_enum_GACC_California'] = _emscripten_enum_GACC_California = createExportWrapper('emscripten_enum_GACC_California', 0);
  Module['_emscripten_enum_GACC_EasternArea'] = _emscripten_enum_GACC_EasternArea = createExportWrapper('emscripten_enum_GACC_EasternArea', 0);
  Module['_emscripten_enum_GACC_GreatBasin'] = _emscripten_enum_GACC_GreatBasin = createExportWrapper('emscripten_enum_GACC_GreatBasin', 0);
  Module['_emscripten_enum_GACC_NorthernRockies'] = _emscripten_enum_GACC_NorthernRockies = createExportWrapper('emscripten_enum_GACC_NorthernRockies', 0);
  Module['_emscripten_enum_GACC_Northwest'] = _emscripten_enum_GACC_Northwest = createExportWrapper('emscripten_enum_GACC_Northwest', 0);
  Module['_emscripten_enum_GACC_RockeyMountain'] = _emscripten_enum_GACC_RockeyMountain = createExportWrapper('emscripten_enum_GACC_RockeyMountain', 0);
  Module['_emscripten_enum_GACC_SouthernArea'] = _emscripten_enum_GACC_SouthernArea = createExportWrapper('emscripten_enum_GACC_SouthernArea', 0);
  Module['_emscripten_enum_GACC_Southwest'] = _emscripten_enum_GACC_Southwest = createExportWrapper('emscripten_enum_GACC_Southwest', 0);
  Module['_emscripten_enum_RequiredFieldNames_region'] = _emscripten_enum_RequiredFieldNames_region = createExportWrapper('emscripten_enum_RequiredFieldNames_region', 0);
  Module['_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch'] = _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch = createExportWrapper('emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch', 0);
  Module['_emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value'] = _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value = createExportWrapper('emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value', 0);
  Module['_emscripten_enum_RequiredFieldNames_equation_type'] = _emscripten_enum_RequiredFieldNames_equation_type = createExportWrapper('emscripten_enum_RequiredFieldNames_equation_type', 0);
  Module['_emscripten_enum_RequiredFieldNames_dbh'] = _emscripten_enum_RequiredFieldNames_dbh = createExportWrapper('emscripten_enum_RequiredFieldNames_dbh', 0);
  Module['_emscripten_enum_RequiredFieldNames_tree_height'] = _emscripten_enum_RequiredFieldNames_tree_height = createExportWrapper('emscripten_enum_RequiredFieldNames_tree_height', 0);
  Module['_emscripten_enum_RequiredFieldNames_crown_ratio'] = _emscripten_enum_RequiredFieldNames_crown_ratio = createExportWrapper('emscripten_enum_RequiredFieldNames_crown_ratio', 0);
  Module['_emscripten_enum_RequiredFieldNames_crown_damage'] = _emscripten_enum_RequiredFieldNames_crown_damage = createExportWrapper('emscripten_enum_RequiredFieldNames_crown_damage', 0);
  Module['_emscripten_enum_RequiredFieldNames_cambium_kill_rating'] = _emscripten_enum_RequiredFieldNames_cambium_kill_rating = createExportWrapper('emscripten_enum_RequiredFieldNames_cambium_kill_rating', 0);
  Module['_emscripten_enum_RequiredFieldNames_beetle_damage'] = _emscripten_enum_RequiredFieldNames_beetle_damage = createExportWrapper('emscripten_enum_RequiredFieldNames_beetle_damage', 0);
  Module['_emscripten_enum_RequiredFieldNames_bole_char_height'] = _emscripten_enum_RequiredFieldNames_bole_char_height = createExportWrapper('emscripten_enum_RequiredFieldNames_bole_char_height', 0);
  Module['_emscripten_enum_RequiredFieldNames_bark_thickness'] = _emscripten_enum_RequiredFieldNames_bark_thickness = createExportWrapper('emscripten_enum_RequiredFieldNames_bark_thickness', 0);
  Module['_emscripten_enum_RequiredFieldNames_fire_severity'] = _emscripten_enum_RequiredFieldNames_fire_severity = createExportWrapper('emscripten_enum_RequiredFieldNames_fire_severity', 0);
  Module['_emscripten_enum_RequiredFieldNames_num_inputs'] = _emscripten_enum_RequiredFieldNames_num_inputs = createExportWrapper('emscripten_enum_RequiredFieldNames_num_inputs', 0);
  Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH = createExportWrapper('emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH', 0);
  Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST = createExportWrapper('emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST', 0);
  Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH = createExportWrapper('emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH', 0);
  Module['_emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST = createExportWrapper('emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F = createExportWrapper('emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F', 0);
  Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT = createExportWrapper('emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT', 0);
  Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT = createExportWrapper('emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT', 0);
  Module['_emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT = createExportWrapper('emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT', 0);
  Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY = createExportWrapper('emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY', 0);
  Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT = createExportWrapper('emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT', 0);
  Module['_emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN = createExportWrapper('emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT = createExportWrapper('emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED'] = _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED = createExportWrapper('emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED', 0);
  Module['_emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED'] = _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED = createExportWrapper('emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED', 0);
  Module['_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT'] = _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT = createExportWrapper('emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT'] = _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT = createExportWrapper('emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE', 0);
  Module['_emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET = createExportWrapper('emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION', 0);
  Module['_emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY = createExportWrapper('emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE', 0);
  Module['_emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES = createExportWrapper('emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES', 0);
  ___cxa_free_exception = createExportWrapper('__cxa_free_exception', 1);
  _strerror = createExportWrapper('strerror', 1);
  _emscripten_stack_get_end = wasmExports['emscripten_stack_get_end'];
  _emscripten_stack_get_base = wasmExports['emscripten_stack_get_base'];
  _setThrew = createExportWrapper('setThrew', 2);
  __emscripten_tempret_set = createExportWrapper('_emscripten_tempret_set', 1);
  _emscripten_stack_init = wasmExports['emscripten_stack_init'];
  _emscripten_stack_get_free = wasmExports['emscripten_stack_get_free'];
  __emscripten_stack_restore = wasmExports['_emscripten_stack_restore'];
  __emscripten_stack_alloc = wasmExports['_emscripten_stack_alloc'];
  _emscripten_stack_get_current = wasmExports['emscripten_stack_get_current'];
  ___cxa_increment_exception_refcount = createExportWrapper('__cxa_increment_exception_refcount', 1);
  ___cxa_decrement_exception_refcount = createExportWrapper('__cxa_decrement_exception_refcount', 1);
  ___get_exception_message = createExportWrapper('__get_exception_message', 3);
  ___cxa_can_catch = createExportWrapper('__cxa_can_catch', 3);
  ___cxa_get_exception_ptr = createExportWrapper('__cxa_get_exception_ptr', 1);
}
var wasmImports = {
  /** @export */
  __assert_fail: ___assert_fail,
  /** @export */
  __cxa_begin_catch: ___cxa_begin_catch,
  /** @export */
  __cxa_find_matching_catch_2: ___cxa_find_matching_catch_2,
  /** @export */
  __cxa_find_matching_catch_3: ___cxa_find_matching_catch_3,
  /** @export */
  __cxa_throw: ___cxa_throw,
  /** @export */
  __resumeException: ___resumeException,
  /** @export */
  __syscall_fcntl64: ___syscall_fcntl64,
  /** @export */
  __syscall_ioctl: ___syscall_ioctl,
  /** @export */
  __syscall_openat: ___syscall_openat,
  /** @export */
  _abort_js: __abort_js,
  /** @export */
  emscripten_resize_heap: _emscripten_resize_heap,
  /** @export */
  fd_close: _fd_close,
  /** @export */
  fd_read: _fd_read,
  /** @export */
  fd_seek: _fd_seek,
  /** @export */
  fd_write: _fd_write,
  /** @export */
  invoke_diii,
  /** @export */
  invoke_diiidiiiii,
  /** @export */
  invoke_ii,
  /** @export */
  invoke_iidddddd,
  /** @export */
  invoke_iidddiidd,
  /** @export */
  invoke_iiddiiddiidid,
  /** @export */
  invoke_iiddiidiidiiiii,
  /** @export */
  invoke_iii,
  /** @export */
  invoke_iiii,
  /** @export */
  invoke_iiiii,
  /** @export */
  invoke_iiiiidididdidddddidddii,
  /** @export */
  invoke_iiiiii,
  /** @export */
  invoke_v,
  /** @export */
  invoke_vi,
  /** @export */
  invoke_viddidiidd,
  /** @export */
  invoke_vidii,
  /** @export */
  invoke_vii,
  /** @export */
  invoke_viididi,
  /** @export */
  invoke_viii,
  /** @export */
  invoke_viiiddddd,
  /** @export */
  invoke_viiii,
  /** @export */
  invoke_viiiiddddddddddddii,
  /** @export */
  invoke_viiiii,
  /** @export */
  invoke_viiiiiiiiiiiiiiiiii
};
var wasmExports;
createWasm();

function invoke_vii(index,a1,a2) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_vi(index,a1) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiiiddddddddddddii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_ii(index,a1) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_vidii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_diii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiiiii(index,a1,a2,a3,a4,a5) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiii(index,a1,a2,a3) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiiddddd(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_diiidiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiiiidididdidddddidddii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19,a20,a21,a22);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iidddiidd(index,a1,a2,a3,a4,a5,a6,a7,a8) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiddiiddiidid(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iiddiidiidiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viididi(index,a1,a2,a3,a4,a5,a6) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viddidiidd(index,a1,a2,a3,a4,a5,a6,a7,a8,a9) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_iidddddd(index,a1,a2,a3,a4,a5,a6,a7) {
  var sp = stackSave();
  try {
    return getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_viiiiiiiiiiiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)(a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}

function invoke_v(index) {
  var sp = stackSave();
  try {
    getWasmTableEntry(index)();
  } catch(e) {
    stackRestore(sp);
    if (!(e instanceof EmscriptenEH)) throw e;
    _setThrew(1, 0);
  }
}


// include: postamble.js
// === Auto-generated postamble setup entry stuff ===

var calledRun;

function stackCheckInit() {
  // This is normally called automatically during __wasm_call_ctors but need to
  // get these values before even running any of the ctors so we call it redundantly
  // here.
  _emscripten_stack_init();
  // TODO(sbc): Move writeStackCookie to native to to avoid this.
  writeStackCookie();
}

function run() {

  if (runDependencies > 0) {
    dependenciesFulfilled = run;
    return;
  }

  stackCheckInit();

  preRun();

  // a preRun added a dependency, run will be called later
  if (runDependencies > 0) {
    dependenciesFulfilled = run;
    return;
  }

  function doRun() {
    // run may have just been called through dependencies being fulfilled just in this very frame,
    // or while the async setStatus time below was happening
    assert(!calledRun);
    calledRun = true;
    Module['calledRun'] = true;

    if (ABORT) return;

    initRuntime();

    Module['onRuntimeInitialized']?.();
    consumedModuleProp('onRuntimeInitialized');

    assert(!Module['_main'], 'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]');

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(() => {
      setTimeout(() => Module['setStatus'](''), 1);
      doRun();
    }, 1);
  } else
  {
    doRun();
  }
  checkStackCookie();
}

function checkUnflushedContent() {
  // Compiler settings do not allow exiting the runtime, so flushing
  // the streams is not possible. but in ASSERTIONS mode we check
  // if there was something to flush, and if so tell the user they
  // should request that the runtime be exitable.
  // Normally we would not even include flush() at all, but in ASSERTIONS
  // builds we do so just for this check, and here we see if there is any
  // content to flush, that is, we check if there would have been
  // something a non-ASSERTIONS build would have not seen.
  // How we flush the streams depends on whether we are in SYSCALLS_REQUIRE_FILESYSTEM=0
  // mode (which has its own special function for this; otherwise, all
  // the code is inside libc)
  var oldOut = out;
  var oldErr = err;
  var has = false;
  out = err = (x) => {
    has = true;
  }
  try { // it doesn't matter if it fails
    _fflush(0);
    // also flush in the JS FS layer
    ['stdout', 'stderr'].forEach((name) => {
      var info = FS.analyzePath('/dev/' + name);
      if (!info) return;
      var stream = info.object;
      var rdev = stream.rdev;
      var tty = TTY.ttys[rdev];
      if (tty?.output?.length) {
        has = true;
      }
    });
  } catch(e) {}
  out = oldOut;
  err = oldErr;
  if (has) {
    warnOnce('stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc.');
  }
}

function preInit() {
  if (Module['preInit']) {
    if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
    while (Module['preInit'].length > 0) {
      Module['preInit'].shift()();
    }
  }
  consumedModuleProp('preInit');
}

preInit();
run();

// end include: postamble.js

// include: /Users/rsheperd/code/sig/behave-app/behave-lib/include/js/glue.js

// Bindings utilities

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function WrapperObject() {
}
WrapperObject.prototype = Object.create(WrapperObject.prototype);
WrapperObject.prototype.constructor = WrapperObject;
WrapperObject.prototype.__class__ = WrapperObject;
WrapperObject.__cache__ = {};
Module['WrapperObject'] = WrapperObject;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant)
    @param {*=} __class__ */
function getCache(__class__) {
  return (__class__ || WrapperObject).__cache__;
}
Module['getCache'] = getCache;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant)
    @param {*=} __class__ */
function wrapPointer(ptr, __class__) {
  var cache = getCache(__class__);
  var ret = cache[ptr];
  if (ret) return ret;
  ret = Object.create((__class__ || WrapperObject).prototype);
  ret.ptr = ptr;
  return cache[ptr] = ret;
}
Module['wrapPointer'] = wrapPointer;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function castObject(obj, __class__) {
  return wrapPointer(obj.ptr, __class__);
}
Module['castObject'] = castObject;

Module['NULL'] = wrapPointer(0);

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function destroy(obj) {
  if (!obj['__destroy__']) throw 'Error: Cannot destroy object. (Did you create it yourself?)';
  obj['__destroy__']();
  // Remove from cache, so the object can be GC'd and refs added onto it released
  delete getCache(obj.__class__)[obj.ptr];
}
Module['destroy'] = destroy;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function compare(obj1, obj2) {
  return obj1.ptr === obj2.ptr;
}
Module['compare'] = compare;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function getPointer(obj) {
  return obj.ptr;
}
Module['getPointer'] = getPointer;

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function getClass(obj) {
  return obj.__class__;
}
Module['getClass'] = getClass;

// Converts big (string or array) values into a C-style storage, in temporary space

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
var ensureCache = {
  buffer: 0,  // the main buffer of temporary storage
  size: 0,   // the size of buffer
  pos: 0,    // the next free offset in buffer
  temps: [], // extra allocations
  needed: 0, // the total size we need next time

  prepare() {
    if (ensureCache.needed) {
      // clear the temps
      for (var i = 0; i < ensureCache.temps.length; i++) {
        Module['_webidl_free'](ensureCache.temps[i]);
      }
      ensureCache.temps.length = 0;
      // prepare to allocate a bigger buffer
      Module['_webidl_free'](ensureCache.buffer);
      ensureCache.buffer = 0;
      ensureCache.size += ensureCache.needed;
      // clean up
      ensureCache.needed = 0;
    }
    if (!ensureCache.buffer) { // happens first time, or when we need to grow
      ensureCache.size += 128; // heuristic, avoid many small grow events
      ensureCache.buffer = Module['_webidl_malloc'](ensureCache.size);
      assert(ensureCache.buffer);
    }
    ensureCache.pos = 0;
  },
  alloc(array, view) {
    assert(ensureCache.buffer);
    var bytes = view.BYTES_PER_ELEMENT;
    var len = array.length * bytes;
    len = alignMemory(len, 8); // keep things aligned to 8 byte boundaries
    var ret;
    if (ensureCache.pos + len >= ensureCache.size) {
      // we failed to allocate in the buffer, ensureCache time around :(
      assert(len > 0); // null terminator, at least
      ensureCache.needed += len;
      ret = Module['_webidl_malloc'](len);
      ensureCache.temps.push(ret);
    } else {
      // we can allocate in the buffer
      ret = ensureCache.buffer + ensureCache.pos;
      ensureCache.pos += len;
    }
    return ret;
  },
  copy(array, view, offset) {
    offset /= view.BYTES_PER_ELEMENT;
    for (var i = 0; i < array.length; i++) {
      view[offset + i] = array[i];
    }
  },
};

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureString(value) {
  if (typeof value === 'string') {
    var intArray = intArrayFromString(value);
    var offset = ensureCache.alloc(intArray, HEAP8);
    ensureCache.copy(intArray, HEAP8, offset);
    return offset;
  }
  return value;
}

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureInt8(value) {
  if (typeof value === 'object') {
    var offset = ensureCache.alloc(value, HEAP8);
    ensureCache.copy(value, HEAP8, offset);
    return offset;
  }
  return value;
}

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureInt16(value) {
  if (typeof value === 'object') {
    var offset = ensureCache.alloc(value, HEAP16);
    ensureCache.copy(value, HEAP16, offset);
    return offset;
  }
  return value;
}

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureInt32(value) {
  if (typeof value === 'object') {
    var offset = ensureCache.alloc(value, HEAP32);
    ensureCache.copy(value, HEAP32, offset);
    return offset;
  }
  return value;
}

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureFloat32(value) {
  if (typeof value === 'object') {
    var offset = ensureCache.alloc(value, HEAPF32);
    ensureCache.copy(value, HEAPF32, offset);
    return offset;
  }
  return value;
}

/** @suppress {duplicate} (TODO: avoid emitting this multiple times, it is redundant) */
function ensureFloat64(value) {
  if (typeof value === 'object') {
    var offset = ensureCache.alloc(value, HEAPF64);
    ensureCache.copy(value, HEAPF64, offset);
    return offset;
  }
  return value;
}

// Interface: VoidPtr

/** @suppress {undefinedVars, duplicate} @this{Object} */
function VoidPtr() { throw "cannot construct a VoidPtr, no constructor in IDL" }
VoidPtr.prototype = Object.create(WrapperObject.prototype);
VoidPtr.prototype.constructor = VoidPtr;
VoidPtr.prototype.__class__ = VoidPtr;
VoidPtr.__cache__ = {};
Module['VoidPtr'] = VoidPtr;

/** @suppress {undefinedVars, duplicate} @this{Object} */
VoidPtr.prototype['__destroy__'] = VoidPtr.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_VoidPtr___destroy___0(self);
};

// Interface: DoublePtr

/** @suppress {undefinedVars, duplicate} @this{Object} */
function DoublePtr() { throw "cannot construct a DoublePtr, no constructor in IDL" }
DoublePtr.prototype = Object.create(WrapperObject.prototype);
DoublePtr.prototype.constructor = DoublePtr;
DoublePtr.prototype.__class__ = DoublePtr;
DoublePtr.__cache__ = {};
Module['DoublePtr'] = DoublePtr;

/** @suppress {undefinedVars, duplicate} @this{Object} */
DoublePtr.prototype['__destroy__'] = DoublePtr.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_DoublePtr___destroy___0(self);
};

// Interface: BoolVector

/** @suppress {undefinedVars, duplicate} @this{Object} */
function BoolVector(size) {
  if (size && typeof size === 'object') size = size.ptr;
  if (size === undefined) { this.ptr = _emscripten_bind_BoolVector_BoolVector_0(); getCache(BoolVector)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_BoolVector_BoolVector_1(size);
  getCache(BoolVector)[this.ptr] = this;
};

BoolVector.prototype = Object.create(WrapperObject.prototype);
BoolVector.prototype.constructor = BoolVector;
BoolVector.prototype.__class__ = BoolVector;
BoolVector.__cache__ = {};
Module['BoolVector'] = BoolVector;
/** @suppress {undefinedVars, duplicate} @this{Object} */
BoolVector.prototype['resize'] = BoolVector.prototype.resize = function(size) {
  var self = this.ptr;
  if (size && typeof size === 'object') size = size.ptr;
  _emscripten_bind_BoolVector_resize_1(self, size);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
BoolVector.prototype['get'] = BoolVector.prototype.get = function(i) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  return !!(_emscripten_bind_BoolVector_get_1(self, i));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
BoolVector.prototype['set'] = BoolVector.prototype.set = function(i, val) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  if (val && typeof val === 'object') val = val.ptr;
  _emscripten_bind_BoolVector_set_2(self, i, val);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
BoolVector.prototype['size'] = BoolVector.prototype.size = function() {
  var self = this.ptr;
  return _emscripten_bind_BoolVector_size_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
BoolVector.prototype['__destroy__'] = BoolVector.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_BoolVector___destroy___0(self);
};

// Interface: CharVector

/** @suppress {undefinedVars, duplicate} @this{Object} */
function CharVector(size) {
  if (size && typeof size === 'object') size = size.ptr;
  if (size === undefined) { this.ptr = _emscripten_bind_CharVector_CharVector_0(); getCache(CharVector)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_CharVector_CharVector_1(size);
  getCache(CharVector)[this.ptr] = this;
};

CharVector.prototype = Object.create(WrapperObject.prototype);
CharVector.prototype.constructor = CharVector;
CharVector.prototype.__class__ = CharVector;
CharVector.__cache__ = {};
Module['CharVector'] = CharVector;
/** @suppress {undefinedVars, duplicate} @this{Object} */
CharVector.prototype['resize'] = CharVector.prototype.resize = function(size) {
  var self = this.ptr;
  if (size && typeof size === 'object') size = size.ptr;
  _emscripten_bind_CharVector_resize_1(self, size);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
CharVector.prototype['get'] = CharVector.prototype.get = function(i) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  return _emscripten_bind_CharVector_get_1(self, i);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
CharVector.prototype['set'] = CharVector.prototype.set = function(i, val) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  if (val && typeof val === 'object') val = val.ptr;
  _emscripten_bind_CharVector_set_2(self, i, val);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
CharVector.prototype['size'] = CharVector.prototype.size = function() {
  var self = this.ptr;
  return _emscripten_bind_CharVector_size_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
CharVector.prototype['__destroy__'] = CharVector.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_CharVector___destroy___0(self);
};

// Interface: IntVector

/** @suppress {undefinedVars, duplicate} @this{Object} */
function IntVector(size) {
  if (size && typeof size === 'object') size = size.ptr;
  if (size === undefined) { this.ptr = _emscripten_bind_IntVector_IntVector_0(); getCache(IntVector)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_IntVector_IntVector_1(size);
  getCache(IntVector)[this.ptr] = this;
};

IntVector.prototype = Object.create(WrapperObject.prototype);
IntVector.prototype.constructor = IntVector;
IntVector.prototype.__class__ = IntVector;
IntVector.__cache__ = {};
Module['IntVector'] = IntVector;
/** @suppress {undefinedVars, duplicate} @this{Object} */
IntVector.prototype['resize'] = IntVector.prototype.resize = function(size) {
  var self = this.ptr;
  if (size && typeof size === 'object') size = size.ptr;
  _emscripten_bind_IntVector_resize_1(self, size);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
IntVector.prototype['get'] = IntVector.prototype.get = function(i) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  return _emscripten_bind_IntVector_get_1(self, i);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
IntVector.prototype['set'] = IntVector.prototype.set = function(i, val) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  if (val && typeof val === 'object') val = val.ptr;
  _emscripten_bind_IntVector_set_2(self, i, val);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
IntVector.prototype['size'] = IntVector.prototype.size = function() {
  var self = this.ptr;
  return _emscripten_bind_IntVector_size_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
IntVector.prototype['__destroy__'] = IntVector.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_IntVector___destroy___0(self);
};

// Interface: DoubleVector

/** @suppress {undefinedVars, duplicate} @this{Object} */
function DoubleVector(size) {
  if (size && typeof size === 'object') size = size.ptr;
  if (size === undefined) { this.ptr = _emscripten_bind_DoubleVector_DoubleVector_0(); getCache(DoubleVector)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_DoubleVector_DoubleVector_1(size);
  getCache(DoubleVector)[this.ptr] = this;
};

DoubleVector.prototype = Object.create(WrapperObject.prototype);
DoubleVector.prototype.constructor = DoubleVector;
DoubleVector.prototype.__class__ = DoubleVector;
DoubleVector.__cache__ = {};
Module['DoubleVector'] = DoubleVector;
/** @suppress {undefinedVars, duplicate} @this{Object} */
DoubleVector.prototype['resize'] = DoubleVector.prototype.resize = function(size) {
  var self = this.ptr;
  if (size && typeof size === 'object') size = size.ptr;
  _emscripten_bind_DoubleVector_resize_1(self, size);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
DoubleVector.prototype['get'] = DoubleVector.prototype.get = function(i) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  return _emscripten_bind_DoubleVector_get_1(self, i);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
DoubleVector.prototype['set'] = DoubleVector.prototype.set = function(i, val) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  if (val && typeof val === 'object') val = val.ptr;
  _emscripten_bind_DoubleVector_set_2(self, i, val);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
DoubleVector.prototype['size'] = DoubleVector.prototype.size = function() {
  var self = this.ptr;
  return _emscripten_bind_DoubleVector_size_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
DoubleVector.prototype['__destroy__'] = DoubleVector.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_DoubleVector___destroy___0(self);
};

// Interface: SpeciesMasterTableRecordVector

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SpeciesMasterTableRecordVector(size) {
  if (size && typeof size === 'object') size = size.ptr;
  if (size === undefined) { this.ptr = _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_0(); getCache(SpeciesMasterTableRecordVector)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_SpeciesMasterTableRecordVector_SpeciesMasterTableRecordVector_1(size);
  getCache(SpeciesMasterTableRecordVector)[this.ptr] = this;
};

SpeciesMasterTableRecordVector.prototype = Object.create(WrapperObject.prototype);
SpeciesMasterTableRecordVector.prototype.constructor = SpeciesMasterTableRecordVector;
SpeciesMasterTableRecordVector.prototype.__class__ = SpeciesMasterTableRecordVector;
SpeciesMasterTableRecordVector.__cache__ = {};
Module['SpeciesMasterTableRecordVector'] = SpeciesMasterTableRecordVector;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecordVector.prototype['resize'] = SpeciesMasterTableRecordVector.prototype.resize = function(size) {
  var self = this.ptr;
  if (size && typeof size === 'object') size = size.ptr;
  _emscripten_bind_SpeciesMasterTableRecordVector_resize_1(self, size);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecordVector.prototype['get'] = SpeciesMasterTableRecordVector.prototype.get = function(i) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  return wrapPointer(_emscripten_bind_SpeciesMasterTableRecordVector_get_1(self, i), SpeciesMasterTableRecord);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecordVector.prototype['set'] = SpeciesMasterTableRecordVector.prototype.set = function(i, val) {
  var self = this.ptr;
  if (i && typeof i === 'object') i = i.ptr;
  if (val && typeof val === 'object') val = val.ptr;
  _emscripten_bind_SpeciesMasterTableRecordVector_set_2(self, i, val);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecordVector.prototype['size'] = SpeciesMasterTableRecordVector.prototype.size = function() {
  var self = this.ptr;
  return _emscripten_bind_SpeciesMasterTableRecordVector_size_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecordVector.prototype['__destroy__'] = SpeciesMasterTableRecordVector.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SpeciesMasterTableRecordVector___destroy___0(self);
};

// Interface: AreaUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function AreaUnits() { throw "cannot construct a AreaUnits, no constructor in IDL" }
AreaUnits.prototype = Object.create(WrapperObject.prototype);
AreaUnits.prototype.constructor = AreaUnits;
AreaUnits.prototype.__class__ = AreaUnits;
AreaUnits.__cache__ = {};
Module['AreaUnits'] = AreaUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
AreaUnits.prototype['toBaseUnits'] = AreaUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_AreaUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
AreaUnits.prototype['fromBaseUnits'] = AreaUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_AreaUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
AreaUnits.prototype['__destroy__'] = AreaUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_AreaUnits___destroy___0(self);
};

// Interface: BasalAreaUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function BasalAreaUnits() { throw "cannot construct a BasalAreaUnits, no constructor in IDL" }
BasalAreaUnits.prototype = Object.create(WrapperObject.prototype);
BasalAreaUnits.prototype.constructor = BasalAreaUnits;
BasalAreaUnits.prototype.__class__ = BasalAreaUnits;
BasalAreaUnits.__cache__ = {};
Module['BasalAreaUnits'] = BasalAreaUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
BasalAreaUnits.prototype['toBaseUnits'] = BasalAreaUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_BasalAreaUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
BasalAreaUnits.prototype['fromBaseUnits'] = BasalAreaUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_BasalAreaUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
BasalAreaUnits.prototype['__destroy__'] = BasalAreaUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_BasalAreaUnits___destroy___0(self);
};

// Interface: FractionUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function FractionUnits() { throw "cannot construct a FractionUnits, no constructor in IDL" }
FractionUnits.prototype = Object.create(WrapperObject.prototype);
FractionUnits.prototype.constructor = FractionUnits;
FractionUnits.prototype.__class__ = FractionUnits;
FractionUnits.__cache__ = {};
Module['FractionUnits'] = FractionUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
FractionUnits.prototype['toBaseUnits'] = FractionUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_FractionUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FractionUnits.prototype['fromBaseUnits'] = FractionUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_FractionUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
FractionUnits.prototype['__destroy__'] = FractionUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_FractionUnits___destroy___0(self);
};

// Interface: LengthUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function LengthUnits() { throw "cannot construct a LengthUnits, no constructor in IDL" }
LengthUnits.prototype = Object.create(WrapperObject.prototype);
LengthUnits.prototype.constructor = LengthUnits;
LengthUnits.prototype.__class__ = LengthUnits;
LengthUnits.__cache__ = {};
Module['LengthUnits'] = LengthUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
LengthUnits.prototype['toBaseUnits'] = LengthUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_LengthUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
LengthUnits.prototype['fromBaseUnits'] = LengthUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_LengthUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
LengthUnits.prototype['__destroy__'] = LengthUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_LengthUnits___destroy___0(self);
};

// Interface: LoadingUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function LoadingUnits() { throw "cannot construct a LoadingUnits, no constructor in IDL" }
LoadingUnits.prototype = Object.create(WrapperObject.prototype);
LoadingUnits.prototype.constructor = LoadingUnits;
LoadingUnits.prototype.__class__ = LoadingUnits;
LoadingUnits.__cache__ = {};
Module['LoadingUnits'] = LoadingUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
LoadingUnits.prototype['toBaseUnits'] = LoadingUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_LoadingUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
LoadingUnits.prototype['fromBaseUnits'] = LoadingUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_LoadingUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
LoadingUnits.prototype['__destroy__'] = LoadingUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_LoadingUnits___destroy___0(self);
};

// Interface: SurfaceAreaToVolumeUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SurfaceAreaToVolumeUnits() { throw "cannot construct a SurfaceAreaToVolumeUnits, no constructor in IDL" }
SurfaceAreaToVolumeUnits.prototype = Object.create(WrapperObject.prototype);
SurfaceAreaToVolumeUnits.prototype.constructor = SurfaceAreaToVolumeUnits;
SurfaceAreaToVolumeUnits.prototype.__class__ = SurfaceAreaToVolumeUnits;
SurfaceAreaToVolumeUnits.__cache__ = {};
Module['SurfaceAreaToVolumeUnits'] = SurfaceAreaToVolumeUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SurfaceAreaToVolumeUnits.prototype['toBaseUnits'] = SurfaceAreaToVolumeUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SurfaceAreaToVolumeUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SurfaceAreaToVolumeUnits.prototype['fromBaseUnits'] = SurfaceAreaToVolumeUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SurfaceAreaToVolumeUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SurfaceAreaToVolumeUnits.prototype['__destroy__'] = SurfaceAreaToVolumeUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SurfaceAreaToVolumeUnits___destroy___0(self);
};

// Interface: SpeedUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SpeedUnits() { throw "cannot construct a SpeedUnits, no constructor in IDL" }
SpeedUnits.prototype = Object.create(WrapperObject.prototype);
SpeedUnits.prototype.constructor = SpeedUnits;
SpeedUnits.prototype.__class__ = SpeedUnits;
SpeedUnits.__cache__ = {};
Module['SpeedUnits'] = SpeedUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeedUnits.prototype['toBaseUnits'] = SpeedUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SpeedUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeedUnits.prototype['fromBaseUnits'] = SpeedUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SpeedUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeedUnits.prototype['__destroy__'] = SpeedUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SpeedUnits___destroy___0(self);
};

// Interface: PressureUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function PressureUnits() { throw "cannot construct a PressureUnits, no constructor in IDL" }
PressureUnits.prototype = Object.create(WrapperObject.prototype);
PressureUnits.prototype.constructor = PressureUnits;
PressureUnits.prototype.__class__ = PressureUnits;
PressureUnits.__cache__ = {};
Module['PressureUnits'] = PressureUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
PressureUnits.prototype['toBaseUnits'] = PressureUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_PressureUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PressureUnits.prototype['fromBaseUnits'] = PressureUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_PressureUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
PressureUnits.prototype['__destroy__'] = PressureUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_PressureUnits___destroy___0(self);
};

// Interface: SlopeUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SlopeUnits() { throw "cannot construct a SlopeUnits, no constructor in IDL" }
SlopeUnits.prototype = Object.create(WrapperObject.prototype);
SlopeUnits.prototype.constructor = SlopeUnits;
SlopeUnits.prototype.__class__ = SlopeUnits;
SlopeUnits.__cache__ = {};
Module['SlopeUnits'] = SlopeUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SlopeUnits.prototype['toBaseUnits'] = SlopeUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SlopeUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SlopeUnits.prototype['fromBaseUnits'] = SlopeUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_SlopeUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SlopeUnits.prototype['__destroy__'] = SlopeUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SlopeUnits___destroy___0(self);
};

// Interface: DensityUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function DensityUnits() { throw "cannot construct a DensityUnits, no constructor in IDL" }
DensityUnits.prototype = Object.create(WrapperObject.prototype);
DensityUnits.prototype.constructor = DensityUnits;
DensityUnits.prototype.__class__ = DensityUnits;
DensityUnits.__cache__ = {};
Module['DensityUnits'] = DensityUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
DensityUnits.prototype['toBaseUnits'] = DensityUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_DensityUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
DensityUnits.prototype['fromBaseUnits'] = DensityUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_DensityUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
DensityUnits.prototype['__destroy__'] = DensityUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_DensityUnits___destroy___0(self);
};

// Interface: HeatOfCombustionUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function HeatOfCombustionUnits() { throw "cannot construct a HeatOfCombustionUnits, no constructor in IDL" }
HeatOfCombustionUnits.prototype = Object.create(WrapperObject.prototype);
HeatOfCombustionUnits.prototype.constructor = HeatOfCombustionUnits;
HeatOfCombustionUnits.prototype.__class__ = HeatOfCombustionUnits;
HeatOfCombustionUnits.__cache__ = {};
Module['HeatOfCombustionUnits'] = HeatOfCombustionUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatOfCombustionUnits.prototype['toBaseUnits'] = HeatOfCombustionUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatOfCombustionUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatOfCombustionUnits.prototype['fromBaseUnits'] = HeatOfCombustionUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatOfCombustionUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatOfCombustionUnits.prototype['__destroy__'] = HeatOfCombustionUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_HeatOfCombustionUnits___destroy___0(self);
};

// Interface: HeatSinkUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function HeatSinkUnits() { throw "cannot construct a HeatSinkUnits, no constructor in IDL" }
HeatSinkUnits.prototype = Object.create(WrapperObject.prototype);
HeatSinkUnits.prototype.constructor = HeatSinkUnits;
HeatSinkUnits.prototype.__class__ = HeatSinkUnits;
HeatSinkUnits.__cache__ = {};
Module['HeatSinkUnits'] = HeatSinkUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSinkUnits.prototype['toBaseUnits'] = HeatSinkUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatSinkUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSinkUnits.prototype['fromBaseUnits'] = HeatSinkUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatSinkUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSinkUnits.prototype['__destroy__'] = HeatSinkUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_HeatSinkUnits___destroy___0(self);
};

// Interface: HeatPerUnitAreaUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function HeatPerUnitAreaUnits() { throw "cannot construct a HeatPerUnitAreaUnits, no constructor in IDL" }
HeatPerUnitAreaUnits.prototype = Object.create(WrapperObject.prototype);
HeatPerUnitAreaUnits.prototype.constructor = HeatPerUnitAreaUnits;
HeatPerUnitAreaUnits.prototype.__class__ = HeatPerUnitAreaUnits;
HeatPerUnitAreaUnits.__cache__ = {};
Module['HeatPerUnitAreaUnits'] = HeatPerUnitAreaUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatPerUnitAreaUnits.prototype['toBaseUnits'] = HeatPerUnitAreaUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatPerUnitAreaUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatPerUnitAreaUnits.prototype['fromBaseUnits'] = HeatPerUnitAreaUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatPerUnitAreaUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatPerUnitAreaUnits.prototype['__destroy__'] = HeatPerUnitAreaUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_HeatPerUnitAreaUnits___destroy___0(self);
};

// Interface: HeatSourceAndReactionIntensityUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function HeatSourceAndReactionIntensityUnits() { throw "cannot construct a HeatSourceAndReactionIntensityUnits, no constructor in IDL" }
HeatSourceAndReactionIntensityUnits.prototype = Object.create(WrapperObject.prototype);
HeatSourceAndReactionIntensityUnits.prototype.constructor = HeatSourceAndReactionIntensityUnits;
HeatSourceAndReactionIntensityUnits.prototype.__class__ = HeatSourceAndReactionIntensityUnits;
HeatSourceAndReactionIntensityUnits.__cache__ = {};
Module['HeatSourceAndReactionIntensityUnits'] = HeatSourceAndReactionIntensityUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSourceAndReactionIntensityUnits.prototype['toBaseUnits'] = HeatSourceAndReactionIntensityUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatSourceAndReactionIntensityUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSourceAndReactionIntensityUnits.prototype['fromBaseUnits'] = HeatSourceAndReactionIntensityUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_HeatSourceAndReactionIntensityUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
HeatSourceAndReactionIntensityUnits.prototype['__destroy__'] = HeatSourceAndReactionIntensityUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_HeatSourceAndReactionIntensityUnits___destroy___0(self);
};

// Interface: FirelineIntensityUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function FirelineIntensityUnits() { throw "cannot construct a FirelineIntensityUnits, no constructor in IDL" }
FirelineIntensityUnits.prototype = Object.create(WrapperObject.prototype);
FirelineIntensityUnits.prototype.constructor = FirelineIntensityUnits;
FirelineIntensityUnits.prototype.__class__ = FirelineIntensityUnits;
FirelineIntensityUnits.__cache__ = {};
Module['FirelineIntensityUnits'] = FirelineIntensityUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
FirelineIntensityUnits.prototype['toBaseUnits'] = FirelineIntensityUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_FirelineIntensityUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FirelineIntensityUnits.prototype['fromBaseUnits'] = FirelineIntensityUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_FirelineIntensityUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
FirelineIntensityUnits.prototype['__destroy__'] = FirelineIntensityUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_FirelineIntensityUnits___destroy___0(self);
};

// Interface: TemperatureUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function TemperatureUnits() { throw "cannot construct a TemperatureUnits, no constructor in IDL" }
TemperatureUnits.prototype = Object.create(WrapperObject.prototype);
TemperatureUnits.prototype.constructor = TemperatureUnits;
TemperatureUnits.prototype.__class__ = TemperatureUnits;
TemperatureUnits.__cache__ = {};
Module['TemperatureUnits'] = TemperatureUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
TemperatureUnits.prototype['toBaseUnits'] = TemperatureUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_TemperatureUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
TemperatureUnits.prototype['fromBaseUnits'] = TemperatureUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_TemperatureUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
TemperatureUnits.prototype['__destroy__'] = TemperatureUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_TemperatureUnits___destroy___0(self);
};

// Interface: TimeUnits

/** @suppress {undefinedVars, duplicate} @this{Object} */
function TimeUnits() { throw "cannot construct a TimeUnits, no constructor in IDL" }
TimeUnits.prototype = Object.create(WrapperObject.prototype);
TimeUnits.prototype.constructor = TimeUnits;
TimeUnits.prototype.__class__ = TimeUnits;
TimeUnits.__cache__ = {};
Module['TimeUnits'] = TimeUnits;
/** @suppress {undefinedVars, duplicate} @this{Object} */
TimeUnits.prototype['toBaseUnits'] = TimeUnits.prototype.toBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_TimeUnits_toBaseUnits_2(value, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
TimeUnits.prototype['fromBaseUnits'] = TimeUnits.prototype.fromBaseUnits = function(value, units) {
  if (value && typeof value === 'object') value = value.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_TimeUnits_fromBaseUnits_2(value, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
TimeUnits.prototype['__destroy__'] = TimeUnits.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_TimeUnits___destroy___0(self);
};

// Interface: FireSize

/** @suppress {undefinedVars, duplicate} @this{Object} */
function FireSize() { throw "cannot construct a FireSize, no constructor in IDL" }
FireSize.prototype = Object.create(WrapperObject.prototype);
FireSize.prototype.constructor = FireSize;
FireSize.prototype.__class__ = FireSize;
FireSize.__cache__ = {};
Module['FireSize'] = FireSize;
/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getBackingSpreadRate'] = FireSize.prototype.getBackingSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_FireSize_getBackingSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getEccentricity'] = FireSize.prototype.getEccentricity = function() {
  var self = this.ptr;
  return _emscripten_bind_FireSize_getEccentricity_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getEllipticalA'] = FireSize.prototype.getEllipticalA = function(lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getEllipticalA_3(self, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getEllipticalB'] = FireSize.prototype.getEllipticalB = function(lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getEllipticalB_3(self, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getEllipticalC'] = FireSize.prototype.getEllipticalC = function(lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getEllipticalC_3(self, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getFireArea'] = FireSize.prototype.getFireArea = function(isCrown, areaUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (isCrown && typeof isCrown === 'object') isCrown = isCrown.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getFireArea_4(self, isCrown, areaUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getFireLength'] = FireSize.prototype.getFireLength = function(lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getFireLength_3(self, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getFireLengthToWidthRatio'] = FireSize.prototype.getFireLengthToWidthRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_FireSize_getFireLengthToWidthRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getFirePerimeter'] = FireSize.prototype.getFirePerimeter = function(isCrown, lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (isCrown && typeof isCrown === 'object') isCrown = isCrown.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getFirePerimeter_4(self, isCrown, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getFlankingSpreadRate'] = FireSize.prototype.getFlankingSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_FireSize_getFlankingSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getHeadingToBackingRatio'] = FireSize.prototype.getHeadingToBackingRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_FireSize_getHeadingToBackingRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['getMaxFireWidth'] = FireSize.prototype.getMaxFireWidth = function(lengthUnits, elapsedTime, timeUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_FireSize_getMaxFireWidth_3(self, lengthUnits, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['calculateFireBasicDimensions'] = FireSize.prototype.calculateFireBasicDimensions = function(isCrown, effectiveWindSpeed, windSpeedRateUnits, forwardSpreadRate, spreadRateUnits) {
  var self = this.ptr;
  if (isCrown && typeof isCrown === 'object') isCrown = isCrown.ptr;
  if (effectiveWindSpeed && typeof effectiveWindSpeed === 'object') effectiveWindSpeed = effectiveWindSpeed.ptr;
  if (windSpeedRateUnits && typeof windSpeedRateUnits === 'object') windSpeedRateUnits = windSpeedRateUnits.ptr;
  if (forwardSpreadRate && typeof forwardSpreadRate === 'object') forwardSpreadRate = forwardSpreadRate.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  _emscripten_bind_FireSize_calculateFireBasicDimensions_5(self, isCrown, effectiveWindSpeed, windSpeedRateUnits, forwardSpreadRate, spreadRateUnits);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
FireSize.prototype['__destroy__'] = FireSize.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_FireSize___destroy___0(self);
};

// Interface: SIGContainAdapter

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGContainAdapter() {
  this.ptr = _emscripten_bind_SIGContainAdapter_SIGContainAdapter_0();
  getCache(SIGContainAdapter)[this.ptr] = this;
};

SIGContainAdapter.prototype = Object.create(WrapperObject.prototype);
SIGContainAdapter.prototype.constructor = SIGContainAdapter;
SIGContainAdapter.prototype.__class__ = SIGContainAdapter;
SIGContainAdapter.__cache__ = {};
Module['SIGContainAdapter'] = SIGContainAdapter;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getContainmentStatus'] = SIGContainAdapter.prototype.getContainmentStatus = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getContainmentStatus_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFirePerimeterX'] = SIGContainAdapter.prototype.getFirePerimeterX = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_SIGContainAdapter_getFirePerimeterX_0(self), DoubleVector);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFirePerimeterY'] = SIGContainAdapter.prototype.getFirePerimeterY = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_SIGContainAdapter_getFirePerimeterY_0(self), DoubleVector);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getAttackDistance'] = SIGContainAdapter.prototype.getAttackDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getAttackDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalContainmentArea'] = SIGContainAdapter.prototype.getFinalContainmentArea = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalContainmentArea_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalCost'] = SIGContainAdapter.prototype.getFinalCost = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalCost_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalFireLineLength'] = SIGContainAdapter.prototype.getFinalFireLineLength = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalFireLineLength_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalFireSize'] = SIGContainAdapter.prototype.getFinalFireSize = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalFireSize_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalTimeSinceReport'] = SIGContainAdapter.prototype.getFinalTimeSinceReport = function(timeUnits) {
  var self = this.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalTimeSinceReport_1(self, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFinalProductionRate'] = SIGContainAdapter.prototype.getFinalProductionRate = function(speedUnits) {
  var self = this.ptr;
  if (speedUnits && typeof speedUnits === 'object') speedUnits = speedUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFinalProductionRate_1(self, speedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFireBackAtAttack'] = SIGContainAdapter.prototype.getFireBackAtAttack = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFireBackAtAttack_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFireBackAtReport'] = SIGContainAdapter.prototype.getFireBackAtReport = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFireBackAtReport_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFireHeadAtAttack'] = SIGContainAdapter.prototype.getFireHeadAtAttack = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFireHeadAtAttack_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFireHeadAtReport'] = SIGContainAdapter.prototype.getFireHeadAtReport = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFireHeadAtReport_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFireSizeAtInitialAttack'] = SIGContainAdapter.prototype.getFireSizeAtInitialAttack = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getFireSizeAtInitialAttack_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getLengthToWidthRatio'] = SIGContainAdapter.prototype.getLengthToWidthRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getLengthToWidthRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getPerimeterAtContainment'] = SIGContainAdapter.prototype.getPerimeterAtContainment = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getPerimeterAtContainment_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getPerimeterAtInitialAttack'] = SIGContainAdapter.prototype.getPerimeterAtInitialAttack = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getPerimeterAtInitialAttack_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getReportSize'] = SIGContainAdapter.prototype.getReportSize = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getReportSize_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getReportRate'] = SIGContainAdapter.prototype.getReportRate = function(speedUnits) {
  var self = this.ptr;
  if (speedUnits && typeof speedUnits === 'object') speedUnits = speedUnits.ptr;
  return _emscripten_bind_SIGContainAdapter_getReportRate_1(self, speedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getTactic'] = SIGContainAdapter.prototype.getTactic = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getTactic_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['getFirePerimeterPointCount'] = SIGContainAdapter.prototype.getFirePerimeterPointCount = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGContainAdapter_getFirePerimeterPointCount_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['removeAllResourcesWithThisDesc'] = SIGContainAdapter.prototype.removeAllResourcesWithThisDesc = function(desc) {
  var self = this.ptr;
  ensureCache.prepare();
  if (desc && typeof desc === 'object') desc = desc.ptr;
  else desc = ensureString(desc);
  return _emscripten_bind_SIGContainAdapter_removeAllResourcesWithThisDesc_1(self, desc);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['removeResourceAt'] = SIGContainAdapter.prototype.removeResourceAt = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGContainAdapter_removeResourceAt_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['removeResourceWithThisDesc'] = SIGContainAdapter.prototype.removeResourceWithThisDesc = function(desc) {
  var self = this.ptr;
  ensureCache.prepare();
  if (desc && typeof desc === 'object') desc = desc.ptr;
  else desc = ensureString(desc);
  return _emscripten_bind_SIGContainAdapter_removeResourceWithThisDesc_1(self, desc);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['addResource'] = SIGContainAdapter.prototype.addResource = function(arrival, arrivalTimeUnit, duration, durationTimeUnit, productionRate, productionRateUnits, description, baseCost, hourCost) {
  var self = this.ptr;
  ensureCache.prepare();
  if (arrival && typeof arrival === 'object') arrival = arrival.ptr;
  if (arrivalTimeUnit && typeof arrivalTimeUnit === 'object') arrivalTimeUnit = arrivalTimeUnit.ptr;
  if (duration && typeof duration === 'object') duration = duration.ptr;
  if (durationTimeUnit && typeof durationTimeUnit === 'object') durationTimeUnit = durationTimeUnit.ptr;
  if (productionRate && typeof productionRate === 'object') productionRate = productionRate.ptr;
  if (productionRateUnits && typeof productionRateUnits === 'object') productionRateUnits = productionRateUnits.ptr;
  if (description && typeof description === 'object') description = description.ptr;
  else description = ensureString(description);
  if (baseCost && typeof baseCost === 'object') baseCost = baseCost.ptr;
  if (hourCost && typeof hourCost === 'object') hourCost = hourCost.ptr;
  _emscripten_bind_SIGContainAdapter_addResource_9(self, arrival, arrivalTimeUnit, duration, durationTimeUnit, productionRate, productionRateUnits, description, baseCost, hourCost);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['doContainRun'] = SIGContainAdapter.prototype.doContainRun = function() {
  var self = this.ptr;
  _emscripten_bind_SIGContainAdapter_doContainRun_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['removeAllResources'] = SIGContainAdapter.prototype.removeAllResources = function() {
  var self = this.ptr;
  _emscripten_bind_SIGContainAdapter_removeAllResources_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setAttackDistance'] = SIGContainAdapter.prototype.setAttackDistance = function(attackDistance, lengthUnits) {
  var self = this.ptr;
  if (attackDistance && typeof attackDistance === 'object') attackDistance = attackDistance.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGContainAdapter_setAttackDistance_2(self, attackDistance, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setFireStartTime'] = SIGContainAdapter.prototype.setFireStartTime = function(fireStartTime) {
  var self = this.ptr;
  if (fireStartTime && typeof fireStartTime === 'object') fireStartTime = fireStartTime.ptr;
  _emscripten_bind_SIGContainAdapter_setFireStartTime_1(self, fireStartTime);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setLwRatio'] = SIGContainAdapter.prototype.setLwRatio = function(lwRatio) {
  var self = this.ptr;
  if (lwRatio && typeof lwRatio === 'object') lwRatio = lwRatio.ptr;
  _emscripten_bind_SIGContainAdapter_setLwRatio_1(self, lwRatio);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setMaxFireSize'] = SIGContainAdapter.prototype.setMaxFireSize = function(maxFireSize) {
  var self = this.ptr;
  if (maxFireSize && typeof maxFireSize === 'object') maxFireSize = maxFireSize.ptr;
  _emscripten_bind_SIGContainAdapter_setMaxFireSize_1(self, maxFireSize);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setMaxFireTime'] = SIGContainAdapter.prototype.setMaxFireTime = function(maxFireTime) {
  var self = this.ptr;
  if (maxFireTime && typeof maxFireTime === 'object') maxFireTime = maxFireTime.ptr;
  _emscripten_bind_SIGContainAdapter_setMaxFireTime_1(self, maxFireTime);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setMaxSteps'] = SIGContainAdapter.prototype.setMaxSteps = function(maxSteps) {
  var self = this.ptr;
  if (maxSteps && typeof maxSteps === 'object') maxSteps = maxSteps.ptr;
  _emscripten_bind_SIGContainAdapter_setMaxSteps_1(self, maxSteps);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setMinSteps'] = SIGContainAdapter.prototype.setMinSteps = function(minSteps) {
  var self = this.ptr;
  if (minSteps && typeof minSteps === 'object') minSteps = minSteps.ptr;
  _emscripten_bind_SIGContainAdapter_setMinSteps_1(self, minSteps);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setReportRate'] = SIGContainAdapter.prototype.setReportRate = function(reportRate, speedUnits) {
  var self = this.ptr;
  if (reportRate && typeof reportRate === 'object') reportRate = reportRate.ptr;
  if (speedUnits && typeof speedUnits === 'object') speedUnits = speedUnits.ptr;
  _emscripten_bind_SIGContainAdapter_setReportRate_2(self, reportRate, speedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setReportSize'] = SIGContainAdapter.prototype.setReportSize = function(reportSize, areaUnits) {
  var self = this.ptr;
  if (reportSize && typeof reportSize === 'object') reportSize = reportSize.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  _emscripten_bind_SIGContainAdapter_setReportSize_2(self, reportSize, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setRetry'] = SIGContainAdapter.prototype.setRetry = function(retry) {
  var self = this.ptr;
  if (retry && typeof retry === 'object') retry = retry.ptr;
  _emscripten_bind_SIGContainAdapter_setRetry_1(self, retry);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['setTactic'] = SIGContainAdapter.prototype.setTactic = function(tactic) {
  var self = this.ptr;
  if (tactic && typeof tactic === 'object') tactic = tactic.ptr;
  _emscripten_bind_SIGContainAdapter_setTactic_1(self, tactic);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGContainAdapter.prototype['__destroy__'] = SIGContainAdapter.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGContainAdapter___destroy___0(self);
};

// Interface: SIGIgnite

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGIgnite() {
  this.ptr = _emscripten_bind_SIGIgnite_SIGIgnite_0();
  getCache(SIGIgnite)[this.ptr] = this;
};

SIGIgnite.prototype = Object.create(WrapperObject.prototype);
SIGIgnite.prototype.constructor = SIGIgnite;
SIGIgnite.prototype.__class__ = SIGIgnite;
SIGIgnite.__cache__ = {};
Module['SIGIgnite'] = SIGIgnite;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['initializeMembers'] = SIGIgnite.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_SIGIgnite_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getFuelBedType'] = SIGIgnite.prototype.getFuelBedType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGIgnite_getFuelBedType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getLightningChargeType'] = SIGIgnite.prototype.getLightningChargeType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGIgnite_getLightningChargeType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['calculateFirebrandIgnitionProbability'] = SIGIgnite.prototype.calculateFirebrandIgnitionProbability = function() {
  var self = this.ptr;
  _emscripten_bind_SIGIgnite_calculateFirebrandIgnitionProbability_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['calculateLightningIgnitionProbability'] = SIGIgnite.prototype.calculateLightningIgnitionProbability = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_calculateLightningIgnitionProbability_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setAirTemperature'] = SIGIgnite.prototype.setAirTemperature = function(airTemperature, temperatureUnites) {
  var self = this.ptr;
  if (airTemperature && typeof airTemperature === 'object') airTemperature = airTemperature.ptr;
  if (temperatureUnites && typeof temperatureUnites === 'object') temperatureUnites = temperatureUnites.ptr;
  _emscripten_bind_SIGIgnite_setAirTemperature_2(self, airTemperature, temperatureUnites);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setDuffDepth'] = SIGIgnite.prototype.setDuffDepth = function(duffDepth, lengthUnits) {
  var self = this.ptr;
  if (duffDepth && typeof duffDepth === 'object') duffDepth = duffDepth.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGIgnite_setDuffDepth_2(self, duffDepth, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setIgnitionFuelBedType'] = SIGIgnite.prototype.setIgnitionFuelBedType = function(fuelBedType_) {
  var self = this.ptr;
  if (fuelBedType_ && typeof fuelBedType_ === 'object') fuelBedType_ = fuelBedType_.ptr;
  _emscripten_bind_SIGIgnite_setIgnitionFuelBedType_1(self, fuelBedType_);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setLightningChargeType'] = SIGIgnite.prototype.setLightningChargeType = function(lightningChargeType) {
  var self = this.ptr;
  if (lightningChargeType && typeof lightningChargeType === 'object') lightningChargeType = lightningChargeType.ptr;
  _emscripten_bind_SIGIgnite_setLightningChargeType_1(self, lightningChargeType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setMoistureHundredHour'] = SIGIgnite.prototype.setMoistureHundredHour = function(moistureHundredHour, moistureUnits) {
  var self = this.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGIgnite_setMoistureHundredHour_2(self, moistureHundredHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setMoistureOneHour'] = SIGIgnite.prototype.setMoistureOneHour = function(moistureOneHour, moistureUnits) {
  var self = this.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGIgnite_setMoistureOneHour_2(self, moistureOneHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['setSunShade'] = SIGIgnite.prototype.setSunShade = function(sunShade, sunShadeUnits) {
  var self = this.ptr;
  if (sunShade && typeof sunShade === 'object') sunShade = sunShade.ptr;
  if (sunShadeUnits && typeof sunShadeUnits === 'object') sunShadeUnits = sunShadeUnits.ptr;
  _emscripten_bind_SIGIgnite_setSunShade_2(self, sunShade, sunShadeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['updateIgniteInputs'] = SIGIgnite.prototype.updateIgniteInputs = function(moistureOneHour, moistureHundredHour, moistureUnits, airTemperature, temperatureUnits, sunShade, sunShadeUnits, fuelBedType, duffDepth, duffDepthUnits, lightningChargeType) {
  var self = this.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (airTemperature && typeof airTemperature === 'object') airTemperature = airTemperature.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  if (sunShade && typeof sunShade === 'object') sunShade = sunShade.ptr;
  if (sunShadeUnits && typeof sunShadeUnits === 'object') sunShadeUnits = sunShadeUnits.ptr;
  if (fuelBedType && typeof fuelBedType === 'object') fuelBedType = fuelBedType.ptr;
  if (duffDepth && typeof duffDepth === 'object') duffDepth = duffDepth.ptr;
  if (duffDepthUnits && typeof duffDepthUnits === 'object') duffDepthUnits = duffDepthUnits.ptr;
  if (lightningChargeType && typeof lightningChargeType === 'object') lightningChargeType = lightningChargeType.ptr;
  _emscripten_bind_SIGIgnite_updateIgniteInputs_11(self, moistureOneHour, moistureHundredHour, moistureUnits, airTemperature, temperatureUnits, sunShade, sunShadeUnits, fuelBedType, duffDepth, duffDepthUnits, lightningChargeType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getAirTemperature'] = SIGIgnite.prototype.getAirTemperature = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getAirTemperature_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getDuffDepth'] = SIGIgnite.prototype.getDuffDepth = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getDuffDepth_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getFirebrandIgnitionProbability'] = SIGIgnite.prototype.getFirebrandIgnitionProbability = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getFirebrandIgnitionProbability_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getFuelTemperature'] = SIGIgnite.prototype.getFuelTemperature = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getFuelTemperature_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getMoistureHundredHour'] = SIGIgnite.prototype.getMoistureHundredHour = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getMoistureHundredHour_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getMoistureOneHour'] = SIGIgnite.prototype.getMoistureOneHour = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getMoistureOneHour_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['getSunShade'] = SIGIgnite.prototype.getSunShade = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGIgnite_getSunShade_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['isFuelDepthNeeded'] = SIGIgnite.prototype.isFuelDepthNeeded = function() {
  var self = this.ptr;
  return !!(_emscripten_bind_SIGIgnite_isFuelDepthNeeded_0(self));
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGIgnite.prototype['__destroy__'] = SIGIgnite.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGIgnite___destroy___0(self);
};

// Interface: SIGMoistureScenarios

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGMoistureScenarios() {
  this.ptr = _emscripten_bind_SIGMoistureScenarios_SIGMoistureScenarios_0();
  getCache(SIGMoistureScenarios)[this.ptr] = this;
};

SIGMoistureScenarios.prototype = Object.create(WrapperObject.prototype);
SIGMoistureScenarios.prototype.constructor = SIGMoistureScenarios;
SIGMoistureScenarios.prototype.__class__ = SIGMoistureScenarios;
SIGMoistureScenarios.__cache__ = {};
Module['SIGMoistureScenarios'] = SIGMoistureScenarios;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getIsMoistureScenarioDefinedByIndex'] = SIGMoistureScenarios.prototype.getIsMoistureScenarioDefinedByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return !!(_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getIsMoistureScenarioDefinedByName'] = SIGMoistureScenarios.prototype.getIsMoistureScenarioDefinedByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return !!(_emscripten_bind_SIGMoistureScenarios_getIsMoistureScenarioDefinedByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioHundredHourByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioHundredHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioHundredHourByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioHundredHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioHundredHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioLiveHerbaceousByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioLiveHerbaceousByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioLiveHerbaceousByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioLiveHerbaceousByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveHerbaceousByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioLiveWoodyByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioLiveWoodyByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioLiveWoodyByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioLiveWoodyByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioLiveWoodyByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioOneHourByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioOneHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioOneHourByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioOneHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioOneHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioTenHourByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioTenHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioTenHourByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioTenHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioTenHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioIndexByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioIndexByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return _emscripten_bind_SIGMoistureScenarios_getMoistureScenarioIndexByName_1(self, name);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getNumberOfMoistureScenarios'] = SIGMoistureScenarios.prototype.getNumberOfMoistureScenarios = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMoistureScenarios_getNumberOfMoistureScenarios_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioDescriptionByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioDescriptionByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioDescriptionByName'] = SIGMoistureScenarios.prototype.getMoistureScenarioDescriptionByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return UTF8ToString(_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioDescriptionByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['getMoistureScenarioNameByIndex'] = SIGMoistureScenarios.prototype.getMoistureScenarioNameByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGMoistureScenarios_getMoistureScenarioNameByIndex_1(self, index));
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMoistureScenarios.prototype['__destroy__'] = SIGMoistureScenarios.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGMoistureScenarios___destroy___0(self);
};

// Interface: SIGSpot

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGSpot() {
  this.ptr = _emscripten_bind_SIGSpot_SIGSpot_0();
  getCache(SIGSpot)[this.ptr] = this;
};

SIGSpot.prototype = Object.create(WrapperObject.prototype);
SIGSpot.prototype.constructor = SIGSpot;
SIGSpot.prototype.__class__ = SIGSpot;
SIGSpot.__cache__ = {};
Module['SIGSpot'] = SIGSpot;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getDownwindCanopyMode'] = SIGSpot.prototype.getDownwindCanopyMode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSpot_getDownwindCanopyMode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getLocation'] = SIGSpot.prototype.getLocation = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSpot_getLocation_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getTreeSpecies'] = SIGSpot.prototype.getTreeSpecies = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSpot_getTreeSpecies_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getBurningPileFlameHeight'] = SIGSpot.prototype.getBurningPileFlameHeight = function(flameHeightUnits) {
  var self = this.ptr;
  if (flameHeightUnits && typeof flameHeightUnits === 'object') flameHeightUnits = flameHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getBurningPileFlameHeight_1(self, flameHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getCoverHeightUsedForBurningPile'] = SIGSpot.prototype.getCoverHeightUsedForBurningPile = function(coverHeightUnits) {
  var self = this.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getCoverHeightUsedForBurningPile_1(self, coverHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getCoverHeightUsedForSurfaceFire'] = SIGSpot.prototype.getCoverHeightUsedForSurfaceFire = function(coverHeightUnits) {
  var self = this.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getCoverHeightUsedForSurfaceFire_1(self, coverHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getCoverHeightUsedForTorchingTrees'] = SIGSpot.prototype.getCoverHeightUsedForTorchingTrees = function(coverHeightUnits) {
  var self = this.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getCoverHeightUsedForTorchingTrees_1(self, coverHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getDBH'] = SIGSpot.prototype.getDBH = function(DBHUnits) {
  var self = this.ptr;
  if (DBHUnits && typeof DBHUnits === 'object') DBHUnits = DBHUnits.ptr;
  return _emscripten_bind_SIGSpot_getDBH_1(self, DBHUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getDownwindCoverHeight'] = SIGSpot.prototype.getDownwindCoverHeight = function(coverHeightUnits) {
  var self = this.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getDownwindCoverHeight_1(self, coverHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getFlameDurationForTorchingTrees'] = SIGSpot.prototype.getFlameDurationForTorchingTrees = function(durationUnits) {
  var self = this.ptr;
  if (durationUnits && typeof durationUnits === 'object') durationUnits = durationUnits.ptr;
  return _emscripten_bind_SIGSpot_getFlameDurationForTorchingTrees_1(self, durationUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getFlameHeightForTorchingTrees'] = SIGSpot.prototype.getFlameHeightForTorchingTrees = function(flameHeightUnits) {
  var self = this.ptr;
  if (flameHeightUnits && typeof flameHeightUnits === 'object') flameHeightUnits = flameHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getFlameHeightForTorchingTrees_1(self, flameHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getFlameRatioForTorchingTrees'] = SIGSpot.prototype.getFlameRatioForTorchingTrees = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSpot_getFlameRatioForTorchingTrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFirebrandHeightFromBurningPile'] = SIGSpot.prototype.getMaxFirebrandHeightFromBurningPile = function(firebrandHeightUnits) {
  var self = this.ptr;
  if (firebrandHeightUnits && typeof firebrandHeightUnits === 'object') firebrandHeightUnits = firebrandHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromBurningPile_1(self, firebrandHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFirebrandHeightFromSurfaceFire'] = SIGSpot.prototype.getMaxFirebrandHeightFromSurfaceFire = function(firebrandHeightUnits) {
  var self = this.ptr;
  if (firebrandHeightUnits && typeof firebrandHeightUnits === 'object') firebrandHeightUnits = firebrandHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromSurfaceFire_1(self, firebrandHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFirebrandHeightFromTorchingTrees'] = SIGSpot.prototype.getMaxFirebrandHeightFromTorchingTrees = function(firebrandHeightUnits) {
  var self = this.ptr;
  if (firebrandHeightUnits && typeof firebrandHeightUnits === 'object') firebrandHeightUnits = firebrandHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFirebrandHeightFromTorchingTrees_1(self, firebrandHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFlatTerrainSpottingDistanceFromBurningPile'] = SIGSpot.prototype.getMaxFlatTerrainSpottingDistanceFromBurningPile = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromBurningPile_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFlatTerrainSpottingDistanceFromSurfaceFire'] = SIGSpot.prototype.getMaxFlatTerrainSpottingDistanceFromSurfaceFire = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromSurfaceFire_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxFlatTerrainSpottingDistanceFromTorchingTrees'] = SIGSpot.prototype.getMaxFlatTerrainSpottingDistanceFromTorchingTrees = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxFlatTerrainSpottingDistanceFromTorchingTrees_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxMountainousTerrainSpottingDistanceFromBurningPile'] = SIGSpot.prototype.getMaxMountainousTerrainSpottingDistanceFromBurningPile = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromBurningPile_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxMountainousTerrainSpottingDistanceFromSurfaceFire'] = SIGSpot.prototype.getMaxMountainousTerrainSpottingDistanceFromSurfaceFire = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromSurfaceFire_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxMountainousTerrainSpottingDistanceFromTorchingTrees'] = SIGSpot.prototype.getMaxMountainousTerrainSpottingDistanceFromTorchingTrees = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromTorchingTrees_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getMaxMountainousTerrainSpottingDistanceFromActiveCrown'] = SIGSpot.prototype.getMaxMountainousTerrainSpottingDistanceFromActiveCrown = function(spottingDistanceUnits) {
  var self = this.ptr;
  if (spottingDistanceUnits && typeof spottingDistanceUnits === 'object') spottingDistanceUnits = spottingDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getMaxMountainousTerrainSpottingDistanceFromActiveCrown_1(self, spottingDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getRidgeToValleyDistance'] = SIGSpot.prototype.getRidgeToValleyDistance = function(ridgeToValleyDistanceUnits) {
  var self = this.ptr;
  if (ridgeToValleyDistanceUnits && typeof ridgeToValleyDistanceUnits === 'object') ridgeToValleyDistanceUnits = ridgeToValleyDistanceUnits.ptr;
  return _emscripten_bind_SIGSpot_getRidgeToValleyDistance_1(self, ridgeToValleyDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getRidgeToValleyElevation'] = SIGSpot.prototype.getRidgeToValleyElevation = function(elevationUnits) {
  var self = this.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  return _emscripten_bind_SIGSpot_getRidgeToValleyElevation_1(self, elevationUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getSurfaceFlameLength'] = SIGSpot.prototype.getSurfaceFlameLength = function(surfaceFlameLengthUnits) {
  var self = this.ptr;
  if (surfaceFlameLengthUnits && typeof surfaceFlameLengthUnits === 'object') surfaceFlameLengthUnits = surfaceFlameLengthUnits.ptr;
  return _emscripten_bind_SIGSpot_getSurfaceFlameLength_1(self, surfaceFlameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getTreeHeight'] = SIGSpot.prototype.getTreeHeight = function(treeHeightUnits) {
  var self = this.ptr;
  if (treeHeightUnits && typeof treeHeightUnits === 'object') treeHeightUnits = treeHeightUnits.ptr;
  return _emscripten_bind_SIGSpot_getTreeHeight_1(self, treeHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getWindSpeedAtTwentyFeet'] = SIGSpot.prototype.getWindSpeedAtTwentyFeet = function(windSpeedUnits) {
  var self = this.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  return _emscripten_bind_SIGSpot_getWindSpeedAtTwentyFeet_1(self, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['getTorchingTrees'] = SIGSpot.prototype.getTorchingTrees = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSpot_getTorchingTrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['calculateAll'] = SIGSpot.prototype.calculateAll = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot_calculateAll_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['calculateSpottingDistanceFromBurningPile'] = SIGSpot.prototype.calculateSpottingDistanceFromBurningPile = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot_calculateSpottingDistanceFromBurningPile_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['calculateSpottingDistanceFromSurfaceFire'] = SIGSpot.prototype.calculateSpottingDistanceFromSurfaceFire = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot_calculateSpottingDistanceFromSurfaceFire_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['calculateSpottingDistanceFromTorchingTrees'] = SIGSpot.prototype.calculateSpottingDistanceFromTorchingTrees = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot_calculateSpottingDistanceFromTorchingTrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['initializeMembers'] = SIGSpot.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setActiveCrownFlameLength'] = SIGSpot.prototype.setActiveCrownFlameLength = function(flameLength, flameLengthUnits) {
  var self = this.ptr;
  if (flameLength && typeof flameLength === 'object') flameLength = flameLength.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  _emscripten_bind_SIGSpot_setActiveCrownFlameLength_2(self, flameLength, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setBurningPileFlameHeight'] = SIGSpot.prototype.setBurningPileFlameHeight = function(buringPileflameHeight, flameHeightUnits) {
  var self = this.ptr;
  if (buringPileflameHeight && typeof buringPileflameHeight === 'object') buringPileflameHeight = buringPileflameHeight.ptr;
  if (flameHeightUnits && typeof flameHeightUnits === 'object') flameHeightUnits = flameHeightUnits.ptr;
  _emscripten_bind_SIGSpot_setBurningPileFlameHeight_2(self, buringPileflameHeight, flameHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setDBH'] = SIGSpot.prototype.setDBH = function(DBH, DBHUnits) {
  var self = this.ptr;
  if (DBH && typeof DBH === 'object') DBH = DBH.ptr;
  if (DBHUnits && typeof DBHUnits === 'object') DBHUnits = DBHUnits.ptr;
  _emscripten_bind_SIGSpot_setDBH_2(self, DBH, DBHUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setDownwindCanopyMode'] = SIGSpot.prototype.setDownwindCanopyMode = function(downwindCanopyMode) {
  var self = this.ptr;
  if (downwindCanopyMode && typeof downwindCanopyMode === 'object') downwindCanopyMode = downwindCanopyMode.ptr;
  _emscripten_bind_SIGSpot_setDownwindCanopyMode_1(self, downwindCanopyMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setDownwindCoverHeight'] = SIGSpot.prototype.setDownwindCoverHeight = function(downwindCoverHeight, coverHeightUnits) {
  var self = this.ptr;
  if (downwindCoverHeight && typeof downwindCoverHeight === 'object') downwindCoverHeight = downwindCoverHeight.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  _emscripten_bind_SIGSpot_setDownwindCoverHeight_2(self, downwindCoverHeight, coverHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setFireType'] = SIGSpot.prototype.setFireType = function(fireType) {
  var self = this.ptr;
  if (fireType && typeof fireType === 'object') fireType = fireType.ptr;
  _emscripten_bind_SIGSpot_setFireType_1(self, fireType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setFlameLength'] = SIGSpot.prototype.setFlameLength = function(flameLength, flameLengthUnits) {
  var self = this.ptr;
  if (flameLength && typeof flameLength === 'object') flameLength = flameLength.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  _emscripten_bind_SIGSpot_setFlameLength_2(self, flameLength, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setFirelineIntensity'] = SIGSpot.prototype.setFirelineIntensity = function(firelineIntensity, firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensity && typeof firelineIntensity === 'object') firelineIntensity = firelineIntensity.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  _emscripten_bind_SIGSpot_setFirelineIntensity_2(self, firelineIntensity, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setLocation'] = SIGSpot.prototype.setLocation = function(location) {
  var self = this.ptr;
  if (location && typeof location === 'object') location = location.ptr;
  _emscripten_bind_SIGSpot_setLocation_1(self, location);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setRidgeToValleyDistance'] = SIGSpot.prototype.setRidgeToValleyDistance = function(ridgeToValleyDistance, ridgeToValleyDistanceUnits) {
  var self = this.ptr;
  if (ridgeToValleyDistance && typeof ridgeToValleyDistance === 'object') ridgeToValleyDistance = ridgeToValleyDistance.ptr;
  if (ridgeToValleyDistanceUnits && typeof ridgeToValleyDistanceUnits === 'object') ridgeToValleyDistanceUnits = ridgeToValleyDistanceUnits.ptr;
  _emscripten_bind_SIGSpot_setRidgeToValleyDistance_2(self, ridgeToValleyDistance, ridgeToValleyDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setRidgeToValleyElevation'] = SIGSpot.prototype.setRidgeToValleyElevation = function(ridgeToValleyElevation, elevationUnits) {
  var self = this.ptr;
  if (ridgeToValleyElevation && typeof ridgeToValleyElevation === 'object') ridgeToValleyElevation = ridgeToValleyElevation.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  _emscripten_bind_SIGSpot_setRidgeToValleyElevation_2(self, ridgeToValleyElevation, elevationUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setTorchingTrees'] = SIGSpot.prototype.setTorchingTrees = function(torchingTrees) {
  var self = this.ptr;
  if (torchingTrees && typeof torchingTrees === 'object') torchingTrees = torchingTrees.ptr;
  _emscripten_bind_SIGSpot_setTorchingTrees_1(self, torchingTrees);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setTreeHeight'] = SIGSpot.prototype.setTreeHeight = function(treeHeight, treeHeightUnits) {
  var self = this.ptr;
  if (treeHeight && typeof treeHeight === 'object') treeHeight = treeHeight.ptr;
  if (treeHeightUnits && typeof treeHeightUnits === 'object') treeHeightUnits = treeHeightUnits.ptr;
  _emscripten_bind_SIGSpot_setTreeHeight_2(self, treeHeight, treeHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setTreeSpecies'] = SIGSpot.prototype.setTreeSpecies = function(treeSpecies) {
  var self = this.ptr;
  if (treeSpecies && typeof treeSpecies === 'object') treeSpecies = treeSpecies.ptr;
  _emscripten_bind_SIGSpot_setTreeSpecies_1(self, treeSpecies);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setWindSpeedAtTwentyFeet'] = SIGSpot.prototype.setWindSpeedAtTwentyFeet = function(windSpeedAtTwentyFeet, windSpeedUnits) {
  var self = this.ptr;
  if (windSpeedAtTwentyFeet && typeof windSpeedAtTwentyFeet === 'object') windSpeedAtTwentyFeet = windSpeedAtTwentyFeet.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGSpot_setWindSpeedAtTwentyFeet_2(self, windSpeedAtTwentyFeet, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setWindSpeed'] = SIGSpot.prototype.setWindSpeed = function(windSpeed, windSpeedUnits) {
  var self = this.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGSpot_setWindSpeed_2(self, windSpeed, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setWindSpeedAndWindHeightInputMode'] = SIGSpot.prototype.setWindSpeedAndWindHeightInputMode = function(windSpeed, windSpeedUnits, windHeightInputMode) {
  var self = this.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  _emscripten_bind_SIGSpot_setWindSpeedAndWindHeightInputMode_3(self, windSpeed, windSpeedUnits, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['setWindHeightInputMode'] = SIGSpot.prototype.setWindHeightInputMode = function(windHeightInputMode) {
  var self = this.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  _emscripten_bind_SIGSpot_setWindHeightInputMode_1(self, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['updateSpotInputsForBurningPile'] = SIGSpot.prototype.updateSpotInputsForBurningPile = function(location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, buringPileFlameHeight, flameHeightUnits, windSpeedAtTwentyFeet, windSpeedUnits) {
  var self = this.ptr;
  if (location && typeof location === 'object') location = location.ptr;
  if (ridgeToValleyDistance && typeof ridgeToValleyDistance === 'object') ridgeToValleyDistance = ridgeToValleyDistance.ptr;
  if (ridgeToValleyDistanceUnits && typeof ridgeToValleyDistanceUnits === 'object') ridgeToValleyDistanceUnits = ridgeToValleyDistanceUnits.ptr;
  if (ridgeToValleyElevation && typeof ridgeToValleyElevation === 'object') ridgeToValleyElevation = ridgeToValleyElevation.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  if (downwindCoverHeight && typeof downwindCoverHeight === 'object') downwindCoverHeight = downwindCoverHeight.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  if (downwindCanopyMode && typeof downwindCanopyMode === 'object') downwindCanopyMode = downwindCanopyMode.ptr;
  if (buringPileFlameHeight && typeof buringPileFlameHeight === 'object') buringPileFlameHeight = buringPileFlameHeight.ptr;
  if (flameHeightUnits && typeof flameHeightUnits === 'object') flameHeightUnits = flameHeightUnits.ptr;
  if (windSpeedAtTwentyFeet && typeof windSpeedAtTwentyFeet === 'object') windSpeedAtTwentyFeet = windSpeedAtTwentyFeet.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGSpot_updateSpotInputsForBurningPile_12(self, location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, buringPileFlameHeight, flameHeightUnits, windSpeedAtTwentyFeet, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['updateSpotInputsForSurfaceFire'] = SIGSpot.prototype.updateSpotInputsForSurfaceFire = function(location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, windSpeedAtTwentyFeet, windSpeedUnits, flameLength, flameLengthUnits) {
  var self = this.ptr;
  if (location && typeof location === 'object') location = location.ptr;
  if (ridgeToValleyDistance && typeof ridgeToValleyDistance === 'object') ridgeToValleyDistance = ridgeToValleyDistance.ptr;
  if (ridgeToValleyDistanceUnits && typeof ridgeToValleyDistanceUnits === 'object') ridgeToValleyDistanceUnits = ridgeToValleyDistanceUnits.ptr;
  if (ridgeToValleyElevation && typeof ridgeToValleyElevation === 'object') ridgeToValleyElevation = ridgeToValleyElevation.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  if (downwindCoverHeight && typeof downwindCoverHeight === 'object') downwindCoverHeight = downwindCoverHeight.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  if (downwindCanopyMode && typeof downwindCanopyMode === 'object') downwindCanopyMode = downwindCanopyMode.ptr;
  if (windSpeedAtTwentyFeet && typeof windSpeedAtTwentyFeet === 'object') windSpeedAtTwentyFeet = windSpeedAtTwentyFeet.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (flameLength && typeof flameLength === 'object') flameLength = flameLength.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  _emscripten_bind_SIGSpot_updateSpotInputsForSurfaceFire_12(self, location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, windSpeedAtTwentyFeet, windSpeedUnits, flameLength, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['updateSpotInputsForTorchingTrees'] = SIGSpot.prototype.updateSpotInputsForTorchingTrees = function(location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, torchingTrees, DBH, DBHUnits, treeHeight, treeHeightUnits, treeSpecies, windSpeedAtTwentyFeet, windSpeedUnits) {
  var self = this.ptr;
  if (location && typeof location === 'object') location = location.ptr;
  if (ridgeToValleyDistance && typeof ridgeToValleyDistance === 'object') ridgeToValleyDistance = ridgeToValleyDistance.ptr;
  if (ridgeToValleyDistanceUnits && typeof ridgeToValleyDistanceUnits === 'object') ridgeToValleyDistanceUnits = ridgeToValleyDistanceUnits.ptr;
  if (ridgeToValleyElevation && typeof ridgeToValleyElevation === 'object') ridgeToValleyElevation = ridgeToValleyElevation.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  if (downwindCoverHeight && typeof downwindCoverHeight === 'object') downwindCoverHeight = downwindCoverHeight.ptr;
  if (coverHeightUnits && typeof coverHeightUnits === 'object') coverHeightUnits = coverHeightUnits.ptr;
  if (downwindCanopyMode && typeof downwindCanopyMode === 'object') downwindCanopyMode = downwindCanopyMode.ptr;
  if (torchingTrees && typeof torchingTrees === 'object') torchingTrees = torchingTrees.ptr;
  if (DBH && typeof DBH === 'object') DBH = DBH.ptr;
  if (DBHUnits && typeof DBHUnits === 'object') DBHUnits = DBHUnits.ptr;
  if (treeHeight && typeof treeHeight === 'object') treeHeight = treeHeight.ptr;
  if (treeHeightUnits && typeof treeHeightUnits === 'object') treeHeightUnits = treeHeightUnits.ptr;
  if (treeSpecies && typeof treeSpecies === 'object') treeSpecies = treeSpecies.ptr;
  if (windSpeedAtTwentyFeet && typeof windSpeedAtTwentyFeet === 'object') windSpeedAtTwentyFeet = windSpeedAtTwentyFeet.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGSpot_updateSpotInputsForTorchingTrees_16(self, location, ridgeToValleyDistance, ridgeToValleyDistanceUnits, ridgeToValleyElevation, elevationUnits, downwindCoverHeight, coverHeightUnits, downwindCanopyMode, torchingTrees, DBH, DBHUnits, treeHeight, treeHeightUnits, treeSpecies, windSpeedAtTwentyFeet, windSpeedUnits);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSpot.prototype['__destroy__'] = SIGSpot.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSpot___destroy___0(self);
};

// Interface: SIGFuelModels

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGFuelModels(rhs) {
  if (rhs && typeof rhs === 'object') rhs = rhs.ptr;
  if (rhs === undefined) { this.ptr = _emscripten_bind_SIGFuelModels_SIGFuelModels_0(); getCache(SIGFuelModels)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_SIGFuelModels_SIGFuelModels_1(rhs);
  getCache(SIGFuelModels)[this.ptr] = this;
};

SIGFuelModels.prototype = Object.create(WrapperObject.prototype);
SIGFuelModels.prototype.constructor = SIGFuelModels;
SIGFuelModels.prototype.__class__ = SIGFuelModels;
SIGFuelModels.__cache__ = {};
Module['SIGFuelModels'] = SIGFuelModels;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['equal'] = SIGFuelModels.prototype.equal = function(rhs) {
  var self = this.ptr;
  if (rhs && typeof rhs === 'object') rhs = rhs.ptr;
  return wrapPointer(_emscripten_bind_SIGFuelModels_equal_1(self, rhs), SIGFuelModels);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['clearCustomFuelModel'] = SIGFuelModels.prototype.clearCustomFuelModel = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGFuelModels_clearCustomFuelModel_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getIsDynamic'] = SIGFuelModels.prototype.getIsDynamic = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGFuelModels_getIsDynamic_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['isAllFuelLoadZero'] = SIGFuelModels.prototype.isAllFuelLoadZero = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGFuelModels_isAllFuelLoadZero_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['isFuelModelDefined'] = SIGFuelModels.prototype.isFuelModelDefined = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGFuelModels_isFuelModelDefined_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['isFuelModelReserved'] = SIGFuelModels.prototype.isFuelModelReserved = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGFuelModels_isFuelModelReserved_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['setCustomFuelModel'] = SIGFuelModels.prototype.setCustomFuelModel = function(fuelModelNumber, code, name, fuelBedDepth, lengthUnits, moistureOfExtinctionDead, moistureUnits, heatOfCombustionDead, heatOfCombustionLive, heatOfCombustionUnits, fuelLoadOneHour, fuelLoadTenHour, fuelLoadHundredHour, fuelLoadLiveHerbaceous, fuelLoadLiveWoody, loadingUnits, savrOneHour, savrLiveHerbaceous, savrLiveWoody, savrUnits, isDynamic) {
  var self = this.ptr;
  ensureCache.prepare();
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (code && typeof code === 'object') code = code.ptr;
  else code = ensureString(code);
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (fuelBedDepth && typeof fuelBedDepth === 'object') fuelBedDepth = fuelBedDepth.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  if (moistureOfExtinctionDead && typeof moistureOfExtinctionDead === 'object') moistureOfExtinctionDead = moistureOfExtinctionDead.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (heatOfCombustionDead && typeof heatOfCombustionDead === 'object') heatOfCombustionDead = heatOfCombustionDead.ptr;
  if (heatOfCombustionLive && typeof heatOfCombustionLive === 'object') heatOfCombustionLive = heatOfCombustionLive.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  if (fuelLoadOneHour && typeof fuelLoadOneHour === 'object') fuelLoadOneHour = fuelLoadOneHour.ptr;
  if (fuelLoadTenHour && typeof fuelLoadTenHour === 'object') fuelLoadTenHour = fuelLoadTenHour.ptr;
  if (fuelLoadHundredHour && typeof fuelLoadHundredHour === 'object') fuelLoadHundredHour = fuelLoadHundredHour.ptr;
  if (fuelLoadLiveHerbaceous && typeof fuelLoadLiveHerbaceous === 'object') fuelLoadLiveHerbaceous = fuelLoadLiveHerbaceous.ptr;
  if (fuelLoadLiveWoody && typeof fuelLoadLiveWoody === 'object') fuelLoadLiveWoody = fuelLoadLiveWoody.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  if (savrOneHour && typeof savrOneHour === 'object') savrOneHour = savrOneHour.ptr;
  if (savrLiveHerbaceous && typeof savrLiveHerbaceous === 'object') savrLiveHerbaceous = savrLiveHerbaceous.ptr;
  if (savrLiveWoody && typeof savrLiveWoody === 'object') savrLiveWoody = savrLiveWoody.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  if (isDynamic && typeof isDynamic === 'object') isDynamic = isDynamic.ptr;
  return !!(_emscripten_bind_SIGFuelModels_setCustomFuelModel_21(self, fuelModelNumber, code, name, fuelBedDepth, lengthUnits, moistureOfExtinctionDead, moistureUnits, heatOfCombustionDead, heatOfCombustionLive, heatOfCombustionUnits, fuelLoadOneHour, fuelLoadTenHour, fuelLoadHundredHour, fuelLoadLiveHerbaceous, fuelLoadLiveWoody, loadingUnits, savrOneHour, savrLiveHerbaceous, savrLiveWoody, savrUnits, isDynamic));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelCode'] = SIGFuelModels.prototype.getFuelCode = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGFuelModels_getFuelCode_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelName'] = SIGFuelModels.prototype.getFuelName = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGFuelModels_getFuelName_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelLoadHundredHour'] = SIGFuelModels.prototype.getFuelLoadHundredHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelLoadHundredHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelLoadLiveHerbaceous'] = SIGFuelModels.prototype.getFuelLoadLiveHerbaceous = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelLoadLiveHerbaceous_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelLoadLiveWoody'] = SIGFuelModels.prototype.getFuelLoadLiveWoody = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelLoadLiveWoody_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelLoadOneHour'] = SIGFuelModels.prototype.getFuelLoadOneHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelLoadOneHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelLoadTenHour'] = SIGFuelModels.prototype.getFuelLoadTenHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelLoadTenHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getFuelbedDepth'] = SIGFuelModels.prototype.getFuelbedDepth = function(fuelModelNumber, lengthUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getFuelbedDepth_2(self, fuelModelNumber, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getHeatOfCombustionDead'] = SIGFuelModels.prototype.getHeatOfCombustionDead = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getHeatOfCombustionDead_2(self, fuelModelNumber, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getMoistureOfExtinctionDead'] = SIGFuelModels.prototype.getMoistureOfExtinctionDead = function(fuelModelNumber, moistureUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getMoistureOfExtinctionDead_2(self, fuelModelNumber, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getSavrLiveHerbaceous'] = SIGFuelModels.prototype.getSavrLiveHerbaceous = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getSavrLiveHerbaceous_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getSavrLiveWoody'] = SIGFuelModels.prototype.getSavrLiveWoody = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getSavrLiveWoody_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getSavrOneHour'] = SIGFuelModels.prototype.getSavrOneHour = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getSavrOneHour_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['getHeatOfCombustionLive'] = SIGFuelModels.prototype.getHeatOfCombustionLive = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGFuelModels_getHeatOfCombustionLive_2(self, fuelModelNumber, heatOfCombustionUnits);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFuelModels.prototype['__destroy__'] = SIGFuelModels.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGFuelModels___destroy___0(self);
};

// Interface: SIGSurface

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGSurface(fuelModels) {
  if (fuelModels && typeof fuelModels === 'object') fuelModels = fuelModels.ptr;
  this.ptr = _emscripten_bind_SIGSurface_SIGSurface_1(fuelModels);
  getCache(SIGSurface)[this.ptr] = this;
};

SIGSurface.prototype = Object.create(WrapperObject.prototype);
SIGSurface.prototype.constructor = SIGSurface;
SIGSurface.prototype.__class__ = SIGSurface;
SIGSurface.__cache__ = {};
Module['SIGSurface'] = SIGSurface;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenFireSeverity'] = SIGSurface.prototype.getAspenFireSeverity = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getAspenFireSeverity_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralFuelType'] = SIGSurface.prototype.getChaparralFuelType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getChaparralFuelType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureInputMode'] = SIGSurface.prototype.getMoistureInputMode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getMoistureInputMode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindAdjustmentFactorCalculationMethod'] = SIGSurface.prototype.getWindAdjustmentFactorCalculationMethod = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getWindAdjustmentFactorCalculationMethod_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindAndSpreadOrientationMode'] = SIGSurface.prototype.getWindAndSpreadOrientationMode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getWindAndSpreadOrientationMode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindHeightInputMode'] = SIGSurface.prototype.getWindHeightInputMode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getWindHeightInputMode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindUpslopeAlignmentMode'] = SIGSurface.prototype.getWindUpslopeAlignmentMode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getWindUpslopeAlignmentMode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSurfaceRunInDirectionOf'] = SIGSurface.prototype.getSurfaceRunInDirectionOf = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getSurfaceRunInDirectionOf_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getIsMoistureScenarioDefinedByIndex'] = SIGSurface.prototype.getIsMoistureScenarioDefinedByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return !!(_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getIsMoistureScenarioDefinedByName'] = SIGSurface.prototype.getIsMoistureScenarioDefinedByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return !!(_emscripten_bind_SIGSurface_getIsMoistureScenarioDefinedByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getIsUsingChaparral'] = SIGSurface.prototype.getIsUsingChaparral = function() {
  var self = this.ptr;
  return !!(_emscripten_bind_SIGSurface_getIsUsingChaparral_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getIsUsingPalmettoGallberry'] = SIGSurface.prototype.getIsUsingPalmettoGallberry = function() {
  var self = this.ptr;
  return !!(_emscripten_bind_SIGSurface_getIsUsingPalmettoGallberry_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getIsUsingWesternAspen'] = SIGSurface.prototype.getIsUsingWesternAspen = function() {
  var self = this.ptr;
  return !!(_emscripten_bind_SIGSurface_getIsUsingWesternAspen_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isAllFuelLoadZero'] = SIGSurface.prototype.isAllFuelLoadZero = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGSurface_isAllFuelLoadZero_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isFuelDynamic'] = SIGSurface.prototype.isFuelDynamic = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGSurface_isFuelDynamic_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isFuelModelDefined'] = SIGSurface.prototype.isFuelModelDefined = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGSurface_isFuelModelDefined_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isFuelModelReserved'] = SIGSurface.prototype.isFuelModelReserved = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGSurface_isFuelModelReserved_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isMoistureClassInputNeededForCurrentFuelModel'] = SIGSurface.prototype.isMoistureClassInputNeededForCurrentFuelModel = function(moistureClass) {
  var self = this.ptr;
  if (moistureClass && typeof moistureClass === 'object') moistureClass = moistureClass.ptr;
  return !!(_emscripten_bind_SIGSurface_isMoistureClassInputNeededForCurrentFuelModel_1(self, moistureClass));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['isUsingTwoFuelModels'] = SIGSurface.prototype.isUsingTwoFuelModels = function() {
  var self = this.ptr;
  return !!(_emscripten_bind_SIGSurface_isUsingTwoFuelModels_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setCurrentMoistureScenarioByIndex'] = SIGSurface.prototype.setCurrentMoistureScenarioByIndex = function(moistureScenarioIndex) {
  var self = this.ptr;
  if (moistureScenarioIndex && typeof moistureScenarioIndex === 'object') moistureScenarioIndex = moistureScenarioIndex.ptr;
  return !!(_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByIndex_1(self, moistureScenarioIndex));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setCurrentMoistureScenarioByName'] = SIGSurface.prototype.setCurrentMoistureScenarioByName = function(moistureScenarioName) {
  var self = this.ptr;
  ensureCache.prepare();
  if (moistureScenarioName && typeof moistureScenarioName === 'object') moistureScenarioName = moistureScenarioName.ptr;
  else moistureScenarioName = ensureString(moistureScenarioName);
  return !!(_emscripten_bind_SIGSurface_setCurrentMoistureScenarioByName_1(self, moistureScenarioName));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['calculateFlameLength'] = SIGSurface.prototype.calculateFlameLength = function(firelineIntensity, firelineIntensityUnits, flameLengthUnits) {
  var self = this.ptr;
  if (firelineIntensity && typeof firelineIntensity === 'object') firelineIntensity = firelineIntensity.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGSurface_calculateFlameLength_3(self, firelineIntensity, firelineIntensityUnits, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAgeOfRough'] = SIGSurface.prototype.getAgeOfRough = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getAgeOfRough_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspect'] = SIGSurface.prototype.getAspect = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getAspect_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenCuringLevel'] = SIGSurface.prototype.getAspenCuringLevel = function(curingLevelUnits) {
  var self = this.ptr;
  if (curingLevelUnits && typeof curingLevelUnits === 'object') curingLevelUnits = curingLevelUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenCuringLevel_1(self, curingLevelUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenDBH'] = SIGSurface.prototype.getAspenDBH = function(dbhUnits) {
  var self = this.ptr;
  if (dbhUnits && typeof dbhUnits === 'object') dbhUnits = dbhUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenDBH_1(self, dbhUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenLoadDeadOneHour'] = SIGSurface.prototype.getAspenLoadDeadOneHour = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenLoadDeadOneHour_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenLoadDeadTenHour'] = SIGSurface.prototype.getAspenLoadDeadTenHour = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenLoadDeadTenHour_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenLoadLiveHerbaceous'] = SIGSurface.prototype.getAspenLoadLiveHerbaceous = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenLoadLiveHerbaceous_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenLoadLiveWoody'] = SIGSurface.prototype.getAspenLoadLiveWoody = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenLoadLiveWoody_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenSavrDeadOneHour'] = SIGSurface.prototype.getAspenSavrDeadOneHour = function(savrUnits) {
  var self = this.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenSavrDeadOneHour_1(self, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenSavrDeadTenHour'] = SIGSurface.prototype.getAspenSavrDeadTenHour = function(savrUnits) {
  var self = this.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenSavrDeadTenHour_1(self, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenSavrLiveHerbaceous'] = SIGSurface.prototype.getAspenSavrLiveHerbaceous = function(savrUnits) {
  var self = this.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenSavrLiveHerbaceous_1(self, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenSavrLiveWoody'] = SIGSurface.prototype.getAspenSavrLiveWoody = function(savrUnits) {
  var self = this.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getAspenSavrLiveWoody_1(self, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getBackingFirelineIntensity'] = SIGSurface.prototype.getBackingFirelineIntensity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGSurface_getBackingFirelineIntensity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getBackingFlameLength'] = SIGSurface.prototype.getBackingFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getBackingFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getBackingSpreadDistance'] = SIGSurface.prototype.getBackingSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getBackingSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getBackingSpreadRate'] = SIGSurface.prototype.getBackingSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGSurface_getBackingSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getBulkDensity'] = SIGSurface.prototype.getBulkDensity = function(densityUnits) {
  var self = this.ptr;
  if (densityUnits && typeof densityUnits === 'object') densityUnits = densityUnits.ptr;
  return _emscripten_bind_SIGSurface_getBulkDensity_1(self, densityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCanopyCover'] = SIGSurface.prototype.getCanopyCover = function(coverUnits) {
  var self = this.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  return _emscripten_bind_SIGSurface_getCanopyCover_1(self, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCanopyHeight'] = SIGSurface.prototype.getCanopyHeight = function(canopyHeightUnits) {
  var self = this.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  return _emscripten_bind_SIGSurface_getCanopyHeight_1(self, canopyHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralAge'] = SIGSurface.prototype.getChaparralAge = function(ageUnits) {
  var self = this.ptr;
  if (ageUnits && typeof ageUnits === 'object') ageUnits = ageUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralAge_1(self, ageUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralDaysSinceMayFirst'] = SIGSurface.prototype.getChaparralDaysSinceMayFirst = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getChaparralDaysSinceMayFirst_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralDeadFuelFraction'] = SIGSurface.prototype.getChaparralDeadFuelFraction = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getChaparralDeadFuelFraction_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralDeadMoistureOfExtinction'] = SIGSurface.prototype.getChaparralDeadMoistureOfExtinction = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralDeadMoistureOfExtinction_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralDensity'] = SIGSurface.prototype.getChaparralDensity = function(lifeState, sizeClass, densityUnits) {
  var self = this.ptr;
  if (lifeState && typeof lifeState === 'object') lifeState = lifeState.ptr;
  if (sizeClass && typeof sizeClass === 'object') sizeClass = sizeClass.ptr;
  if (densityUnits && typeof densityUnits === 'object') densityUnits = densityUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralDensity_3(self, lifeState, sizeClass, densityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralFuelBedDepth'] = SIGSurface.prototype.getChaparralFuelBedDepth = function(depthUnits) {
  var self = this.ptr;
  if (depthUnits && typeof depthUnits === 'object') depthUnits = depthUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralFuelBedDepth_1(self, depthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralFuelDeadLoadFraction'] = SIGSurface.prototype.getChaparralFuelDeadLoadFraction = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getChaparralFuelDeadLoadFraction_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralHeatOfCombustion'] = SIGSurface.prototype.getChaparralHeatOfCombustion = function(lifeState, sizeClass, heatOfCombustionUnits) {
  var self = this.ptr;
  if (lifeState && typeof lifeState === 'object') lifeState = lifeState.ptr;
  if (sizeClass && typeof sizeClass === 'object') sizeClass = sizeClass.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralHeatOfCombustion_3(self, lifeState, sizeClass, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLiveMoistureOfExtinction'] = SIGSurface.prototype.getChaparralLiveMoistureOfExtinction = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLiveMoistureOfExtinction_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadDeadHalfInchToLessThanOneInch'] = SIGSurface.prototype.getChaparralLoadDeadHalfInchToLessThanOneInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadDeadHalfInchToLessThanOneInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadDeadLessThanQuarterInch'] = SIGSurface.prototype.getChaparralLoadDeadLessThanQuarterInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadDeadLessThanQuarterInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadDeadOneInchToThreeInch'] = SIGSurface.prototype.getChaparralLoadDeadOneInchToThreeInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadDeadOneInchToThreeInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadDeadQuarterInchToLessThanHalfInch'] = SIGSurface.prototype.getChaparralLoadDeadQuarterInchToLessThanHalfInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadDeadQuarterInchToLessThanHalfInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadLiveHalfInchToLessThanOneInch'] = SIGSurface.prototype.getChaparralLoadLiveHalfInchToLessThanOneInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadLiveHalfInchToLessThanOneInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadLiveLeaves'] = SIGSurface.prototype.getChaparralLoadLiveLeaves = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadLiveLeaves_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadLiveOneInchToThreeInch'] = SIGSurface.prototype.getChaparralLoadLiveOneInchToThreeInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadLiveOneInchToThreeInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadLiveQuarterInchToLessThanHalfInch'] = SIGSurface.prototype.getChaparralLoadLiveQuarterInchToLessThanHalfInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadLiveQuarterInchToLessThanHalfInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralLoadLiveStemsLessThanQuaterInch'] = SIGSurface.prototype.getChaparralLoadLiveStemsLessThanQuaterInch = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralLoadLiveStemsLessThanQuaterInch_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralMoisture'] = SIGSurface.prototype.getChaparralMoisture = function(lifeState, sizeClass, moistureUnits) {
  var self = this.ptr;
  if (lifeState && typeof lifeState === 'object') lifeState = lifeState.ptr;
  if (sizeClass && typeof sizeClass === 'object') sizeClass = sizeClass.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralMoisture_3(self, lifeState, sizeClass, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralTotalDeadFuelLoad'] = SIGSurface.prototype.getChaparralTotalDeadFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralTotalDeadFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralTotalFuelLoad'] = SIGSurface.prototype.getChaparralTotalFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralTotalFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getChaparralTotalLiveFuelLoad'] = SIGSurface.prototype.getChaparralTotalLiveFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getChaparralTotalLiveFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCharacteristicMoistureByLifeState'] = SIGSurface.prototype.getCharacteristicMoistureByLifeState = function(lifeState, moistureUnits) {
  var self = this.ptr;
  if (lifeState && typeof lifeState === 'object') lifeState = lifeState.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getCharacteristicMoistureByLifeState_2(self, lifeState, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCharacteristicMoistureDead'] = SIGSurface.prototype.getCharacteristicMoistureDead = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getCharacteristicMoistureDead_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCharacteristicMoistureLive'] = SIGSurface.prototype.getCharacteristicMoistureLive = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getCharacteristicMoistureLive_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCharacteristicSAVR'] = SIGSurface.prototype.getCharacteristicSAVR = function(savrUnits) {
  var self = this.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getCharacteristicSAVR_1(self, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getCrownRatio'] = SIGSurface.prototype.getCrownRatio = function(crownRatioUnits) {
  var self = this.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  return _emscripten_bind_SIGSurface_getCrownRatio_1(self, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getDirectionOfMaxSpread'] = SIGSurface.prototype.getDirectionOfMaxSpread = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getDirectionOfMaxSpread_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getDirectionOfInterest'] = SIGSurface.prototype.getDirectionOfInterest = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getDirectionOfInterest_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getDirectionOfBacking'] = SIGSurface.prototype.getDirectionOfBacking = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getDirectionOfBacking_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getDirectionOfFlanking'] = SIGSurface.prototype.getDirectionOfFlanking = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getDirectionOfFlanking_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getElapsedTime'] = SIGSurface.prototype.getElapsedTime = function(timeUnits) {
  var self = this.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_SIGSurface_getElapsedTime_1(self, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getEllipticalA'] = SIGSurface.prototype.getEllipticalA = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getEllipticalA_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getEllipticalB'] = SIGSurface.prototype.getEllipticalB = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getEllipticalB_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getEllipticalC'] = SIGSurface.prototype.getEllipticalC = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getEllipticalC_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFireLength'] = SIGSurface.prototype.getFireLength = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFireLength_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMaxFireWidth'] = SIGSurface.prototype.getMaxFireWidth = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getMaxFireWidth_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFireArea'] = SIGSurface.prototype.getFireArea = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGSurface_getFireArea_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFireEccentricity'] = SIGSurface.prototype.getFireEccentricity = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getFireEccentricity_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFireLengthToWidthRatio'] = SIGSurface.prototype.getFireLengthToWidthRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getFireLengthToWidthRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFirePerimeter'] = SIGSurface.prototype.getFirePerimeter = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFirePerimeter_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFirelineIntensity'] = SIGSurface.prototype.getFirelineIntensity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGSurface_getFirelineIntensity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFirelineIntensityInDirectionOfInterest'] = SIGSurface.prototype.getFirelineIntensityInDirectionOfInterest = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGSurface_getFirelineIntensityInDirectionOfInterest_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlameLength'] = SIGSurface.prototype.getFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlameLengthInDirectionOfInterest'] = SIGSurface.prototype.getFlameLengthInDirectionOfInterest = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlameLengthInDirectionOfInterest_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlankingFirelineIntensity'] = SIGSurface.prototype.getFlankingFirelineIntensity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlankingFirelineIntensity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlankingFlameLength'] = SIGSurface.prototype.getFlankingFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlankingFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlankingSpreadRate'] = SIGSurface.prototype.getFlankingSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlankingSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFlankingSpreadDistance'] = SIGSurface.prototype.getFlankingSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFlankingSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelHeatOfCombustionDead'] = SIGSurface.prototype.getFuelHeatOfCombustionDead = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelHeatOfCombustionDead_2(self, fuelModelNumber, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelHeatOfCombustionLive'] = SIGSurface.prototype.getFuelHeatOfCombustionLive = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelHeatOfCombustionLive_2(self, fuelModelNumber, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelLoadHundredHour'] = SIGSurface.prototype.getFuelLoadHundredHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelLoadHundredHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelLoadLiveHerbaceous'] = SIGSurface.prototype.getFuelLoadLiveHerbaceous = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelLoadLiveHerbaceous_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelLoadLiveWoody'] = SIGSurface.prototype.getFuelLoadLiveWoody = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelLoadLiveWoody_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelLoadOneHour'] = SIGSurface.prototype.getFuelLoadOneHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelLoadOneHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelLoadTenHour'] = SIGSurface.prototype.getFuelLoadTenHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelLoadTenHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelMoistureOfExtinctionDead'] = SIGSurface.prototype.getFuelMoistureOfExtinctionDead = function(fuelModelNumber, moistureUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelMoistureOfExtinctionDead_2(self, fuelModelNumber, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelSavrLiveHerbaceous'] = SIGSurface.prototype.getFuelSavrLiveHerbaceous = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelSavrLiveHerbaceous_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelSavrLiveWoody'] = SIGSurface.prototype.getFuelSavrLiveWoody = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelSavrLiveWoody_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelSavrOneHour'] = SIGSurface.prototype.getFuelSavrOneHour = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelSavrOneHour_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelbedDepth'] = SIGSurface.prototype.getFuelbedDepth = function(fuelModelNumber, lengthUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getFuelbedDepth_2(self, fuelModelNumber, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeadingSpreadRate'] = SIGSurface.prototype.getHeadingSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGSurface_getHeadingSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeadingToBackingRatio'] = SIGSurface.prototype.getHeadingToBackingRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getHeadingToBackingRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeatPerUnitArea'] = SIGSurface.prototype.getHeatPerUnitArea = function(heatPerUnitAreaUnits) {
  var self = this.ptr;
  if (heatPerUnitAreaUnits && typeof heatPerUnitAreaUnits === 'object') heatPerUnitAreaUnits = heatPerUnitAreaUnits.ptr;
  return _emscripten_bind_SIGSurface_getHeatPerUnitArea_1(self, heatPerUnitAreaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeatSink'] = SIGSurface.prototype.getHeatSink = function(heatSinkUnits) {
  var self = this.ptr;
  if (heatSinkUnits && typeof heatSinkUnits === 'object') heatSinkUnits = heatSinkUnits.ptr;
  return _emscripten_bind_SIGSurface_getHeatSink_1(self, heatSinkUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeatSource'] = SIGSurface.prototype.getHeatSource = function(heatSourceUnits) {
  var self = this.ptr;
  if (heatSourceUnits && typeof heatSourceUnits === 'object') heatSourceUnits = heatSourceUnits.ptr;
  return _emscripten_bind_SIGSurface_getHeatSource_1(self, heatSourceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getHeightOfUnderstory'] = SIGSurface.prototype.getHeightOfUnderstory = function(heightUnits) {
  var self = this.ptr;
  if (heightUnits && typeof heightUnits === 'object') heightUnits = heightUnits.ptr;
  return _emscripten_bind_SIGSurface_getHeightOfUnderstory_1(self, heightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getLiveFuelMoistureOfExtinction'] = SIGSurface.prototype.getLiveFuelMoistureOfExtinction = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getLiveFuelMoistureOfExtinction_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMidflameWindspeed'] = SIGSurface.prototype.getMidflameWindspeed = function(windSpeedUnits) {
  var self = this.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  return _emscripten_bind_SIGSurface_getMidflameWindspeed_1(self, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureDeadAggregateValue'] = SIGSurface.prototype.getMoistureDeadAggregateValue = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureDeadAggregateValue_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureHundredHour'] = SIGSurface.prototype.getMoistureHundredHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureHundredHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureLiveAggregateValue'] = SIGSurface.prototype.getMoistureLiveAggregateValue = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureLiveAggregateValue_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureLiveHerbaceous'] = SIGSurface.prototype.getMoistureLiveHerbaceous = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureLiveHerbaceous_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureLiveWoody'] = SIGSurface.prototype.getMoistureLiveWoody = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureLiveWoody_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureOneHour'] = SIGSurface.prototype.getMoistureOneHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureOneHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioHundredHourByIndex'] = SIGSurface.prototype.getMoistureScenarioHundredHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioHundredHourByName'] = SIGSurface.prototype.getMoistureScenarioHundredHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioHundredHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioLiveHerbaceousByIndex'] = SIGSurface.prototype.getMoistureScenarioLiveHerbaceousByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioLiveHerbaceousByName'] = SIGSurface.prototype.getMoistureScenarioLiveHerbaceousByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioLiveHerbaceousByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioLiveWoodyByIndex'] = SIGSurface.prototype.getMoistureScenarioLiveWoodyByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioLiveWoodyByName'] = SIGSurface.prototype.getMoistureScenarioLiveWoodyByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioLiveWoodyByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioOneHourByIndex'] = SIGSurface.prototype.getMoistureScenarioOneHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioOneHourByName'] = SIGSurface.prototype.getMoistureScenarioOneHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioOneHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioTenHourByIndex'] = SIGSurface.prototype.getMoistureScenarioTenHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioTenHourByName'] = SIGSurface.prototype.getMoistureScenarioTenHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureScenarioTenHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureTenHour'] = SIGSurface.prototype.getMoistureTenHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getMoistureTenHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getOverstoryBasalArea'] = SIGSurface.prototype.getOverstoryBasalArea = function(basalAreaUnits) {
  var self = this.ptr;
  if (basalAreaUnits && typeof basalAreaUnits === 'object') basalAreaUnits = basalAreaUnits.ptr;
  return _emscripten_bind_SIGSurface_getOverstoryBasalArea_1(self, basalAreaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberryCoverage'] = SIGSurface.prototype.getPalmettoGallberryCoverage = function(coverUnits) {
  var self = this.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberryCoverage_1(self, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberryHeatOfCombustionDead'] = SIGSurface.prototype.getPalmettoGallberryHeatOfCombustionDead = function(heatOfCombustionUnits) {
  var self = this.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionDead_1(self, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberryHeatOfCombustionLive'] = SIGSurface.prototype.getPalmettoGallberryHeatOfCombustionLive = function(heatOfCombustionUnits) {
  var self = this.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberryHeatOfCombustionLive_1(self, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberryMoistureOfExtinctionDead'] = SIGSurface.prototype.getPalmettoGallberryMoistureOfExtinctionDead = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberryMoistureOfExtinctionDead_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyDeadFineFuelLoad'] = SIGSurface.prototype.getPalmettoGallberyDeadFineFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFineFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyDeadFoliageLoad'] = SIGSurface.prototype.getPalmettoGallberyDeadFoliageLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyDeadFoliageLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyDeadMediumFuelLoad'] = SIGSurface.prototype.getPalmettoGallberyDeadMediumFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyDeadMediumFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyFuelBedDepth'] = SIGSurface.prototype.getPalmettoGallberyFuelBedDepth = function(depthUnits) {
  var self = this.ptr;
  if (depthUnits && typeof depthUnits === 'object') depthUnits = depthUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyFuelBedDepth_1(self, depthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyLitterLoad'] = SIGSurface.prototype.getPalmettoGallberyLitterLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyLitterLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyLiveFineFuelLoad'] = SIGSurface.prototype.getPalmettoGallberyLiveFineFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFineFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyLiveFoliageLoad'] = SIGSurface.prototype.getPalmettoGallberyLiveFoliageLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyLiveFoliageLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getPalmettoGallberyLiveMediumFuelLoad'] = SIGSurface.prototype.getPalmettoGallberyLiveMediumFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getPalmettoGallberyLiveMediumFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getReactionIntensity'] = SIGSurface.prototype.getReactionIntensity = function(reactiontionIntensityUnits) {
  var self = this.ptr;
  if (reactiontionIntensityUnits && typeof reactiontionIntensityUnits === 'object') reactiontionIntensityUnits = reactiontionIntensityUnits.ptr;
  return _emscripten_bind_SIGSurface_getReactionIntensity_1(self, reactiontionIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getResidenceTime'] = SIGSurface.prototype.getResidenceTime = function(timeUnits) {
  var self = this.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  return _emscripten_bind_SIGSurface_getResidenceTime_1(self, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSlope'] = SIGSurface.prototype.getSlope = function(slopeUnits) {
  var self = this.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  return _emscripten_bind_SIGSurface_getSlope_1(self, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSlopeFactor'] = SIGSurface.prototype.getSlopeFactor = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getSlopeFactor_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSpreadDistance'] = SIGSurface.prototype.getSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSpreadDistanceInDirectionOfInterest'] = SIGSurface.prototype.getSpreadDistanceInDirectionOfInterest = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGSurface_getSpreadDistanceInDirectionOfInterest_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSpreadRate'] = SIGSurface.prototype.getSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGSurface_getSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSpreadRateInDirectionOfInterest'] = SIGSurface.prototype.getSpreadRateInDirectionOfInterest = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGSurface_getSpreadRateInDirectionOfInterest_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getSurfaceFireReactionIntensityForLifeState'] = SIGSurface.prototype.getSurfaceFireReactionIntensityForLifeState = function(lifeState) {
  var self = this.ptr;
  if (lifeState && typeof lifeState === 'object') lifeState = lifeState.ptr;
  return _emscripten_bind_SIGSurface_getSurfaceFireReactionIntensityForLifeState_1(self, lifeState);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getTotalLiveFuelLoad'] = SIGSurface.prototype.getTotalLiveFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getTotalLiveFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getTotalDeadFuelLoad'] = SIGSurface.prototype.getTotalDeadFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getTotalDeadFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getTotalDeadHerbaceousFuelLoad'] = SIGSurface.prototype.getTotalDeadHerbaceousFuelLoad = function(loadingUnits) {
  var self = this.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGSurface_getTotalDeadHerbaceousFuelLoad_1(self, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindDirection'] = SIGSurface.prototype.getWindDirection = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getWindDirection_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getWindSpeed'] = SIGSurface.prototype.getWindSpeed = function(windSpeedUnits, windHeightInputMode) {
  var self = this.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  return _emscripten_bind_SIGSurface_getWindSpeed_2(self, windSpeedUnits, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getAspenFuelModelNumber'] = SIGSurface.prototype.getAspenFuelModelNumber = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getAspenFuelModelNumber_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelModelNumber'] = SIGSurface.prototype.getFuelModelNumber = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getFuelModelNumber_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioIndexByName'] = SIGSurface.prototype.getMoistureScenarioIndexByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return _emscripten_bind_SIGSurface_getMoistureScenarioIndexByName_1(self, name);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getNumberOfMoistureScenarios'] = SIGSurface.prototype.getNumberOfMoistureScenarios = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSurface_getNumberOfMoistureScenarios_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelCode'] = SIGSurface.prototype.getFuelCode = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGSurface_getFuelCode_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getFuelName'] = SIGSurface.prototype.getFuelName = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGSurface_getFuelName_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioDescriptionByIndex'] = SIGSurface.prototype.getMoistureScenarioDescriptionByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioDescriptionByName'] = SIGSurface.prototype.getMoistureScenarioDescriptionByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return UTF8ToString(_emscripten_bind_SIGSurface_getMoistureScenarioDescriptionByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['getMoistureScenarioNameByIndex'] = SIGSurface.prototype.getMoistureScenarioNameByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGSurface_getMoistureScenarioNameByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['doSurfaceRun'] = SIGSurface.prototype.doSurfaceRun = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSurface_doSurfaceRun_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['doSurfaceRunInDirectionOfInterest'] = SIGSurface.prototype.doSurfaceRunInDirectionOfInterest = function(directionOfInterest, directionMode) {
  var self = this.ptr;
  if (directionOfInterest && typeof directionOfInterest === 'object') directionOfInterest = directionOfInterest.ptr;
  if (directionMode && typeof directionMode === 'object') directionMode = directionMode.ptr;
  _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfInterest_2(self, directionOfInterest, directionMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['doSurfaceRunInDirectionOfMaxSpread'] = SIGSurface.prototype.doSurfaceRunInDirectionOfMaxSpread = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSurface_doSurfaceRunInDirectionOfMaxSpread_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['initializeMembers'] = SIGSurface.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSurface_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAgeOfRough'] = SIGSurface.prototype.setAgeOfRough = function(ageOfRough) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  _emscripten_bind_SIGSurface_setAgeOfRough_1(self, ageOfRough);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAspect'] = SIGSurface.prototype.setAspect = function(aspect) {
  var self = this.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  _emscripten_bind_SIGSurface_setAspect_1(self, aspect);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAspenCuringLevel'] = SIGSurface.prototype.setAspenCuringLevel = function(aspenCuringLevel, curingLevelUnits) {
  var self = this.ptr;
  if (aspenCuringLevel && typeof aspenCuringLevel === 'object') aspenCuringLevel = aspenCuringLevel.ptr;
  if (curingLevelUnits && typeof curingLevelUnits === 'object') curingLevelUnits = curingLevelUnits.ptr;
  _emscripten_bind_SIGSurface_setAspenCuringLevel_2(self, aspenCuringLevel, curingLevelUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAspenDBH'] = SIGSurface.prototype.setAspenDBH = function(dbh, dbhUnits) {
  var self = this.ptr;
  if (dbh && typeof dbh === 'object') dbh = dbh.ptr;
  if (dbhUnits && typeof dbhUnits === 'object') dbhUnits = dbhUnits.ptr;
  _emscripten_bind_SIGSurface_setAspenDBH_2(self, dbh, dbhUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAspenFireSeverity'] = SIGSurface.prototype.setAspenFireSeverity = function(aspenFireSeverity) {
  var self = this.ptr;
  if (aspenFireSeverity && typeof aspenFireSeverity === 'object') aspenFireSeverity = aspenFireSeverity.ptr;
  _emscripten_bind_SIGSurface_setAspenFireSeverity_1(self, aspenFireSeverity);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setAspenFuelModelNumber'] = SIGSurface.prototype.setAspenFuelModelNumber = function(aspenFuelModelNumber) {
  var self = this.ptr;
  if (aspenFuelModelNumber && typeof aspenFuelModelNumber === 'object') aspenFuelModelNumber = aspenFuelModelNumber.ptr;
  _emscripten_bind_SIGSurface_setAspenFuelModelNumber_1(self, aspenFuelModelNumber);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setCanopyCover'] = SIGSurface.prototype.setCanopyCover = function(canopyCover, coverUnits) {
  var self = this.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  _emscripten_bind_SIGSurface_setCanopyCover_2(self, canopyCover, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setCanopyHeight'] = SIGSurface.prototype.setCanopyHeight = function(canopyHeight, canopyHeightUnits) {
  var self = this.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  _emscripten_bind_SIGSurface_setCanopyHeight_2(self, canopyHeight, canopyHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setChaparralFuelBedDepth'] = SIGSurface.prototype.setChaparralFuelBedDepth = function(chaparralFuelBedDepth, depthUnts) {
  var self = this.ptr;
  if (chaparralFuelBedDepth && typeof chaparralFuelBedDepth === 'object') chaparralFuelBedDepth = chaparralFuelBedDepth.ptr;
  if (depthUnts && typeof depthUnts === 'object') depthUnts = depthUnts.ptr;
  _emscripten_bind_SIGSurface_setChaparralFuelBedDepth_2(self, chaparralFuelBedDepth, depthUnts);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setChaparralFuelDeadLoadFraction'] = SIGSurface.prototype.setChaparralFuelDeadLoadFraction = function(chaparralFuelDeadLoadFraction) {
  var self = this.ptr;
  if (chaparralFuelDeadLoadFraction && typeof chaparralFuelDeadLoadFraction === 'object') chaparralFuelDeadLoadFraction = chaparralFuelDeadLoadFraction.ptr;
  _emscripten_bind_SIGSurface_setChaparralFuelDeadLoadFraction_1(self, chaparralFuelDeadLoadFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setChaparralFuelLoadInputMode'] = SIGSurface.prototype.setChaparralFuelLoadInputMode = function(fuelLoadInputMode) {
  var self = this.ptr;
  if (fuelLoadInputMode && typeof fuelLoadInputMode === 'object') fuelLoadInputMode = fuelLoadInputMode.ptr;
  _emscripten_bind_SIGSurface_setChaparralFuelLoadInputMode_1(self, fuelLoadInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setChaparralFuelType'] = SIGSurface.prototype.setChaparralFuelType = function(chaparralFuelType) {
  var self = this.ptr;
  if (chaparralFuelType && typeof chaparralFuelType === 'object') chaparralFuelType = chaparralFuelType.ptr;
  _emscripten_bind_SIGSurface_setChaparralFuelType_1(self, chaparralFuelType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setChaparralTotalFuelLoad'] = SIGSurface.prototype.setChaparralTotalFuelLoad = function(chaparralTotalFuelLoad, fuelLoadUnits) {
  var self = this.ptr;
  if (chaparralTotalFuelLoad && typeof chaparralTotalFuelLoad === 'object') chaparralTotalFuelLoad = chaparralTotalFuelLoad.ptr;
  if (fuelLoadUnits && typeof fuelLoadUnits === 'object') fuelLoadUnits = fuelLoadUnits.ptr;
  _emscripten_bind_SIGSurface_setChaparralTotalFuelLoad_2(self, chaparralTotalFuelLoad, fuelLoadUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setCrownRatio'] = SIGSurface.prototype.setCrownRatio = function(crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGSurface_setCrownRatio_2(self, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setDirectionOfInterest'] = SIGSurface.prototype.setDirectionOfInterest = function(directionOfInterest) {
  var self = this.ptr;
  if (directionOfInterest && typeof directionOfInterest === 'object') directionOfInterest = directionOfInterest.ptr;
  _emscripten_bind_SIGSurface_setDirectionOfInterest_1(self, directionOfInterest);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setElapsedTime'] = SIGSurface.prototype.setElapsedTime = function(elapsedTime, timeUnits) {
  var self = this.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  _emscripten_bind_SIGSurface_setElapsedTime_2(self, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setFirstFuelModelNumber'] = SIGSurface.prototype.setFirstFuelModelNumber = function(firstFuelModelNumber) {
  var self = this.ptr;
  if (firstFuelModelNumber && typeof firstFuelModelNumber === 'object') firstFuelModelNumber = firstFuelModelNumber.ptr;
  _emscripten_bind_SIGSurface_setFirstFuelModelNumber_1(self, firstFuelModelNumber);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setFuelModels'] = SIGSurface.prototype.setFuelModels = function(fuelModels) {
  var self = this.ptr;
  if (fuelModels && typeof fuelModels === 'object') fuelModels = fuelModels.ptr;
  _emscripten_bind_SIGSurface_setFuelModels_1(self, fuelModels);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setHeightOfUnderstory'] = SIGSurface.prototype.setHeightOfUnderstory = function(heightOfUnderstory, heightUnits) {
  var self = this.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  if (heightUnits && typeof heightUnits === 'object') heightUnits = heightUnits.ptr;
  _emscripten_bind_SIGSurface_setHeightOfUnderstory_2(self, heightOfUnderstory, heightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setIsUsingChaparral'] = SIGSurface.prototype.setIsUsingChaparral = function(isUsingChaparral) {
  var self = this.ptr;
  if (isUsingChaparral && typeof isUsingChaparral === 'object') isUsingChaparral = isUsingChaparral.ptr;
  _emscripten_bind_SIGSurface_setIsUsingChaparral_1(self, isUsingChaparral);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setIsUsingPalmettoGallberry'] = SIGSurface.prototype.setIsUsingPalmettoGallberry = function(isUsingPalmettoGallberry) {
  var self = this.ptr;
  if (isUsingPalmettoGallberry && typeof isUsingPalmettoGallberry === 'object') isUsingPalmettoGallberry = isUsingPalmettoGallberry.ptr;
  _emscripten_bind_SIGSurface_setIsUsingPalmettoGallberry_1(self, isUsingPalmettoGallberry);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setIsUsingWesternAspen'] = SIGSurface.prototype.setIsUsingWesternAspen = function(isUsingWesternAspen) {
  var self = this.ptr;
  if (isUsingWesternAspen && typeof isUsingWesternAspen === 'object') isUsingWesternAspen = isUsingWesternAspen.ptr;
  _emscripten_bind_SIGSurface_setIsUsingWesternAspen_1(self, isUsingWesternAspen);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureDeadAggregate'] = SIGSurface.prototype.setMoistureDeadAggregate = function(moistureDead, moistureUnits) {
  var self = this.ptr;
  if (moistureDead && typeof moistureDead === 'object') moistureDead = moistureDead.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureDeadAggregate_2(self, moistureDead, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureHundredHour'] = SIGSurface.prototype.setMoistureHundredHour = function(moistureHundredHour, moistureUnits) {
  var self = this.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureHundredHour_2(self, moistureHundredHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureInputMode'] = SIGSurface.prototype.setMoistureInputMode = function(moistureInputMode) {
  var self = this.ptr;
  if (moistureInputMode && typeof moistureInputMode === 'object') moistureInputMode = moistureInputMode.ptr;
  _emscripten_bind_SIGSurface_setMoistureInputMode_1(self, moistureInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureLiveAggregate'] = SIGSurface.prototype.setMoistureLiveAggregate = function(moistureLive, moistureUnits) {
  var self = this.ptr;
  if (moistureLive && typeof moistureLive === 'object') moistureLive = moistureLive.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureLiveAggregate_2(self, moistureLive, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureLiveHerbaceous'] = SIGSurface.prototype.setMoistureLiveHerbaceous = function(moistureLiveHerbaceous, moistureUnits) {
  var self = this.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureLiveHerbaceous_2(self, moistureLiveHerbaceous, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureLiveWoody'] = SIGSurface.prototype.setMoistureLiveWoody = function(moistureLiveWoody, moistureUnits) {
  var self = this.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureLiveWoody_2(self, moistureLiveWoody, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureOneHour'] = SIGSurface.prototype.setMoistureOneHour = function(moistureOneHour, moistureUnits) {
  var self = this.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureOneHour_2(self, moistureOneHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureScenarios'] = SIGSurface.prototype.setMoistureScenarios = function(moistureScenarios) {
  var self = this.ptr;
  if (moistureScenarios && typeof moistureScenarios === 'object') moistureScenarios = moistureScenarios.ptr;
  _emscripten_bind_SIGSurface_setMoistureScenarios_1(self, moistureScenarios);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setMoistureTenHour'] = SIGSurface.prototype.setMoistureTenHour = function(moistureTenHour, moistureUnits) {
  var self = this.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGSurface_setMoistureTenHour_2(self, moistureTenHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setOverstoryBasalArea'] = SIGSurface.prototype.setOverstoryBasalArea = function(overstoryBasalArea, basalAreaUnits) {
  var self = this.ptr;
  if (overstoryBasalArea && typeof overstoryBasalArea === 'object') overstoryBasalArea = overstoryBasalArea.ptr;
  if (basalAreaUnits && typeof basalAreaUnits === 'object') basalAreaUnits = basalAreaUnits.ptr;
  _emscripten_bind_SIGSurface_setOverstoryBasalArea_2(self, overstoryBasalArea, basalAreaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setPalmettoCoverage'] = SIGSurface.prototype.setPalmettoCoverage = function(palmettoCoverage, coverUnits) {
  var self = this.ptr;
  if (palmettoCoverage && typeof palmettoCoverage === 'object') palmettoCoverage = palmettoCoverage.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  _emscripten_bind_SIGSurface_setPalmettoCoverage_2(self, palmettoCoverage, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setSecondFuelModelNumber'] = SIGSurface.prototype.setSecondFuelModelNumber = function(secondFuelModelNumber) {
  var self = this.ptr;
  if (secondFuelModelNumber && typeof secondFuelModelNumber === 'object') secondFuelModelNumber = secondFuelModelNumber.ptr;
  _emscripten_bind_SIGSurface_setSecondFuelModelNumber_1(self, secondFuelModelNumber);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setSlope'] = SIGSurface.prototype.setSlope = function(slope, slopeUnits) {
  var self = this.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  _emscripten_bind_SIGSurface_setSlope_2(self, slope, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setSurfaceFireSpreadDirectionMode'] = SIGSurface.prototype.setSurfaceFireSpreadDirectionMode = function(directionMode) {
  var self = this.ptr;
  if (directionMode && typeof directionMode === 'object') directionMode = directionMode.ptr;
  _emscripten_bind_SIGSurface_setSurfaceFireSpreadDirectionMode_1(self, directionMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setSurfaceRunInDirectionOf'] = SIGSurface.prototype.setSurfaceRunInDirectionOf = function(surfaceRunInDirectionOf) {
  var self = this.ptr;
  if (surfaceRunInDirectionOf && typeof surfaceRunInDirectionOf === 'object') surfaceRunInDirectionOf = surfaceRunInDirectionOf.ptr;
  _emscripten_bind_SIGSurface_setSurfaceRunInDirectionOf_1(self, surfaceRunInDirectionOf);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setTwoFuelModelsFirstFuelModelCoverage'] = SIGSurface.prototype.setTwoFuelModelsFirstFuelModelCoverage = function(firstFuelModelCoverage, coverUnits) {
  var self = this.ptr;
  if (firstFuelModelCoverage && typeof firstFuelModelCoverage === 'object') firstFuelModelCoverage = firstFuelModelCoverage.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  _emscripten_bind_SIGSurface_setTwoFuelModelsFirstFuelModelCoverage_2(self, firstFuelModelCoverage, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setTwoFuelModelsMethod'] = SIGSurface.prototype.setTwoFuelModelsMethod = function(twoFuelModelsMethod) {
  var self = this.ptr;
  if (twoFuelModelsMethod && typeof twoFuelModelsMethod === 'object') twoFuelModelsMethod = twoFuelModelsMethod.ptr;
  _emscripten_bind_SIGSurface_setTwoFuelModelsMethod_1(self, twoFuelModelsMethod);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setUserProvidedWindAdjustmentFactor'] = SIGSurface.prototype.setUserProvidedWindAdjustmentFactor = function(userProvidedWindAdjustmentFactor) {
  var self = this.ptr;
  if (userProvidedWindAdjustmentFactor && typeof userProvidedWindAdjustmentFactor === 'object') userProvidedWindAdjustmentFactor = userProvidedWindAdjustmentFactor.ptr;
  _emscripten_bind_SIGSurface_setUserProvidedWindAdjustmentFactor_1(self, userProvidedWindAdjustmentFactor);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setWindAdjustmentFactorCalculationMethod'] = SIGSurface.prototype.setWindAdjustmentFactorCalculationMethod = function(windAdjustmentFactorCalculationMethod) {
  var self = this.ptr;
  if (windAdjustmentFactorCalculationMethod && typeof windAdjustmentFactorCalculationMethod === 'object') windAdjustmentFactorCalculationMethod = windAdjustmentFactorCalculationMethod.ptr;
  _emscripten_bind_SIGSurface_setWindAdjustmentFactorCalculationMethod_1(self, windAdjustmentFactorCalculationMethod);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setWindAndSpreadOrientationMode'] = SIGSurface.prototype.setWindAndSpreadOrientationMode = function(windAndSpreadOrientationMode) {
  var self = this.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  _emscripten_bind_SIGSurface_setWindAndSpreadOrientationMode_1(self, windAndSpreadOrientationMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setWindDirection'] = SIGSurface.prototype.setWindDirection = function(windDirection) {
  var self = this.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  _emscripten_bind_SIGSurface_setWindDirection_1(self, windDirection);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setWindHeightInputMode'] = SIGSurface.prototype.setWindHeightInputMode = function(windHeightInputMode) {
  var self = this.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  _emscripten_bind_SIGSurface_setWindHeightInputMode_1(self, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setWindSpeed'] = SIGSurface.prototype.setWindSpeed = function(windSpeed, windSpeedUnits) {
  var self = this.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGSurface_setWindSpeed_2(self, windSpeed, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['updateSurfaceInputs'] = SIGSurface.prototype.updateSurfaceInputs = function(fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGSurface_updateSurfaceInputs_21(self, fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['updateSurfaceInputsForPalmettoGallbery'] = SIGSurface.prototype.updateSurfaceInputsForPalmettoGallbery = function(moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, ageOfRough, heightOfUnderstory, palmettoCoverage, overstoryBasalArea, basalAreaUnits, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  if (palmettoCoverage && typeof palmettoCoverage === 'object') palmettoCoverage = palmettoCoverage.ptr;
  if (overstoryBasalArea && typeof overstoryBasalArea === 'object') overstoryBasalArea = overstoryBasalArea.ptr;
  if (basalAreaUnits && typeof basalAreaUnits === 'object') basalAreaUnits = basalAreaUnits.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGSurface_updateSurfaceInputsForPalmettoGallbery_25(self, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, ageOfRough, heightOfUnderstory, palmettoCoverage, overstoryBasalArea, basalAreaUnits, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['updateSurfaceInputsForTwoFuelModels'] = SIGSurface.prototype.updateSurfaceInputsForTwoFuelModels = function(firstFuelModelNumber, secondFuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, firstFuelModelCoverage, firstFuelModelCoverageUnits, twoFuelModelsMethod, slope, slopeUnits, aspect, canopyCover, canopyFractionUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnitso) {
  var self = this.ptr;
  if (firstFuelModelNumber && typeof firstFuelModelNumber === 'object') firstFuelModelNumber = firstFuelModelNumber.ptr;
  if (secondFuelModelNumber && typeof secondFuelModelNumber === 'object') secondFuelModelNumber = secondFuelModelNumber.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (firstFuelModelCoverage && typeof firstFuelModelCoverage === 'object') firstFuelModelCoverage = firstFuelModelCoverage.ptr;
  if (firstFuelModelCoverageUnits && typeof firstFuelModelCoverageUnits === 'object') firstFuelModelCoverageUnits = firstFuelModelCoverageUnits.ptr;
  if (twoFuelModelsMethod && typeof twoFuelModelsMethod === 'object') twoFuelModelsMethod = twoFuelModelsMethod.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (canopyFractionUnits && typeof canopyFractionUnits === 'object') canopyFractionUnits = canopyFractionUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnitso && typeof crownRatioUnitso === 'object') crownRatioUnitso = crownRatioUnitso.ptr;
  _emscripten_bind_SIGSurface_updateSurfaceInputsForTwoFuelModels_25(self, firstFuelModelNumber, secondFuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, firstFuelModelCoverage, firstFuelModelCoverageUnits, twoFuelModelsMethod, slope, slopeUnits, aspect, canopyCover, canopyFractionUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnitso);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['updateSurfaceInputsForWesternAspen'] = SIGSurface.prototype.updateSurfaceInputsForWesternAspen = function(aspenFuelModelNumber, aspenCuringLevel, curingLevelUnits, aspenFireSeverity, dbh, dbhUnits, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (aspenFuelModelNumber && typeof aspenFuelModelNumber === 'object') aspenFuelModelNumber = aspenFuelModelNumber.ptr;
  if (aspenCuringLevel && typeof aspenCuringLevel === 'object') aspenCuringLevel = aspenCuringLevel.ptr;
  if (curingLevelUnits && typeof curingLevelUnits === 'object') curingLevelUnits = curingLevelUnits.ptr;
  if (aspenFireSeverity && typeof aspenFireSeverity === 'object') aspenFireSeverity = aspenFireSeverity.ptr;
  if (dbh && typeof dbh === 'object') dbh = dbh.ptr;
  if (dbhUnits && typeof dbhUnits === 'object') dbhUnits = dbhUnits.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGSurface_updateSurfaceInputsForWesternAspen_26(self, aspenFuelModelNumber, aspenCuringLevel, curingLevelUnits, aspenFireSeverity, dbh, dbhUnits, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['setFuelModelNumber'] = SIGSurface.prototype.setFuelModelNumber = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  _emscripten_bind_SIGSurface_setFuelModelNumber_1(self, fuelModelNumber);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSurface.prototype['__destroy__'] = SIGSurface.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSurface___destroy___0(self);
};

// Interface: PalmettoGallberry

/** @suppress {undefinedVars, duplicate} @this{Object} */
function PalmettoGallberry() {
  this.ptr = _emscripten_bind_PalmettoGallberry_PalmettoGallberry_0();
  getCache(PalmettoGallberry)[this.ptr] = this;
};

PalmettoGallberry.prototype = Object.create(WrapperObject.prototype);
PalmettoGallberry.prototype.constructor = PalmettoGallberry;
PalmettoGallberry.prototype.__class__ = PalmettoGallberry;
PalmettoGallberry.__cache__ = {};
Module['PalmettoGallberry'] = PalmettoGallberry;
/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['initializeMembers'] = PalmettoGallberry.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_PalmettoGallberry_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyDeadFineFuelLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyDeadFineFuelLoad = function(ageOfRough, heightOfUnderstory) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFineFuelLoad_2(self, ageOfRough, heightOfUnderstory);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyDeadFoliageLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyDeadFoliageLoad = function(ageOfRough, palmettoCoverage) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (palmettoCoverage && typeof palmettoCoverage === 'object') palmettoCoverage = palmettoCoverage.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadFoliageLoad_2(self, ageOfRough, palmettoCoverage);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyDeadMediumFuelLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyDeadMediumFuelLoad = function(ageOfRough, palmettoCoverage) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (palmettoCoverage && typeof palmettoCoverage === 'object') palmettoCoverage = palmettoCoverage.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyDeadMediumFuelLoad_2(self, ageOfRough, palmettoCoverage);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyFuelBedDepth'] = PalmettoGallberry.prototype.calculatePalmettoGallberyFuelBedDepth = function(heightOfUnderstory) {
  var self = this.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyFuelBedDepth_1(self, heightOfUnderstory);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyLitterLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyLitterLoad = function(ageOfRough, overstoryBasalArea) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (overstoryBasalArea && typeof overstoryBasalArea === 'object') overstoryBasalArea = overstoryBasalArea.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLitterLoad_2(self, ageOfRough, overstoryBasalArea);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyLiveFineFuelLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyLiveFineFuelLoad = function(ageOfRough, heightOfUnderstory) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFineFuelLoad_2(self, ageOfRough, heightOfUnderstory);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyLiveFoliageLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyLiveFoliageLoad = function(ageOfRough, palmettoCoverage, heightOfUnderstory) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (palmettoCoverage && typeof palmettoCoverage === 'object') palmettoCoverage = palmettoCoverage.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveFoliageLoad_3(self, ageOfRough, palmettoCoverage, heightOfUnderstory);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['calculatePalmettoGallberyLiveMediumFuelLoad'] = PalmettoGallberry.prototype.calculatePalmettoGallberyLiveMediumFuelLoad = function(ageOfRough, heightOfUnderstory) {
  var self = this.ptr;
  if (ageOfRough && typeof ageOfRough === 'object') ageOfRough = ageOfRough.ptr;
  if (heightOfUnderstory && typeof heightOfUnderstory === 'object') heightOfUnderstory = heightOfUnderstory.ptr;
  return _emscripten_bind_PalmettoGallberry_calculatePalmettoGallberyLiveMediumFuelLoad_2(self, ageOfRough, heightOfUnderstory);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getHeatOfCombustionDead'] = PalmettoGallberry.prototype.getHeatOfCombustionDead = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getHeatOfCombustionDead_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getHeatOfCombustionLive'] = PalmettoGallberry.prototype.getHeatOfCombustionLive = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getHeatOfCombustionLive_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getMoistureOfExtinctionDead'] = PalmettoGallberry.prototype.getMoistureOfExtinctionDead = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getMoistureOfExtinctionDead_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyDeadFineFuelLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyDeadFineFuelLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFineFuelLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyDeadFoliageLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyDeadFoliageLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadFoliageLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyDeadMediumFuelLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyDeadMediumFuelLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyDeadMediumFuelLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyFuelBedDepth'] = PalmettoGallberry.prototype.getPalmettoGallberyFuelBedDepth = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyFuelBedDepth_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyLitterLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyLitterLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLitterLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyLiveFineFuelLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyLiveFineFuelLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFineFuelLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyLiveFoliageLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyLiveFoliageLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveFoliageLoad_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['getPalmettoGallberyLiveMediumFuelLoad'] = PalmettoGallberry.prototype.getPalmettoGallberyLiveMediumFuelLoad = function() {
  var self = this.ptr;
  return _emscripten_bind_PalmettoGallberry_getPalmettoGallberyLiveMediumFuelLoad_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
PalmettoGallberry.prototype['__destroy__'] = PalmettoGallberry.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_PalmettoGallberry___destroy___0(self);
};

// Interface: WesternAspen

/** @suppress {undefinedVars, duplicate} @this{Object} */
function WesternAspen() {
  this.ptr = _emscripten_bind_WesternAspen_WesternAspen_0();
  getCache(WesternAspen)[this.ptr] = this;
};

WesternAspen.prototype = Object.create(WrapperObject.prototype);
WesternAspen.prototype.constructor = WesternAspen;
WesternAspen.prototype.__class__ = WesternAspen;
WesternAspen.__cache__ = {};
Module['WesternAspen'] = WesternAspen;
/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['initializeMembers'] = WesternAspen.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_WesternAspen_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['calculateAspenMortality'] = WesternAspen.prototype.calculateAspenMortality = function(severity, flameLength, DBH) {
  var self = this.ptr;
  if (severity && typeof severity === 'object') severity = severity.ptr;
  if (flameLength && typeof flameLength === 'object') flameLength = flameLength.ptr;
  if (DBH && typeof DBH === 'object') DBH = DBH.ptr;
  return _emscripten_bind_WesternAspen_calculateAspenMortality_3(self, severity, flameLength, DBH);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenFuelBedDepth'] = WesternAspen.prototype.getAspenFuelBedDepth = function(typeIndex) {
  var self = this.ptr;
  if (typeIndex && typeof typeIndex === 'object') typeIndex = typeIndex.ptr;
  return _emscripten_bind_WesternAspen_getAspenFuelBedDepth_1(self, typeIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenHeatOfCombustionDead'] = WesternAspen.prototype.getAspenHeatOfCombustionDead = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenHeatOfCombustionDead_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenHeatOfCombustionLive'] = WesternAspen.prototype.getAspenHeatOfCombustionLive = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenHeatOfCombustionLive_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenLoadDeadOneHour'] = WesternAspen.prototype.getAspenLoadDeadOneHour = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenLoadDeadOneHour_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenLoadDeadTenHour'] = WesternAspen.prototype.getAspenLoadDeadTenHour = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenLoadDeadTenHour_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenLoadLiveHerbaceous'] = WesternAspen.prototype.getAspenLoadLiveHerbaceous = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenLoadLiveHerbaceous_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenLoadLiveWoody'] = WesternAspen.prototype.getAspenLoadLiveWoody = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenLoadLiveWoody_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenMoistureOfExtinctionDead'] = WesternAspen.prototype.getAspenMoistureOfExtinctionDead = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenMoistureOfExtinctionDead_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenMortality'] = WesternAspen.prototype.getAspenMortality = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenMortality_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenSavrDeadOneHour'] = WesternAspen.prototype.getAspenSavrDeadOneHour = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenSavrDeadOneHour_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenSavrDeadTenHour'] = WesternAspen.prototype.getAspenSavrDeadTenHour = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenSavrDeadTenHour_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenSavrLiveHerbaceous'] = WesternAspen.prototype.getAspenSavrLiveHerbaceous = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenSavrLiveHerbaceous_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['getAspenSavrLiveWoody'] = WesternAspen.prototype.getAspenSavrLiveWoody = function() {
  var self = this.ptr;
  return _emscripten_bind_WesternAspen_getAspenSavrLiveWoody_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
WesternAspen.prototype['__destroy__'] = WesternAspen.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_WesternAspen___destroy___0(self);
};

// Interface: SIGCrown

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGCrown(fuelModels) {
  if (fuelModels && typeof fuelModels === 'object') fuelModels = fuelModels.ptr;
  this.ptr = _emscripten_bind_SIGCrown_SIGCrown_1(fuelModels);
  getCache(SIGCrown)[this.ptr] = this;
};

SIGCrown.prototype = Object.create(WrapperObject.prototype);
SIGCrown.prototype.constructor = SIGCrown;
SIGCrown.prototype.__class__ = SIGCrown;
SIGCrown.__cache__ = {};
Module['SIGCrown'] = SIGCrown;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFireType'] = SIGCrown.prototype.getFireType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getFireType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getIsMoistureScenarioDefinedByIndex'] = SIGCrown.prototype.getIsMoistureScenarioDefinedByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return !!(_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getIsMoistureScenarioDefinedByName'] = SIGCrown.prototype.getIsMoistureScenarioDefinedByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return !!(_emscripten_bind_SIGCrown_getIsMoistureScenarioDefinedByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['isAllFuelLoadZero'] = SIGCrown.prototype.isAllFuelLoadZero = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGCrown_isAllFuelLoadZero_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['isFuelDynamic'] = SIGCrown.prototype.isFuelDynamic = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGCrown_isFuelDynamic_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['isFuelModelDefined'] = SIGCrown.prototype.isFuelModelDefined = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGCrown_isFuelModelDefined_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['isFuelModelReserved'] = SIGCrown.prototype.isFuelModelReserved = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return !!(_emscripten_bind_SIGCrown_isFuelModelReserved_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCurrentMoistureScenarioByIndex'] = SIGCrown.prototype.setCurrentMoistureScenarioByIndex = function(moistureScenarioIndex) {
  var self = this.ptr;
  if (moistureScenarioIndex && typeof moistureScenarioIndex === 'object') moistureScenarioIndex = moistureScenarioIndex.ptr;
  return !!(_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByIndex_1(self, moistureScenarioIndex));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCurrentMoistureScenarioByName'] = SIGCrown.prototype.setCurrentMoistureScenarioByName = function(moistureScenarioName) {
  var self = this.ptr;
  ensureCache.prepare();
  if (moistureScenarioName && typeof moistureScenarioName === 'object') moistureScenarioName = moistureScenarioName.ptr;
  else moistureScenarioName = ensureString(moistureScenarioName);
  return !!(_emscripten_bind_SIGCrown_setCurrentMoistureScenarioByName_1(self, moistureScenarioName));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getAspect'] = SIGCrown.prototype.getAspect = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getAspect_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCanopyBaseHeight'] = SIGCrown.prototype.getCanopyBaseHeight = function(canopyHeightUnits) {
  var self = this.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  return _emscripten_bind_SIGCrown_getCanopyBaseHeight_1(self, canopyHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCanopyBulkDensity'] = SIGCrown.prototype.getCanopyBulkDensity = function(canopyBulkDensityUnits) {
  var self = this.ptr;
  if (canopyBulkDensityUnits && typeof canopyBulkDensityUnits === 'object') canopyBulkDensityUnits = canopyBulkDensityUnits.ptr;
  return _emscripten_bind_SIGCrown_getCanopyBulkDensity_1(self, canopyBulkDensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCanopyCover'] = SIGCrown.prototype.getCanopyCover = function(canopyFractionUnits) {
  var self = this.ptr;
  if (canopyFractionUnits && typeof canopyFractionUnits === 'object') canopyFractionUnits = canopyFractionUnits.ptr;
  return _emscripten_bind_SIGCrown_getCanopyCover_1(self, canopyFractionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCanopyHeight'] = SIGCrown.prototype.getCanopyHeight = function(canopyHeighUnits) {
  var self = this.ptr;
  if (canopyHeighUnits && typeof canopyHeighUnits === 'object') canopyHeighUnits = canopyHeighUnits.ptr;
  return _emscripten_bind_SIGCrown_getCanopyHeight_1(self, canopyHeighUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCriticalOpenWindSpeed'] = SIGCrown.prototype.getCriticalOpenWindSpeed = function(speedUnits) {
  var self = this.ptr;
  if (speedUnits && typeof speedUnits === 'object') speedUnits = speedUnits.ptr;
  return _emscripten_bind_SIGCrown_getCriticalOpenWindSpeed_1(self, speedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownCriticalFireSpreadRate'] = SIGCrown.prototype.getCrownCriticalFireSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownCriticalFireSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownCriticalSurfaceFirelineIntensity'] = SIGCrown.prototype.getCrownCriticalSurfaceFirelineIntensity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFirelineIntensity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownCriticalSurfaceFlameLength'] = SIGCrown.prototype.getCrownCriticalSurfaceFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownCriticalSurfaceFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFireActiveRatio'] = SIGCrown.prototype.getCrownFireActiveRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getCrownFireActiveRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFireArea'] = SIGCrown.prototype.getCrownFireArea = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFireArea_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFirePerimeter'] = SIGCrown.prototype.getCrownFirePerimeter = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFirePerimeter_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownTransitionRatio'] = SIGCrown.prototype.getCrownTransitionRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getCrownTransitionRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFireLengthToWidthRatio'] = SIGCrown.prototype.getCrownFireLengthToWidthRatio = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getCrownFireLengthToWidthRatio_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFireSpreadDistance'] = SIGCrown.prototype.getCrownFireSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFireSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFireSpreadRate'] = SIGCrown.prototype.getCrownFireSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFireSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFirelineIntensity'] = SIGCrown.prototype.getCrownFirelineIntensity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFirelineIntensity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFlameLength'] = SIGCrown.prototype.getCrownFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownFractionBurned'] = SIGCrown.prototype.getCrownFractionBurned = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getCrownFractionBurned_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getCrownRatio'] = SIGCrown.prototype.getCrownRatio = function(crownRatioUnits) {
  var self = this.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  return _emscripten_bind_SIGCrown_getCrownRatio_1(self, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalFirelineIntesity'] = SIGCrown.prototype.getFinalFirelineIntesity = function(firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalFirelineIntesity_1(self, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalHeatPerUnitArea'] = SIGCrown.prototype.getFinalHeatPerUnitArea = function(heatPerUnitAreaUnits) {
  var self = this.ptr;
  if (heatPerUnitAreaUnits && typeof heatPerUnitAreaUnits === 'object') heatPerUnitAreaUnits = heatPerUnitAreaUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalHeatPerUnitArea_1(self, heatPerUnitAreaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalSpreadRate'] = SIGCrown.prototype.getFinalSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalSpreadDistance'] = SIGCrown.prototype.getFinalSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalFireArea'] = SIGCrown.prototype.getFinalFireArea = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalFireArea_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalFirePerimeter'] = SIGCrown.prototype.getFinalFirePerimeter = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalFirePerimeter_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelHeatOfCombustionDead'] = SIGCrown.prototype.getFuelHeatOfCombustionDead = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelHeatOfCombustionDead_2(self, fuelModelNumber, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelHeatOfCombustionLive'] = SIGCrown.prototype.getFuelHeatOfCombustionLive = function(fuelModelNumber, heatOfCombustionUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (heatOfCombustionUnits && typeof heatOfCombustionUnits === 'object') heatOfCombustionUnits = heatOfCombustionUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelHeatOfCombustionLive_2(self, fuelModelNumber, heatOfCombustionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelLoadHundredHour'] = SIGCrown.prototype.getFuelLoadHundredHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelLoadHundredHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelLoadLiveHerbaceous'] = SIGCrown.prototype.getFuelLoadLiveHerbaceous = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelLoadLiveHerbaceous_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelLoadLiveWoody'] = SIGCrown.prototype.getFuelLoadLiveWoody = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelLoadLiveWoody_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelLoadOneHour'] = SIGCrown.prototype.getFuelLoadOneHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelLoadOneHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelLoadTenHour'] = SIGCrown.prototype.getFuelLoadTenHour = function(fuelModelNumber, loadingUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (loadingUnits && typeof loadingUnits === 'object') loadingUnits = loadingUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelLoadTenHour_2(self, fuelModelNumber, loadingUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelMoistureOfExtinctionDead'] = SIGCrown.prototype.getFuelMoistureOfExtinctionDead = function(fuelModelNumber, moistureUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelMoistureOfExtinctionDead_2(self, fuelModelNumber, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelSavrLiveHerbaceous'] = SIGCrown.prototype.getFuelSavrLiveHerbaceous = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelSavrLiveHerbaceous_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelSavrLiveWoody'] = SIGCrown.prototype.getFuelSavrLiveWoody = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelSavrLiveWoody_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelSavrOneHour'] = SIGCrown.prototype.getFuelSavrOneHour = function(fuelModelNumber, savrUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (savrUnits && typeof savrUnits === 'object') savrUnits = savrUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelSavrOneHour_2(self, fuelModelNumber, savrUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelbedDepth'] = SIGCrown.prototype.getFuelbedDepth = function(fuelModelNumber, lengthUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getFuelbedDepth_2(self, fuelModelNumber, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureFoliar'] = SIGCrown.prototype.getMoistureFoliar = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureFoliar_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureHundredHour'] = SIGCrown.prototype.getMoistureHundredHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureHundredHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureLiveHerbaceous'] = SIGCrown.prototype.getMoistureLiveHerbaceous = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureLiveHerbaceous_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureLiveWoody'] = SIGCrown.prototype.getMoistureLiveWoody = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureLiveWoody_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureOneHour'] = SIGCrown.prototype.getMoistureOneHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureOneHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioHundredHourByIndex'] = SIGCrown.prototype.getMoistureScenarioHundredHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioHundredHourByName'] = SIGCrown.prototype.getMoistureScenarioHundredHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioHundredHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioLiveHerbaceousByIndex'] = SIGCrown.prototype.getMoistureScenarioLiveHerbaceousByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioLiveHerbaceousByName'] = SIGCrown.prototype.getMoistureScenarioLiveHerbaceousByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioLiveHerbaceousByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioLiveWoodyByIndex'] = SIGCrown.prototype.getMoistureScenarioLiveWoodyByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioLiveWoodyByName'] = SIGCrown.prototype.getMoistureScenarioLiveWoodyByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioLiveWoodyByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioOneHourByIndex'] = SIGCrown.prototype.getMoistureScenarioOneHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioOneHourByName'] = SIGCrown.prototype.getMoistureScenarioOneHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioOneHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioTenHourByIndex'] = SIGCrown.prototype.getMoistureScenarioTenHourByIndex = function(index, moistureUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByIndex_2(self, index, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioTenHourByName'] = SIGCrown.prototype.getMoistureScenarioTenHourByName = function(name, moistureUnits) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureScenarioTenHourByName_2(self, name, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureTenHour'] = SIGCrown.prototype.getMoistureTenHour = function(moistureUnits) {
  var self = this.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  return _emscripten_bind_SIGCrown_getMoistureTenHour_1(self, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getSlope'] = SIGCrown.prototype.getSlope = function(slopeUnits) {
  var self = this.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  return _emscripten_bind_SIGCrown_getSlope_1(self, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getSurfaceFireSpreadDistance'] = SIGCrown.prototype.getSurfaceFireSpreadDistance = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getSurfaceFireSpreadDistance_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getSurfaceFireSpreadRate'] = SIGCrown.prototype.getSurfaceFireSpreadRate = function(spreadRateUnits) {
  var self = this.ptr;
  if (spreadRateUnits && typeof spreadRateUnits === 'object') spreadRateUnits = spreadRateUnits.ptr;
  return _emscripten_bind_SIGCrown_getSurfaceFireSpreadRate_1(self, spreadRateUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getWindDirection'] = SIGCrown.prototype.getWindDirection = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getWindDirection_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getWindSpeed'] = SIGCrown.prototype.getWindSpeed = function(windSpeedUnits, windHeightInputMode) {
  var self = this.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  return _emscripten_bind_SIGCrown_getWindSpeed_2(self, windSpeedUnits, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelModelNumber'] = SIGCrown.prototype.getFuelModelNumber = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getFuelModelNumber_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioIndexByName'] = SIGCrown.prototype.getMoistureScenarioIndexByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return _emscripten_bind_SIGCrown_getMoistureScenarioIndexByName_1(self, name);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getNumberOfMoistureScenarios'] = SIGCrown.prototype.getNumberOfMoistureScenarios = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGCrown_getNumberOfMoistureScenarios_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelCode'] = SIGCrown.prototype.getFuelCode = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGCrown_getFuelCode_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFuelName'] = SIGCrown.prototype.getFuelName = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  return UTF8ToString(_emscripten_bind_SIGCrown_getFuelName_1(self, fuelModelNumber));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioDescriptionByIndex'] = SIGCrown.prototype.getMoistureScenarioDescriptionByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioDescriptionByName'] = SIGCrown.prototype.getMoistureScenarioDescriptionByName = function(name) {
  var self = this.ptr;
  ensureCache.prepare();
  if (name && typeof name === 'object') name = name.ptr;
  else name = ensureString(name);
  return UTF8ToString(_emscripten_bind_SIGCrown_getMoistureScenarioDescriptionByName_1(self, name));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getMoistureScenarioNameByIndex'] = SIGCrown.prototype.getMoistureScenarioNameByIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGCrown_getMoistureScenarioNameByIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['doCrownRun'] = SIGCrown.prototype.doCrownRun = function() {
  var self = this.ptr;
  _emscripten_bind_SIGCrown_doCrownRun_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['doCrownRunRothermel'] = SIGCrown.prototype.doCrownRunRothermel = function() {
  var self = this.ptr;
  _emscripten_bind_SIGCrown_doCrownRunRothermel_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['doCrownRunScottAndReinhardt'] = SIGCrown.prototype.doCrownRunScottAndReinhardt = function() {
  var self = this.ptr;
  _emscripten_bind_SIGCrown_doCrownRunScottAndReinhardt_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['initializeMembers'] = SIGCrown.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_SIGCrown_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setAspect'] = SIGCrown.prototype.setAspect = function(aspect) {
  var self = this.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  _emscripten_bind_SIGCrown_setAspect_1(self, aspect);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCanopyBaseHeight'] = SIGCrown.prototype.setCanopyBaseHeight = function(canopyBaseHeight, canopyHeightUnits) {
  var self = this.ptr;
  if (canopyBaseHeight && typeof canopyBaseHeight === 'object') canopyBaseHeight = canopyBaseHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  _emscripten_bind_SIGCrown_setCanopyBaseHeight_2(self, canopyBaseHeight, canopyHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCanopyBulkDensity'] = SIGCrown.prototype.setCanopyBulkDensity = function(canopyBulkDensity, densityUnits) {
  var self = this.ptr;
  if (canopyBulkDensity && typeof canopyBulkDensity === 'object') canopyBulkDensity = canopyBulkDensity.ptr;
  if (densityUnits && typeof densityUnits === 'object') densityUnits = densityUnits.ptr;
  _emscripten_bind_SIGCrown_setCanopyBulkDensity_2(self, canopyBulkDensity, densityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCanopyCover'] = SIGCrown.prototype.setCanopyCover = function(canopyCover, coverUnits) {
  var self = this.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  _emscripten_bind_SIGCrown_setCanopyCover_2(self, canopyCover, coverUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCanopyHeight'] = SIGCrown.prototype.setCanopyHeight = function(canopyHeight, canopyHeightUnits) {
  var self = this.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  _emscripten_bind_SIGCrown_setCanopyHeight_2(self, canopyHeight, canopyHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCrownRatio'] = SIGCrown.prototype.setCrownRatio = function(crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGCrown_setCrownRatio_2(self, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setFuelModelNumber'] = SIGCrown.prototype.setFuelModelNumber = function(fuelModelNumber) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  _emscripten_bind_SIGCrown_setFuelModelNumber_1(self, fuelModelNumber);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setCrownFireCalculationMethod'] = SIGCrown.prototype.setCrownFireCalculationMethod = function(CrownFireCalculationMethod) {
  var self = this.ptr;
  if (CrownFireCalculationMethod && typeof CrownFireCalculationMethod === 'object') CrownFireCalculationMethod = CrownFireCalculationMethod.ptr;
  _emscripten_bind_SIGCrown_setCrownFireCalculationMethod_1(self, CrownFireCalculationMethod);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setElapsedTime'] = SIGCrown.prototype.setElapsedTime = function(elapsedTime, timeUnits) {
  var self = this.ptr;
  if (elapsedTime && typeof elapsedTime === 'object') elapsedTime = elapsedTime.ptr;
  if (timeUnits && typeof timeUnits === 'object') timeUnits = timeUnits.ptr;
  _emscripten_bind_SIGCrown_setElapsedTime_2(self, elapsedTime, timeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setFuelModels'] = SIGCrown.prototype.setFuelModels = function(fuelModels) {
  var self = this.ptr;
  if (fuelModels && typeof fuelModels === 'object') fuelModels = fuelModels.ptr;
  _emscripten_bind_SIGCrown_setFuelModels_1(self, fuelModels);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureDeadAggregate'] = SIGCrown.prototype.setMoistureDeadAggregate = function(moistureDead, moistureUnits) {
  var self = this.ptr;
  if (moistureDead && typeof moistureDead === 'object') moistureDead = moistureDead.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureDeadAggregate_2(self, moistureDead, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureFoliar'] = SIGCrown.prototype.setMoistureFoliar = function(foliarMoisture, moistureUnits) {
  var self = this.ptr;
  if (foliarMoisture && typeof foliarMoisture === 'object') foliarMoisture = foliarMoisture.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureFoliar_2(self, foliarMoisture, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureHundredHour'] = SIGCrown.prototype.setMoistureHundredHour = function(moistureHundredHour, moistureUnits) {
  var self = this.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureHundredHour_2(self, moistureHundredHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureInputMode'] = SIGCrown.prototype.setMoistureInputMode = function(moistureInputMode) {
  var self = this.ptr;
  if (moistureInputMode && typeof moistureInputMode === 'object') moistureInputMode = moistureInputMode.ptr;
  _emscripten_bind_SIGCrown_setMoistureInputMode_1(self, moistureInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureLiveAggregate'] = SIGCrown.prototype.setMoistureLiveAggregate = function(moistureLive, moistureUnits) {
  var self = this.ptr;
  if (moistureLive && typeof moistureLive === 'object') moistureLive = moistureLive.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureLiveAggregate_2(self, moistureLive, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureLiveHerbaceous'] = SIGCrown.prototype.setMoistureLiveHerbaceous = function(moistureLiveHerbaceous, moistureUnits) {
  var self = this.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureLiveHerbaceous_2(self, moistureLiveHerbaceous, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureLiveWoody'] = SIGCrown.prototype.setMoistureLiveWoody = function(moistureLiveWoody, moistureUnits) {
  var self = this.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureLiveWoody_2(self, moistureLiveWoody, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureOneHour'] = SIGCrown.prototype.setMoistureOneHour = function(moistureOneHour, moistureUnits) {
  var self = this.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureOneHour_2(self, moistureOneHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureScenarios'] = SIGCrown.prototype.setMoistureScenarios = function(moistureScenarios) {
  var self = this.ptr;
  if (moistureScenarios && typeof moistureScenarios === 'object') moistureScenarios = moistureScenarios.ptr;
  _emscripten_bind_SIGCrown_setMoistureScenarios_1(self, moistureScenarios);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setMoistureTenHour'] = SIGCrown.prototype.setMoistureTenHour = function(moistureTenHour, moistureUnits) {
  var self = this.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  _emscripten_bind_SIGCrown_setMoistureTenHour_2(self, moistureTenHour, moistureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setSlope'] = SIGCrown.prototype.setSlope = function(slope, slopeUnits) {
  var self = this.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  _emscripten_bind_SIGCrown_setSlope_2(self, slope, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setUserProvidedWindAdjustmentFactor'] = SIGCrown.prototype.setUserProvidedWindAdjustmentFactor = function(userProvidedWindAdjustmentFactor) {
  var self = this.ptr;
  if (userProvidedWindAdjustmentFactor && typeof userProvidedWindAdjustmentFactor === 'object') userProvidedWindAdjustmentFactor = userProvidedWindAdjustmentFactor.ptr;
  _emscripten_bind_SIGCrown_setUserProvidedWindAdjustmentFactor_1(self, userProvidedWindAdjustmentFactor);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setWindAdjustmentFactorCalculationMethod'] = SIGCrown.prototype.setWindAdjustmentFactorCalculationMethod = function(windAdjustmentFactorCalculationMethod) {
  var self = this.ptr;
  if (windAdjustmentFactorCalculationMethod && typeof windAdjustmentFactorCalculationMethod === 'object') windAdjustmentFactorCalculationMethod = windAdjustmentFactorCalculationMethod.ptr;
  _emscripten_bind_SIGCrown_setWindAdjustmentFactorCalculationMethod_1(self, windAdjustmentFactorCalculationMethod);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setWindAndSpreadOrientationMode'] = SIGCrown.prototype.setWindAndSpreadOrientationMode = function(windAndSpreadAngleMode) {
  var self = this.ptr;
  if (windAndSpreadAngleMode && typeof windAndSpreadAngleMode === 'object') windAndSpreadAngleMode = windAndSpreadAngleMode.ptr;
  _emscripten_bind_SIGCrown_setWindAndSpreadOrientationMode_1(self, windAndSpreadAngleMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setWindDirection'] = SIGCrown.prototype.setWindDirection = function(windDirection) {
  var self = this.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  _emscripten_bind_SIGCrown_setWindDirection_1(self, windDirection);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setWindHeightInputMode'] = SIGCrown.prototype.setWindHeightInputMode = function(windHeightInputMode) {
  var self = this.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  _emscripten_bind_SIGCrown_setWindHeightInputMode_1(self, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['setWindSpeed'] = SIGCrown.prototype.setWindSpeed = function(windSpeed, windSpeedUnits) {
  var self = this.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGCrown_setWindSpeed_2(self, windSpeed, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['updateCrownInputs'] = SIGCrown.prototype.updateCrownInputs = function(fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureFoliar, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyBaseHeight, canopyHeightUnits, crownRatio, crownRatioUnits, canopyBulkDensity, densityUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureFoliar && typeof moistureFoliar === 'object') moistureFoliar = moistureFoliar.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyBaseHeight && typeof canopyBaseHeight === 'object') canopyBaseHeight = canopyBaseHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  if (canopyBulkDensity && typeof canopyBulkDensity === 'object') canopyBulkDensity = canopyBulkDensity.ptr;
  if (densityUnits && typeof densityUnits === 'object') densityUnits = densityUnits.ptr;
  _emscripten_bind_SIGCrown_updateCrownInputs_25(self, fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureFoliar, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyBaseHeight, canopyHeightUnits, crownRatio, crownRatioUnits, canopyBulkDensity, densityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['updateCrownsSurfaceInputs'] = SIGCrown.prototype.updateCrownsSurfaceInputs = function(fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (fuelModelNumber && typeof fuelModelNumber === 'object') fuelModelNumber = fuelModelNumber.ptr;
  if (moistureOneHour && typeof moistureOneHour === 'object') moistureOneHour = moistureOneHour.ptr;
  if (moistureTenHour && typeof moistureTenHour === 'object') moistureTenHour = moistureTenHour.ptr;
  if (moistureHundredHour && typeof moistureHundredHour === 'object') moistureHundredHour = moistureHundredHour.ptr;
  if (moistureLiveHerbaceous && typeof moistureLiveHerbaceous === 'object') moistureLiveHerbaceous = moistureLiveHerbaceous.ptr;
  if (moistureLiveWoody && typeof moistureLiveWoody === 'object') moistureLiveWoody = moistureLiveWoody.ptr;
  if (moistureUnits && typeof moistureUnits === 'object') moistureUnits = moistureUnits.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (windDirection && typeof windDirection === 'object') windDirection = windDirection.ptr;
  if (windAndSpreadOrientationMode && typeof windAndSpreadOrientationMode === 'object') windAndSpreadOrientationMode = windAndSpreadOrientationMode.ptr;
  if (slope && typeof slope === 'object') slope = slope.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  if (aspect && typeof aspect === 'object') aspect = aspect.ptr;
  if (canopyCover && typeof canopyCover === 'object') canopyCover = canopyCover.ptr;
  if (coverUnits && typeof coverUnits === 'object') coverUnits = coverUnits.ptr;
  if (canopyHeight && typeof canopyHeight === 'object') canopyHeight = canopyHeight.ptr;
  if (canopyHeightUnits && typeof canopyHeightUnits === 'object') canopyHeightUnits = canopyHeightUnits.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGCrown_updateCrownsSurfaceInputs_21(self, fuelModelNumber, moistureOneHour, moistureTenHour, moistureHundredHour, moistureLiveHerbaceous, moistureLiveWoody, moistureUnits, windSpeed, windSpeedUnits, windHeightInputMode, windDirection, windAndSpreadOrientationMode, slope, slopeUnits, aspect, canopyCover, coverUnits, canopyHeight, canopyHeightUnits, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['getFinalFlameLength'] = SIGCrown.prototype.getFinalFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGCrown_getFinalFlameLength_1(self, flameLengthUnits);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGCrown.prototype['__destroy__'] = SIGCrown.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGCrown___destroy___0(self);
};

// Interface: SpeciesMasterTableRecord

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SpeciesMasterTableRecord(rhs) {
  if (rhs && typeof rhs === 'object') rhs = rhs.ptr;
  if (rhs === undefined) { this.ptr = _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_0(); getCache(SpeciesMasterTableRecord)[this.ptr] = this;return }
  this.ptr = _emscripten_bind_SpeciesMasterTableRecord_SpeciesMasterTableRecord_1(rhs);
  getCache(SpeciesMasterTableRecord)[this.ptr] = this;
};

SpeciesMasterTableRecord.prototype = Object.create(WrapperObject.prototype);
SpeciesMasterTableRecord.prototype.constructor = SpeciesMasterTableRecord;
SpeciesMasterTableRecord.prototype.__class__ = SpeciesMasterTableRecord;
SpeciesMasterTableRecord.__cache__ = {};
Module['SpeciesMasterTableRecord'] = SpeciesMasterTableRecord;

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTableRecord.prototype['__destroy__'] = SpeciesMasterTableRecord.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SpeciesMasterTableRecord___destroy___0(self);
};

// Interface: SpeciesMasterTable

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SpeciesMasterTable() {
  this.ptr = _emscripten_bind_SpeciesMasterTable_SpeciesMasterTable_0();
  getCache(SpeciesMasterTable)[this.ptr] = this;
};

SpeciesMasterTable.prototype = Object.create(WrapperObject.prototype);
SpeciesMasterTable.prototype.constructor = SpeciesMasterTable;
SpeciesMasterTable.prototype.__class__ = SpeciesMasterTable;
SpeciesMasterTable.__cache__ = {};
Module['SpeciesMasterTable'] = SpeciesMasterTable;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTable.prototype['initializeMasterTable'] = SpeciesMasterTable.prototype.initializeMasterTable = function() {
  var self = this.ptr;
  _emscripten_bind_SpeciesMasterTable_initializeMasterTable_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTable.prototype['getSpeciesTableIndexFromSpeciesCode'] = SpeciesMasterTable.prototype.getSpeciesTableIndexFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTable.prototype['getSpeciesTableIndexFromSpeciesCodeAndEquationType'] = SpeciesMasterTable.prototype.getSpeciesTableIndexFromSpeciesCodeAndEquationType = function(speciesCode, equationType) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  return _emscripten_bind_SpeciesMasterTable_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2(self, speciesCode, equationType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTable.prototype['insertRecord'] = SpeciesMasterTable.prototype.insertRecord = function(speciesCode, scientificName, commonName, mortalityEquation, brkEqu, crownCoefficientCode, Alaska, California, EasternArea, GreatBasin, NorthernRockies, Northwest, RocketyMountain, SouthernArea, SouthWest, equationType, crownDamageEquationCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  if (scientificName && typeof scientificName === 'object') scientificName = scientificName.ptr;
  else scientificName = ensureString(scientificName);
  if (commonName && typeof commonName === 'object') commonName = commonName.ptr;
  else commonName = ensureString(commonName);
  if (mortalityEquation && typeof mortalityEquation === 'object') mortalityEquation = mortalityEquation.ptr;
  if (brkEqu && typeof brkEqu === 'object') brkEqu = brkEqu.ptr;
  if (crownCoefficientCode && typeof crownCoefficientCode === 'object') crownCoefficientCode = crownCoefficientCode.ptr;
  if (Alaska && typeof Alaska === 'object') Alaska = Alaska.ptr;
  if (California && typeof California === 'object') California = California.ptr;
  if (EasternArea && typeof EasternArea === 'object') EasternArea = EasternArea.ptr;
  if (GreatBasin && typeof GreatBasin === 'object') GreatBasin = GreatBasin.ptr;
  if (NorthernRockies && typeof NorthernRockies === 'object') NorthernRockies = NorthernRockies.ptr;
  if (Northwest && typeof Northwest === 'object') Northwest = Northwest.ptr;
  if (RocketyMountain && typeof RocketyMountain === 'object') RocketyMountain = RocketyMountain.ptr;
  if (SouthernArea && typeof SouthernArea === 'object') SouthernArea = SouthernArea.ptr;
  if (SouthWest && typeof SouthWest === 'object') SouthWest = SouthWest.ptr;
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  if (crownDamageEquationCode && typeof crownDamageEquationCode === 'object') crownDamageEquationCode = crownDamageEquationCode.ptr;
  _emscripten_bind_SpeciesMasterTable_insertRecord_17(self, speciesCode, scientificName, commonName, mortalityEquation, brkEqu, crownCoefficientCode, Alaska, California, EasternArea, GreatBasin, NorthernRockies, Northwest, RocketyMountain, SouthernArea, SouthWest, equationType, crownDamageEquationCode);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SpeciesMasterTable.prototype['__destroy__'] = SpeciesMasterTable.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SpeciesMasterTable___destroy___0(self);
};

// Interface: SIGMortality

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGMortality(speciesMasterTable) {
  if (speciesMasterTable && typeof speciesMasterTable === 'object') speciesMasterTable = speciesMasterTable.ptr;
  this.ptr = _emscripten_bind_SIGMortality_SIGMortality_1(speciesMasterTable);
  getCache(SIGMortality)[this.ptr] = this;
};

SIGMortality.prototype = Object.create(WrapperObject.prototype);
SIGMortality.prototype.constructor = SIGMortality;
SIGMortality.prototype.__class__ = SIGMortality;
SIGMortality.__cache__ = {};
Module['SIGMortality'] = SIGMortality;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['initializeMembers'] = SIGMortality.prototype.initializeMembers = function() {
  var self = this.ptr;
  _emscripten_bind_SIGMortality_initializeMembers_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['checkIsInGACCRegionAtSpeciesTableIndex'] = SIGMortality.prototype.checkIsInGACCRegionAtSpeciesTableIndex = function(index, region) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (region && typeof region === 'object') region = region.ptr;
  return !!(_emscripten_bind_SIGMortality_checkIsInGACCRegionAtSpeciesTableIndex_2(self, index, region));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['checkIsInGACCRegionFromSpeciesCode'] = SIGMortality.prototype.checkIsInGACCRegionFromSpeciesCode = function(speciesCode, region) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  if (region && typeof region === 'object') region = region.ptr;
  return !!(_emscripten_bind_SIGMortality_checkIsInGACCRegionFromSpeciesCode_2(self, speciesCode, region));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['updateInputsForSpeciesCodeAndEquationType'] = SIGMortality.prototype.updateInputsForSpeciesCodeAndEquationType = function(speciesCode, equationType) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  return !!(_emscripten_bind_SIGMortality_updateInputsForSpeciesCodeAndEquationType_2(self, speciesCode, equationType));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['calculateMortality'] = SIGMortality.prototype.calculateMortality = function(probablityUnits) {
  var self = this.ptr;
  if (probablityUnits && typeof probablityUnits === 'object') probablityUnits = probablityUnits.ptr;
  return _emscripten_bind_SIGMortality_calculateMortality_1(self, probablityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['calculateScorchHeight'] = SIGMortality.prototype.calculateScorchHeight = function(firelineIntensity, firelineIntensityUnits, midFlameWindSpeed, windSpeedUnits, airTemperature, temperatureUnits, scorchHeightUnits) {
  var self = this.ptr;
  if (firelineIntensity && typeof firelineIntensity === 'object') firelineIntensity = firelineIntensity.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  if (midFlameWindSpeed && typeof midFlameWindSpeed === 'object') midFlameWindSpeed = midFlameWindSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (airTemperature && typeof airTemperature === 'object') airTemperature = airTemperature.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  if (scorchHeightUnits && typeof scorchHeightUnits === 'object') scorchHeightUnits = scorchHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_calculateScorchHeight_7(self, firelineIntensity, firelineIntensityUnits, midFlameWindSpeed, windSpeedUnits, airTemperature, temperatureUnits, scorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['calculateMortalityAllDirections'] = SIGMortality.prototype.calculateMortalityAllDirections = function(probablityUnits) {
  var self = this.ptr;
  if (probablityUnits && typeof probablityUnits === 'object') probablityUnits = probablityUnits.ptr;
  _emscripten_bind_SIGMortality_calculateMortalityAllDirections_1(self, probablityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getRequiredFieldVector'] = SIGMortality.prototype.getRequiredFieldVector = function() {
  var self = this.ptr;
  return wrapPointer(_emscripten_bind_SIGMortality_getRequiredFieldVector_0(self), BoolVector);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBeetleDamage'] = SIGMortality.prototype.getBeetleDamage = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getBeetleDamage_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownDamageEquationCode'] = SIGMortality.prototype.getCrownDamageEquationCode = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getCrownDamageEquationCode_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownDamageEquationCodeAtSpeciesTableIndex'] = SIGMortality.prototype.getCrownDamageEquationCodeAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGMortality_getCrownDamageEquationCodeAtSpeciesTableIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownDamageEquationCodeFromSpeciesCode'] = SIGMortality.prototype.getCrownDamageEquationCodeFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SIGMortality_getCrownDamageEquationCodeFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownDamageType'] = SIGMortality.prototype.getCrownDamageType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getCrownDamageType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCommonNameAtSpeciesTableIndex'] = SIGMortality.prototype.getCommonNameAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGMortality_getCommonNameAtSpeciesTableIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCommonNameFromSpeciesCode'] = SIGMortality.prototype.getCommonNameFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return UTF8ToString(_emscripten_bind_SIGMortality_getCommonNameFromSpeciesCode_1(self, speciesCode));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getScientificNameAtSpeciesTableIndex'] = SIGMortality.prototype.getScientificNameAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGMortality_getScientificNameAtSpeciesTableIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getScientificNameFromSpeciesCode'] = SIGMortality.prototype.getScientificNameFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return UTF8ToString(_emscripten_bind_SIGMortality_getScientificNameFromSpeciesCode_1(self, speciesCode));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesCode'] = SIGMortality.prototype.getSpeciesCode = function() {
  var self = this.ptr;
  return UTF8ToString(_emscripten_bind_SIGMortality_getSpeciesCode_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesCodeAtSpeciesTableIndex'] = SIGMortality.prototype.getSpeciesCodeAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return UTF8ToString(_emscripten_bind_SIGMortality_getSpeciesCodeAtSpeciesTableIndex_1(self, index));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getEquationType'] = SIGMortality.prototype.getEquationType = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getEquationType_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getEquationTypeAtSpeciesTableIndex'] = SIGMortality.prototype.getEquationTypeAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGMortality_getEquationTypeAtSpeciesTableIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getEquationTypeFromSpeciesCode'] = SIGMortality.prototype.getEquationTypeFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SIGMortality_getEquationTypeFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getFireSeverity'] = SIGMortality.prototype.getFireSeverity = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getFireSeverity_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getFlameLengthOrScorchHeightSwitch'] = SIGMortality.prototype.getFlameLengthOrScorchHeightSwitch = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightSwitch_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getGACCRegion'] = SIGMortality.prototype.getGACCRegion = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getGACCRegion_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesRecordVectorForGACCRegion'] = SIGMortality.prototype.getSpeciesRecordVectorForGACCRegion = function(region) {
  var self = this.ptr;
  if (region && typeof region === 'object') region = region.ptr;
  return wrapPointer(_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegion_1(self, region), SpeciesMasterTableRecordVector);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesRecordVectorForGACCRegionAndEquationType'] = SIGMortality.prototype.getSpeciesRecordVectorForGACCRegionAndEquationType = function(region, equationType) {
  var self = this.ptr;
  if (region && typeof region === 'object') region = region.ptr;
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  return wrapPointer(_emscripten_bind_SIGMortality_getSpeciesRecordVectorForGACCRegionAndEquationType_2(self, region, equationType), SpeciesMasterTableRecordVector);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBarkThickness'] = SIGMortality.prototype.getBarkThickness = function(barkThicknessUnits) {
  var self = this.ptr;
  if (barkThicknessUnits && typeof barkThicknessUnits === 'object') barkThicknessUnits = barkThicknessUnits.ptr;
  return _emscripten_bind_SIGMortality_getBarkThickness_1(self, barkThicknessUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBasalAreaKillled'] = SIGMortality.prototype.getBasalAreaKillled = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getBasalAreaKillled_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBasalAreaPostfire'] = SIGMortality.prototype.getBasalAreaPostfire = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getBasalAreaPostfire_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBasalAreaPrefire'] = SIGMortality.prototype.getBasalAreaPrefire = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getBasalAreaPrefire_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBoleCharHeight'] = SIGMortality.prototype.getBoleCharHeight = function(boleCharHeightUnits) {
  var self = this.ptr;
  if (boleCharHeightUnits && typeof boleCharHeightUnits === 'object') boleCharHeightUnits = boleCharHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getBoleCharHeight_1(self, boleCharHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBoleCharHeightBacking'] = SIGMortality.prototype.getBoleCharHeightBacking = function(boleCharHeightUnits) {
  var self = this.ptr;
  if (boleCharHeightUnits && typeof boleCharHeightUnits === 'object') boleCharHeightUnits = boleCharHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getBoleCharHeightBacking_1(self, boleCharHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBoleCharHeightFlanking'] = SIGMortality.prototype.getBoleCharHeightFlanking = function(boleCharHeightUnits) {
  var self = this.ptr;
  if (boleCharHeightUnits && typeof boleCharHeightUnits === 'object') boleCharHeightUnits = boleCharHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getBoleCharHeightFlanking_1(self, boleCharHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCambiumKillRating'] = SIGMortality.prototype.getCambiumKillRating = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getCambiumKillRating_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownDamage'] = SIGMortality.prototype.getCrownDamage = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getCrownDamage_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownRatio'] = SIGMortality.prototype.getCrownRatio = function(crownRatioUnits) {
  var self = this.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  return _emscripten_bind_SIGMortality_getCrownRatio_1(self, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCVSorCLS'] = SIGMortality.prototype.getCVSorCLS = function() {
  var self = this.ptr;
  return UTF8ToString(_emscripten_bind_SIGMortality_getCVSorCLS_0(self));
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getDBH'] = SIGMortality.prototype.getDBH = function(diameterUnits) {
  var self = this.ptr;
  if (diameterUnits && typeof diameterUnits === 'object') diameterUnits = diameterUnits.ptr;
  return _emscripten_bind_SIGMortality_getDBH_1(self, diameterUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getFlameLength'] = SIGMortality.prototype.getFlameLength = function(flameLengthUnits) {
  var self = this.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  return _emscripten_bind_SIGMortality_getFlameLength_1(self, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getFlameLengthOrScorchHeightValue'] = SIGMortality.prototype.getFlameLengthOrScorchHeightValue = function(flameLengthOrScorchHeightUnits) {
  var self = this.ptr;
  if (flameLengthOrScorchHeightUnits && typeof flameLengthOrScorchHeightUnits === 'object') flameLengthOrScorchHeightUnits = flameLengthOrScorchHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getFlameLengthOrScorchHeightValue_1(self, flameLengthOrScorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getKilledTrees'] = SIGMortality.prototype.getKilledTrees = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getKilledTrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getProbabilityOfMortality'] = SIGMortality.prototype.getProbabilityOfMortality = function(probabilityUnits) {
  var self = this.ptr;
  if (probabilityUnits && typeof probabilityUnits === 'object') probabilityUnits = probabilityUnits.ptr;
  return _emscripten_bind_SIGMortality_getProbabilityOfMortality_1(self, probabilityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getProbabilityOfMortalityBacking'] = SIGMortality.prototype.getProbabilityOfMortalityBacking = function(probabilityUnits) {
  var self = this.ptr;
  if (probabilityUnits && typeof probabilityUnits === 'object') probabilityUnits = probabilityUnits.ptr;
  return _emscripten_bind_SIGMortality_getProbabilityOfMortalityBacking_1(self, probabilityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getProbabilityOfMortalityFlanking'] = SIGMortality.prototype.getProbabilityOfMortalityFlanking = function(probabilityUnits) {
  var self = this.ptr;
  if (probabilityUnits && typeof probabilityUnits === 'object') probabilityUnits = probabilityUnits.ptr;
  return _emscripten_bind_SIGMortality_getProbabilityOfMortalityFlanking_1(self, probabilityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getScorchHeight'] = SIGMortality.prototype.getScorchHeight = function(scorchHeightUnits) {
  var self = this.ptr;
  if (scorchHeightUnits && typeof scorchHeightUnits === 'object') scorchHeightUnits = scorchHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getScorchHeight_1(self, scorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getScorchHeightBacking'] = SIGMortality.prototype.getScorchHeightBacking = function(scorchHeightUnits) {
  var self = this.ptr;
  if (scorchHeightUnits && typeof scorchHeightUnits === 'object') scorchHeightUnits = scorchHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getScorchHeightBacking_1(self, scorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getScorchHeightFlanking'] = SIGMortality.prototype.getScorchHeightFlanking = function(scorchHeightUnits) {
  var self = this.ptr;
  if (scorchHeightUnits && typeof scorchHeightUnits === 'object') scorchHeightUnits = scorchHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getScorchHeightFlanking_1(self, scorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTotalPrefireTrees'] = SIGMortality.prototype.getTotalPrefireTrees = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getTotalPrefireTrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownLengthScorched'] = SIGMortality.prototype.getTreeCrownLengthScorched = function(treeCrownLengthScorchedUnits) {
  var self = this.ptr;
  if (treeCrownLengthScorchedUnits && typeof treeCrownLengthScorchedUnits === 'object') treeCrownLengthScorchedUnits = treeCrownLengthScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownLengthScorched_1(self, treeCrownLengthScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownLengthScorchedBacking'] = SIGMortality.prototype.getTreeCrownLengthScorchedBacking = function(treeCrownLengthScorchedUnits) {
  var self = this.ptr;
  if (treeCrownLengthScorchedUnits && typeof treeCrownLengthScorchedUnits === 'object') treeCrownLengthScorchedUnits = treeCrownLengthScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedBacking_1(self, treeCrownLengthScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownLengthScorchedFlanking'] = SIGMortality.prototype.getTreeCrownLengthScorchedFlanking = function(treeCrownLengthScorchedUnits) {
  var self = this.ptr;
  if (treeCrownLengthScorchedUnits && typeof treeCrownLengthScorchedUnits === 'object') treeCrownLengthScorchedUnits = treeCrownLengthScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownLengthScorchedFlanking_1(self, treeCrownLengthScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownVolumeScorched'] = SIGMortality.prototype.getTreeCrownVolumeScorched = function(getTreeCrownVolumeScorchedUnits) {
  var self = this.ptr;
  if (getTreeCrownVolumeScorchedUnits && typeof getTreeCrownVolumeScorchedUnits === 'object') getTreeCrownVolumeScorchedUnits = getTreeCrownVolumeScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownVolumeScorched_1(self, getTreeCrownVolumeScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownVolumeScorchedBacking'] = SIGMortality.prototype.getTreeCrownVolumeScorchedBacking = function(getTreeCrownVolumeScorchedUnits) {
  var self = this.ptr;
  if (getTreeCrownVolumeScorchedUnits && typeof getTreeCrownVolumeScorchedUnits === 'object') getTreeCrownVolumeScorchedUnits = getTreeCrownVolumeScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedBacking_1(self, getTreeCrownVolumeScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeCrownVolumeScorchedFlanking'] = SIGMortality.prototype.getTreeCrownVolumeScorchedFlanking = function(getTreeCrownVolumeScorchedUnits) {
  var self = this.ptr;
  if (getTreeCrownVolumeScorchedUnits && typeof getTreeCrownVolumeScorchedUnits === 'object') getTreeCrownVolumeScorchedUnits = getTreeCrownVolumeScorchedUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeCrownVolumeScorchedFlanking_1(self, getTreeCrownVolumeScorchedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeDensityPerUnitArea'] = SIGMortality.prototype.getTreeDensityPerUnitArea = function(areaUnits) {
  var self = this.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeDensityPerUnitArea_1(self, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getTreeHeight'] = SIGMortality.prototype.getTreeHeight = function(treeHeightUnits) {
  var self = this.ptr;
  if (treeHeightUnits && typeof treeHeightUnits === 'object') treeHeightUnits = treeHeightUnits.ptr;
  return _emscripten_bind_SIGMortality_getTreeHeight_1(self, treeHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['postfireCanopyCover'] = SIGMortality.prototype.postfireCanopyCover = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_postfireCanopyCover_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['prefireCanopyCover'] = SIGMortality.prototype.prefireCanopyCover = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_prefireCanopyCover_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBarkEquationNumberAtSpeciesTableIndex'] = SIGMortality.prototype.getBarkEquationNumberAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGMortality_getBarkEquationNumberAtSpeciesTableIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getBarkEquationNumberFromSpeciesCode'] = SIGMortality.prototype.getBarkEquationNumberFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SIGMortality_getBarkEquationNumberFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownCoefficientCodeAtSpeciesTableIndex'] = SIGMortality.prototype.getCrownCoefficientCodeAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGMortality_getCrownCoefficientCodeAtSpeciesTableIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownCoefficientCodeFromSpeciesCode'] = SIGMortality.prototype.getCrownCoefficientCodeFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SIGMortality_getCrownCoefficientCodeFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getCrownScorchOrBoleCharEquationNumber'] = SIGMortality.prototype.getCrownScorchOrBoleCharEquationNumber = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getCrownScorchOrBoleCharEquationNumber_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getMortalityEquationNumberAtSpeciesTableIndex'] = SIGMortality.prototype.getMortalityEquationNumberAtSpeciesTableIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGMortality_getMortalityEquationNumberAtSpeciesTableIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getMortalityEquationNumberFromSpeciesCode'] = SIGMortality.prototype.getMortalityEquationNumberFromSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  return _emscripten_bind_SIGMortality_getMortalityEquationNumberFromSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getNumberOfRecordsInSpeciesTable'] = SIGMortality.prototype.getNumberOfRecordsInSpeciesTable = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGMortality_getNumberOfRecordsInSpeciesTable_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesTableIndexFromSpeciesCode'] = SIGMortality.prototype.getSpeciesTableIndexFromSpeciesCode = function(speciesNameCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesNameCode && typeof speciesNameCode === 'object') speciesNameCode = speciesNameCode.ptr;
  else speciesNameCode = ensureString(speciesNameCode);
  return _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCode_1(self, speciesNameCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['getSpeciesTableIndexFromSpeciesCodeAndEquationType'] = SIGMortality.prototype.getSpeciesTableIndexFromSpeciesCodeAndEquationType = function(speciesNameCode, equationType) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesNameCode && typeof speciesNameCode === 'object') speciesNameCode = speciesNameCode.ptr;
  else speciesNameCode = ensureString(speciesNameCode);
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  return _emscripten_bind_SIGMortality_getSpeciesTableIndexFromSpeciesCodeAndEquationType_2(self, speciesNameCode, equationType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setAirTemperature'] = SIGMortality.prototype.setAirTemperature = function(airTemperature, temperatureUnits) {
  var self = this.ptr;
  if (airTemperature && typeof airTemperature === 'object') airTemperature = airTemperature.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  _emscripten_bind_SIGMortality_setAirTemperature_2(self, airTemperature, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setBeetleDamage'] = SIGMortality.prototype.setBeetleDamage = function(beetleDamage) {
  var self = this.ptr;
  if (beetleDamage && typeof beetleDamage === 'object') beetleDamage = beetleDamage.ptr;
  _emscripten_bind_SIGMortality_setBeetleDamage_1(self, beetleDamage);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setBoleCharHeight'] = SIGMortality.prototype.setBoleCharHeight = function(boleCharHeight, boleCharHeightUnits) {
  var self = this.ptr;
  if (boleCharHeight && typeof boleCharHeight === 'object') boleCharHeight = boleCharHeight.ptr;
  if (boleCharHeightUnits && typeof boleCharHeightUnits === 'object') boleCharHeightUnits = boleCharHeightUnits.ptr;
  _emscripten_bind_SIGMortality_setBoleCharHeight_2(self, boleCharHeight, boleCharHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setCambiumKillRating'] = SIGMortality.prototype.setCambiumKillRating = function(cambiumKillRating) {
  var self = this.ptr;
  if (cambiumKillRating && typeof cambiumKillRating === 'object') cambiumKillRating = cambiumKillRating.ptr;
  _emscripten_bind_SIGMortality_setCambiumKillRating_1(self, cambiumKillRating);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setCrownDamage'] = SIGMortality.prototype.setCrownDamage = function(crownDamage) {
  var self = this.ptr;
  if (crownDamage && typeof crownDamage === 'object') crownDamage = crownDamage.ptr;
  _emscripten_bind_SIGMortality_setCrownDamage_1(self, crownDamage);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setCrownRatio'] = SIGMortality.prototype.setCrownRatio = function(crownRatio, crownRatioUnits) {
  var self = this.ptr;
  if (crownRatio && typeof crownRatio === 'object') crownRatio = crownRatio.ptr;
  if (crownRatioUnits && typeof crownRatioUnits === 'object') crownRatioUnits = crownRatioUnits.ptr;
  _emscripten_bind_SIGMortality_setCrownRatio_2(self, crownRatio, crownRatioUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setDBH'] = SIGMortality.prototype.setDBH = function(dbh, diameterUnits) {
  var self = this.ptr;
  if (dbh && typeof dbh === 'object') dbh = dbh.ptr;
  if (diameterUnits && typeof diameterUnits === 'object') diameterUnits = diameterUnits.ptr;
  _emscripten_bind_SIGMortality_setDBH_2(self, dbh, diameterUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setEquationType'] = SIGMortality.prototype.setEquationType = function(equationType) {
  var self = this.ptr;
  if (equationType && typeof equationType === 'object') equationType = equationType.ptr;
  _emscripten_bind_SIGMortality_setEquationType_1(self, equationType);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setFireSeverity'] = SIGMortality.prototype.setFireSeverity = function(fireSeverity) {
  var self = this.ptr;
  if (fireSeverity && typeof fireSeverity === 'object') fireSeverity = fireSeverity.ptr;
  _emscripten_bind_SIGMortality_setFireSeverity_1(self, fireSeverity);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setFirelineIntensity'] = SIGMortality.prototype.setFirelineIntensity = function(firelineIntensity, firelineIntensityUnits) {
  var self = this.ptr;
  if (firelineIntensity && typeof firelineIntensity === 'object') firelineIntensity = firelineIntensity.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  _emscripten_bind_SIGMortality_setFirelineIntensity_2(self, firelineIntensity, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setFlameLength'] = SIGMortality.prototype.setFlameLength = function(flameLength, flameLengthUnits) {
  var self = this.ptr;
  if (flameLength && typeof flameLength === 'object') flameLength = flameLength.ptr;
  if (flameLengthUnits && typeof flameLengthUnits === 'object') flameLengthUnits = flameLengthUnits.ptr;
  _emscripten_bind_SIGMortality_setFlameLength_2(self, flameLength, flameLengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setFlameLengthOrScorchHeightSwitch'] = SIGMortality.prototype.setFlameLengthOrScorchHeightSwitch = function(flameLengthOrScorchHeightSwitch) {
  var self = this.ptr;
  if (flameLengthOrScorchHeightSwitch && typeof flameLengthOrScorchHeightSwitch === 'object') flameLengthOrScorchHeightSwitch = flameLengthOrScorchHeightSwitch.ptr;
  _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightSwitch_1(self, flameLengthOrScorchHeightSwitch);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setFlameLengthOrScorchHeightValue'] = SIGMortality.prototype.setFlameLengthOrScorchHeightValue = function(flameLengthOrScorchHeightValue, flameLengthOrScorchHeightUnits) {
  var self = this.ptr;
  if (flameLengthOrScorchHeightValue && typeof flameLengthOrScorchHeightValue === 'object') flameLengthOrScorchHeightValue = flameLengthOrScorchHeightValue.ptr;
  if (flameLengthOrScorchHeightUnits && typeof flameLengthOrScorchHeightUnits === 'object') flameLengthOrScorchHeightUnits = flameLengthOrScorchHeightUnits.ptr;
  _emscripten_bind_SIGMortality_setFlameLengthOrScorchHeightValue_2(self, flameLengthOrScorchHeightValue, flameLengthOrScorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setMidFlameWindSpeed'] = SIGMortality.prototype.setMidFlameWindSpeed = function(midFlameWindSpeed, windSpeedUnits) {
  var self = this.ptr;
  if (midFlameWindSpeed && typeof midFlameWindSpeed === 'object') midFlameWindSpeed = midFlameWindSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGMortality_setMidFlameWindSpeed_2(self, midFlameWindSpeed, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setGACCRegion'] = SIGMortality.prototype.setGACCRegion = function(region) {
  var self = this.ptr;
  if (region && typeof region === 'object') region = region.ptr;
  _emscripten_bind_SIGMortality_setGACCRegion_1(self, region);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setScorchHeight'] = SIGMortality.prototype.setScorchHeight = function(scorchHeight, scorchHeightUnits) {
  var self = this.ptr;
  if (scorchHeight && typeof scorchHeight === 'object') scorchHeight = scorchHeight.ptr;
  if (scorchHeightUnits && typeof scorchHeightUnits === 'object') scorchHeightUnits = scorchHeightUnits.ptr;
  _emscripten_bind_SIGMortality_setScorchHeight_2(self, scorchHeight, scorchHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSpeciesCode'] = SIGMortality.prototype.setSpeciesCode = function(speciesCode) {
  var self = this.ptr;
  ensureCache.prepare();
  if (speciesCode && typeof speciesCode === 'object') speciesCode = speciesCode.ptr;
  else speciesCode = ensureString(speciesCode);
  _emscripten_bind_SIGMortality_setSpeciesCode_1(self, speciesCode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFirelineIntensity'] = SIGMortality.prototype.setSurfaceFireFirelineIntensity = function(value, firelineIntensityUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensity_2(self, value, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFirelineIntensityBacking'] = SIGMortality.prototype.setSurfaceFireFirelineIntensityBacking = function(value, firelineIntensityUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityBacking_2(self, value, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFirelineIntensityFlanking'] = SIGMortality.prototype.setSurfaceFireFirelineIntensityFlanking = function(value, firelineIntensityUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (firelineIntensityUnits && typeof firelineIntensityUnits === 'object') firelineIntensityUnits = firelineIntensityUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFirelineIntensityFlanking_2(self, value, firelineIntensityUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFlameLength'] = SIGMortality.prototype.setSurfaceFireFlameLength = function(value, lengthUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFlameLength_2(self, value, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFlameLengthBacking'] = SIGMortality.prototype.setSurfaceFireFlameLengthBacking = function(value, lengthUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthBacking_2(self, value, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireFlameLengthFlanking'] = SIGMortality.prototype.setSurfaceFireFlameLengthFlanking = function(value, lengthUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireFlameLengthFlanking_2(self, value, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setSurfaceFireScorchHeight'] = SIGMortality.prototype.setSurfaceFireScorchHeight = function(value, lengthUnits) {
  var self = this.ptr;
  if (value && typeof value === 'object') value = value.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_SIGMortality_setSurfaceFireScorchHeight_2(self, value, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setTreeDensityPerUnitArea'] = SIGMortality.prototype.setTreeDensityPerUnitArea = function(numberOfTrees, areaUnits) {
  var self = this.ptr;
  if (numberOfTrees && typeof numberOfTrees === 'object') numberOfTrees = numberOfTrees.ptr;
  if (areaUnits && typeof areaUnits === 'object') areaUnits = areaUnits.ptr;
  _emscripten_bind_SIGMortality_setTreeDensityPerUnitArea_2(self, numberOfTrees, areaUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setTreeHeight'] = SIGMortality.prototype.setTreeHeight = function(treeHeight, treeHeightUnits) {
  var self = this.ptr;
  if (treeHeight && typeof treeHeight === 'object') treeHeight = treeHeight.ptr;
  if (treeHeightUnits && typeof treeHeightUnits === 'object') treeHeightUnits = treeHeightUnits.ptr;
  _emscripten_bind_SIGMortality_setTreeHeight_2(self, treeHeight, treeHeightUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setUserProvidedWindAdjustmentFactor'] = SIGMortality.prototype.setUserProvidedWindAdjustmentFactor = function(userProvidedWindAdjustmentFactor) {
  var self = this.ptr;
  if (userProvidedWindAdjustmentFactor && typeof userProvidedWindAdjustmentFactor === 'object') userProvidedWindAdjustmentFactor = userProvidedWindAdjustmentFactor.ptr;
  _emscripten_bind_SIGMortality_setUserProvidedWindAdjustmentFactor_1(self, userProvidedWindAdjustmentFactor);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setWindHeightInputMode'] = SIGMortality.prototype.setWindHeightInputMode = function(windHeightInputMode) {
  var self = this.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  _emscripten_bind_SIGMortality_setWindHeightInputMode_1(self, windHeightInputMode);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setWindSpeed'] = SIGMortality.prototype.setWindSpeed = function(windSpeed, windSpeedUnits) {
  var self = this.ptr;
  if (windSpeed && typeof windSpeed === 'object') windSpeed = windSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  _emscripten_bind_SIGMortality_setWindSpeed_2(self, windSpeed, windSpeedUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['setWindSpeedAndWindHeightInputMode'] = SIGMortality.prototype.setWindSpeedAndWindHeightInputMode = function(windwindSpeed, windSpeedUnits, windHeightInputMode, userProvidedWindAdjustmentFactor) {
  var self = this.ptr;
  if (windwindSpeed && typeof windwindSpeed === 'object') windwindSpeed = windwindSpeed.ptr;
  if (windSpeedUnits && typeof windSpeedUnits === 'object') windSpeedUnits = windSpeedUnits.ptr;
  if (windHeightInputMode && typeof windHeightInputMode === 'object') windHeightInputMode = windHeightInputMode.ptr;
  if (userProvidedWindAdjustmentFactor && typeof userProvidedWindAdjustmentFactor === 'object') userProvidedWindAdjustmentFactor = userProvidedWindAdjustmentFactor.ptr;
  _emscripten_bind_SIGMortality_setWindSpeedAndWindHeightInputMode_4(self, windwindSpeed, windSpeedUnits, windHeightInputMode, userProvidedWindAdjustmentFactor);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGMortality.prototype['__destroy__'] = SIGMortality.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGMortality___destroy___0(self);
};

// Interface: WindSpeedUtility

/** @suppress {undefinedVars, duplicate} @this{Object} */
function WindSpeedUtility() {
  this.ptr = _emscripten_bind_WindSpeedUtility_WindSpeedUtility_0();
  getCache(WindSpeedUtility)[this.ptr] = this;
};

WindSpeedUtility.prototype = Object.create(WrapperObject.prototype);
WindSpeedUtility.prototype.constructor = WindSpeedUtility;
WindSpeedUtility.prototype.__class__ = WindSpeedUtility;
WindSpeedUtility.__cache__ = {};
Module['WindSpeedUtility'] = WindSpeedUtility;
/** @suppress {undefinedVars, duplicate} @this{Object} */
WindSpeedUtility.prototype['windSpeedAtMidflame'] = WindSpeedUtility.prototype.windSpeedAtMidflame = function(windSpeedAtTwentyFeet, windAdjustmentFactor) {
  var self = this.ptr;
  if (windSpeedAtTwentyFeet && typeof windSpeedAtTwentyFeet === 'object') windSpeedAtTwentyFeet = windSpeedAtTwentyFeet.ptr;
  if (windAdjustmentFactor && typeof windAdjustmentFactor === 'object') windAdjustmentFactor = windAdjustmentFactor.ptr;
  return _emscripten_bind_WindSpeedUtility_windSpeedAtMidflame_2(self, windSpeedAtTwentyFeet, windAdjustmentFactor);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
WindSpeedUtility.prototype['windSpeedAtTwentyFeetFromTenMeter'] = WindSpeedUtility.prototype.windSpeedAtTwentyFeetFromTenMeter = function(windSpeedAtTenMeters) {
  var self = this.ptr;
  if (windSpeedAtTenMeters && typeof windSpeedAtTenMeters === 'object') windSpeedAtTenMeters = windSpeedAtTenMeters.ptr;
  return _emscripten_bind_WindSpeedUtility_windSpeedAtTwentyFeetFromTenMeter_1(self, windSpeedAtTenMeters);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
WindSpeedUtility.prototype['__destroy__'] = WindSpeedUtility.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_WindSpeedUtility___destroy___0(self);
};

// Interface: SIGFineDeadFuelMoistureTool

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGFineDeadFuelMoistureTool() {
  this.ptr = _emscripten_bind_SIGFineDeadFuelMoistureTool_SIGFineDeadFuelMoistureTool_0();
  getCache(SIGFineDeadFuelMoistureTool)[this.ptr] = this;
};

SIGFineDeadFuelMoistureTool.prototype = Object.create(WrapperObject.prototype);
SIGFineDeadFuelMoistureTool.prototype.constructor = SIGFineDeadFuelMoistureTool;
SIGFineDeadFuelMoistureTool.prototype.__class__ = SIGFineDeadFuelMoistureTool;
SIGFineDeadFuelMoistureTool.__cache__ = {};
Module['SIGFineDeadFuelMoistureTool'] = SIGFineDeadFuelMoistureTool;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['calculate'] = SIGFineDeadFuelMoistureTool.prototype.calculate = function() {
  var self = this.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_calculate_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setTimeOfDayIndex'] = SIGFineDeadFuelMoistureTool.prototype.setTimeOfDayIndex = function(timeOfDayIndex) {
  var self = this.ptr;
  if (timeOfDayIndex && typeof timeOfDayIndex === 'object') timeOfDayIndex = timeOfDayIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setTimeOfDayIndex_1(self, timeOfDayIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setSlopeIndex'] = SIGFineDeadFuelMoistureTool.prototype.setSlopeIndex = function(slopeIndex) {
  var self = this.ptr;
  if (slopeIndex && typeof slopeIndex === 'object') slopeIndex = slopeIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setSlopeIndex_1(self, slopeIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setShadingIndex'] = SIGFineDeadFuelMoistureTool.prototype.setShadingIndex = function(shadingIndex) {
  var self = this.ptr;
  if (shadingIndex && typeof shadingIndex === 'object') shadingIndex = shadingIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setShadingIndex_1(self, shadingIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setAspectIndex'] = SIGFineDeadFuelMoistureTool.prototype.setAspectIndex = function(aspectIndex) {
  var self = this.ptr;
  if (aspectIndex && typeof aspectIndex === 'object') aspectIndex = aspectIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setAspectIndex_1(self, aspectIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setRHIndex'] = SIGFineDeadFuelMoistureTool.prototype.setRHIndex = function(relativeHumidityIndex) {
  var self = this.ptr;
  if (relativeHumidityIndex && typeof relativeHumidityIndex === 'object') relativeHumidityIndex = relativeHumidityIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setRHIndex_1(self, relativeHumidityIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setElevationIndex'] = SIGFineDeadFuelMoistureTool.prototype.setElevationIndex = function(elevationIndex) {
  var self = this.ptr;
  if (elevationIndex && typeof elevationIndex === 'object') elevationIndex = elevationIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setElevationIndex_1(self, elevationIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setDryBulbIndex'] = SIGFineDeadFuelMoistureTool.prototype.setDryBulbIndex = function(dryBulbIndex) {
  var self = this.ptr;
  if (dryBulbIndex && typeof dryBulbIndex === 'object') dryBulbIndex = dryBulbIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setDryBulbIndex_1(self, dryBulbIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['setMonthIndex'] = SIGFineDeadFuelMoistureTool.prototype.setMonthIndex = function(monthIndex) {
  var self = this.ptr;
  if (monthIndex && typeof monthIndex === 'object') monthIndex = monthIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_setMonthIndex_1(self, monthIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getFineDeadFuelMoisture'] = SIGFineDeadFuelMoistureTool.prototype.getFineDeadFuelMoisture = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getFineDeadFuelMoisture_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getSlopeIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getSlopeIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getSlopeIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getElevationIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getElevationIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getElevationIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getMonthIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getMonthIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getMonthIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getDryBulbTemperatureIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getDryBulbTemperatureIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getDryBulbTemperatureIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getReferenceMoisture'] = SIGFineDeadFuelMoistureTool.prototype.getReferenceMoisture = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getReferenceMoisture_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['calculateByIndex'] = SIGFineDeadFuelMoistureTool.prototype.calculateByIndex = function(aspectIndex, dryBulbIndex, elevationIndex, monthIndex, relativeHumidityIndex, shadingIndex, slopeIndex, timeOfDayIndex) {
  var self = this.ptr;
  if (aspectIndex && typeof aspectIndex === 'object') aspectIndex = aspectIndex.ptr;
  if (dryBulbIndex && typeof dryBulbIndex === 'object') dryBulbIndex = dryBulbIndex.ptr;
  if (elevationIndex && typeof elevationIndex === 'object') elevationIndex = elevationIndex.ptr;
  if (monthIndex && typeof monthIndex === 'object') monthIndex = monthIndex.ptr;
  if (relativeHumidityIndex && typeof relativeHumidityIndex === 'object') relativeHumidityIndex = relativeHumidityIndex.ptr;
  if (shadingIndex && typeof shadingIndex === 'object') shadingIndex = shadingIndex.ptr;
  if (slopeIndex && typeof slopeIndex === 'object') slopeIndex = slopeIndex.ptr;
  if (timeOfDayIndex && typeof timeOfDayIndex === 'object') timeOfDayIndex = timeOfDayIndex.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool_calculateByIndex_8(self, aspectIndex, dryBulbIndex, elevationIndex, monthIndex, relativeHumidityIndex, shadingIndex, slopeIndex, timeOfDayIndex);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getTimeOfDayIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getTimeOfDayIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getTimeOfDayIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getCorrectionMoisture'] = SIGFineDeadFuelMoistureTool.prototype.getCorrectionMoisture = function(desiredUnits) {
  var self = this.ptr;
  if (desiredUnits && typeof desiredUnits === 'object') desiredUnits = desiredUnits.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getCorrectionMoisture_1(self, desiredUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getAspectIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getAspectIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getAspectIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getShadingIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getShadingIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getShadingIndexSize_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['getRelativeHumidityIndexSize'] = SIGFineDeadFuelMoistureTool.prototype.getRelativeHumidityIndexSize = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGFineDeadFuelMoistureTool_getRelativeHumidityIndexSize_0(self);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGFineDeadFuelMoistureTool.prototype['__destroy__'] = SIGFineDeadFuelMoistureTool.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGFineDeadFuelMoistureTool___destroy___0(self);
};

// Interface: SIGSlopeTool

/** @suppress {undefinedVars, duplicate} @this{Object} */
function SIGSlopeTool() {
  this.ptr = _emscripten_bind_SIGSlopeTool_SIGSlopeTool_0();
  getCache(SIGSlopeTool)[this.ptr] = this;
};

SIGSlopeTool.prototype = Object.create(WrapperObject.prototype);
SIGSlopeTool.prototype.constructor = SIGSlopeTool;
SIGSlopeTool.prototype.__class__ = SIGSlopeTool;
SIGSlopeTool.__cache__ = {};
Module['SIGSlopeTool'] = SIGSlopeTool;
/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getCentimetersPerKilometerAtIndex'] = SIGSlopeTool.prototype.getCentimetersPerKilometerAtIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getCentimetersPerKilometerAtRepresentativeFraction'] = SIGSlopeTool.prototype.getCentimetersPerKilometerAtRepresentativeFraction = function(representativeFraction) {
  var self = this.ptr;
  if (representativeFraction && typeof representativeFraction === 'object') representativeFraction = representativeFraction.ptr;
  return _emscripten_bind_SIGSlopeTool_getCentimetersPerKilometerAtRepresentativeFraction_1(self, representativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistance'] = SIGSlopeTool.prototype.getHorizontalDistance = function(horizontalDistanceIndex, mapDistanceUnits) {
  var self = this.ptr;
  if (horizontalDistanceIndex && typeof horizontalDistanceIndex === 'object') horizontalDistanceIndex = horizontalDistanceIndex.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistance_2(self, horizontalDistanceIndex, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceAtIndex'] = SIGSlopeTool.prototype.getHorizontalDistanceAtIndex = function(index, mapDistanceUnits) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceAtIndex_2(self, index, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceFifteen'] = SIGSlopeTool.prototype.getHorizontalDistanceFifteen = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFifteen_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceFourtyFive'] = SIGSlopeTool.prototype.getHorizontalDistanceFourtyFive = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceFourtyFive_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceMaxSlope'] = SIGSlopeTool.prototype.getHorizontalDistanceMaxSlope = function(slopeUnits) {
  var self = this.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceMaxSlope_1(self, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceNinety'] = SIGSlopeTool.prototype.getHorizontalDistanceNinety = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceNinety_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceSeventy'] = SIGSlopeTool.prototype.getHorizontalDistanceSeventy = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSeventy_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceSixty'] = SIGSlopeTool.prototype.getHorizontalDistanceSixty = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceSixty_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceThirty'] = SIGSlopeTool.prototype.getHorizontalDistanceThirty = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceThirty_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getHorizontalDistanceZero'] = SIGSlopeTool.prototype.getHorizontalDistanceZero = function(mapDistanceUnits) {
  var self = this.ptr;
  if (mapDistanceUnits && typeof mapDistanceUnits === 'object') mapDistanceUnits = mapDistanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getHorizontalDistanceZero_1(self, mapDistanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getInchesPerMileAtIndex'] = SIGSlopeTool.prototype.getInchesPerMileAtIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGSlopeTool_getInchesPerMileAtIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getInchesPerMileAtRepresentativeFraction'] = SIGSlopeTool.prototype.getInchesPerMileAtRepresentativeFraction = function(representativeFraction) {
  var self = this.ptr;
  if (representativeFraction && typeof representativeFraction === 'object') representativeFraction = representativeFraction.ptr;
  return _emscripten_bind_SIGSlopeTool_getInchesPerMileAtRepresentativeFraction_1(self, representativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getKilometersPerCentimeterAtIndex'] = SIGSlopeTool.prototype.getKilometersPerCentimeterAtIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getKilometersPerCentimeterAtRepresentativeFraction'] = SIGSlopeTool.prototype.getKilometersPerCentimeterAtRepresentativeFraction = function(representativeFraction) {
  var self = this.ptr;
  if (representativeFraction && typeof representativeFraction === 'object') representativeFraction = representativeFraction.ptr;
  return _emscripten_bind_SIGSlopeTool_getKilometersPerCentimeterAtRepresentativeFraction_1(self, representativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getMilesPerInchAtIndex'] = SIGSlopeTool.prototype.getMilesPerInchAtIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGSlopeTool_getMilesPerInchAtIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getMilesPerInchAtRepresentativeFraction'] = SIGSlopeTool.prototype.getMilesPerInchAtRepresentativeFraction = function(representativeFraction) {
  var self = this.ptr;
  if (representativeFraction && typeof representativeFraction === 'object') representativeFraction = representativeFraction.ptr;
  return _emscripten_bind_SIGSlopeTool_getMilesPerInchAtRepresentativeFraction_1(self, representativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getSlopeElevationChangeFromMapMeasurements'] = SIGSlopeTool.prototype.getSlopeElevationChangeFromMapMeasurements = function(elevationUnits) {
  var self = this.ptr;
  if (elevationUnits && typeof elevationUnits === 'object') elevationUnits = elevationUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getSlopeElevationChangeFromMapMeasurements_1(self, elevationUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getSlopeFromMapMeasurements'] = SIGSlopeTool.prototype.getSlopeFromMapMeasurements = function(slopeUnits) {
  var self = this.ptr;
  if (slopeUnits && typeof slopeUnits === 'object') slopeUnits = slopeUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurements_1(self, slopeUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getSlopeHorizontalDistanceFromMapMeasurements'] = SIGSlopeTool.prototype.getSlopeHorizontalDistanceFromMapMeasurements = function(distanceUnits) {
  var self = this.ptr;
  if (distanceUnits && typeof distanceUnits === 'object') distanceUnits = distanceUnits.ptr;
  return _emscripten_bind_SIGSlopeTool_getSlopeHorizontalDistanceFromMapMeasurements_1(self, distanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getSlopeFromMapMeasurementsInDegrees'] = SIGSlopeTool.prototype.getSlopeFromMapMeasurementsInDegrees = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInDegrees_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getSlopeFromMapMeasurementsInPercent'] = SIGSlopeTool.prototype.getSlopeFromMapMeasurementsInPercent = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSlopeTool_getSlopeFromMapMeasurementsInPercent_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getNumberOfHorizontalDistances'] = SIGSlopeTool.prototype.getNumberOfHorizontalDistances = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSlopeTool_getNumberOfHorizontalDistances_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getNumberOfRepresentativeFractions'] = SIGSlopeTool.prototype.getNumberOfRepresentativeFractions = function() {
  var self = this.ptr;
  return _emscripten_bind_SIGSlopeTool_getNumberOfRepresentativeFractions_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getRepresentativeFractionAtIndex'] = SIGSlopeTool.prototype.getRepresentativeFractionAtIndex = function(index) {
  var self = this.ptr;
  if (index && typeof index === 'object') index = index.ptr;
  return _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtIndex_1(self, index);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['getRepresentativeFractionAtRepresentativeFraction'] = SIGSlopeTool.prototype.getRepresentativeFractionAtRepresentativeFraction = function(representativeFraction) {
  var self = this.ptr;
  if (representativeFraction && typeof representativeFraction === 'object') representativeFraction = representativeFraction.ptr;
  return _emscripten_bind_SIGSlopeTool_getRepresentativeFractionAtRepresentativeFraction_1(self, representativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['calculateHorizontalDistance'] = SIGSlopeTool.prototype.calculateHorizontalDistance = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSlopeTool_calculateHorizontalDistance_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['calculateSlopeFromMapMeasurements'] = SIGSlopeTool.prototype.calculateSlopeFromMapMeasurements = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSlopeTool_calculateSlopeFromMapMeasurements_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setCalculatedMapDistance'] = SIGSlopeTool.prototype.setCalculatedMapDistance = function(calculatedMapDistance, distanceUnits) {
  var self = this.ptr;
  if (calculatedMapDistance && typeof calculatedMapDistance === 'object') calculatedMapDistance = calculatedMapDistance.ptr;
  if (distanceUnits && typeof distanceUnits === 'object') distanceUnits = distanceUnits.ptr;
  _emscripten_bind_SIGSlopeTool_setCalculatedMapDistance_2(self, calculatedMapDistance, distanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setContourInterval'] = SIGSlopeTool.prototype.setContourInterval = function(contourInterval, contourUnits) {
  var self = this.ptr;
  if (contourInterval && typeof contourInterval === 'object') contourInterval = contourInterval.ptr;
  if (contourUnits && typeof contourUnits === 'object') contourUnits = contourUnits.ptr;
  _emscripten_bind_SIGSlopeTool_setContourInterval_2(self, contourInterval, contourUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setMapDistance'] = SIGSlopeTool.prototype.setMapDistance = function(mapDistance, distanceUnits) {
  var self = this.ptr;
  if (mapDistance && typeof mapDistance === 'object') mapDistance = mapDistance.ptr;
  if (distanceUnits && typeof distanceUnits === 'object') distanceUnits = distanceUnits.ptr;
  _emscripten_bind_SIGSlopeTool_setMapDistance_2(self, mapDistance, distanceUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setMapRepresentativeFraction'] = SIGSlopeTool.prototype.setMapRepresentativeFraction = function(mapRepresentativeFraction) {
  var self = this.ptr;
  if (mapRepresentativeFraction && typeof mapRepresentativeFraction === 'object') mapRepresentativeFraction = mapRepresentativeFraction.ptr;
  _emscripten_bind_SIGSlopeTool_setMapRepresentativeFraction_1(self, mapRepresentativeFraction);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setMaxSlopeSteepness'] = SIGSlopeTool.prototype.setMaxSlopeSteepness = function(maxSlopeSteepness) {
  var self = this.ptr;
  if (maxSlopeSteepness && typeof maxSlopeSteepness === 'object') maxSlopeSteepness = maxSlopeSteepness.ptr;
  _emscripten_bind_SIGSlopeTool_setMaxSlopeSteepness_1(self, maxSlopeSteepness);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['setNumberOfContours'] = SIGSlopeTool.prototype.setNumberOfContours = function(numberOfContours) {
  var self = this.ptr;
  if (numberOfContours && typeof numberOfContours === 'object') numberOfContours = numberOfContours.ptr;
  _emscripten_bind_SIGSlopeTool_setNumberOfContours_1(self, numberOfContours);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
SIGSlopeTool.prototype['__destroy__'] = SIGSlopeTool.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_SIGSlopeTool___destroy___0(self);
};

// Interface: VaporPressureDeficitCalculator

/** @suppress {undefinedVars, duplicate} @this{Object} */
function VaporPressureDeficitCalculator() {
  this.ptr = _emscripten_bind_VaporPressureDeficitCalculator_VaporPressureDeficitCalculator_0();
  getCache(VaporPressureDeficitCalculator)[this.ptr] = this;
};

VaporPressureDeficitCalculator.prototype = Object.create(WrapperObject.prototype);
VaporPressureDeficitCalculator.prototype.constructor = VaporPressureDeficitCalculator;
VaporPressureDeficitCalculator.prototype.__class__ = VaporPressureDeficitCalculator;
VaporPressureDeficitCalculator.__cache__ = {};
Module['VaporPressureDeficitCalculator'] = VaporPressureDeficitCalculator;
/** @suppress {undefinedVars, duplicate} @this{Object} */
VaporPressureDeficitCalculator.prototype['runCalculation'] = VaporPressureDeficitCalculator.prototype.runCalculation = function() {
  var self = this.ptr;
  _emscripten_bind_VaporPressureDeficitCalculator_runCalculation_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
VaporPressureDeficitCalculator.prototype['setTemperature'] = VaporPressureDeficitCalculator.prototype.setTemperature = function(temperature, units) {
  var self = this.ptr;
  if (temperature && typeof temperature === 'object') temperature = temperature.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  _emscripten_bind_VaporPressureDeficitCalculator_setTemperature_2(self, temperature, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
VaporPressureDeficitCalculator.prototype['setRelativeHumidity'] = VaporPressureDeficitCalculator.prototype.setRelativeHumidity = function(relativeHumidity, units) {
  var self = this.ptr;
  if (relativeHumidity && typeof relativeHumidity === 'object') relativeHumidity = relativeHumidity.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  _emscripten_bind_VaporPressureDeficitCalculator_setRelativeHumidity_2(self, relativeHumidity, units);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
VaporPressureDeficitCalculator.prototype['getVaporPressureDeficit'] = VaporPressureDeficitCalculator.prototype.getVaporPressureDeficit = function(units) {
  var self = this.ptr;
  if (units && typeof units === 'object') units = units.ptr;
  return _emscripten_bind_VaporPressureDeficitCalculator_getVaporPressureDeficit_1(self, units);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
VaporPressureDeficitCalculator.prototype['__destroy__'] = VaporPressureDeficitCalculator.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_VaporPressureDeficitCalculator___destroy___0(self);
};

// Interface: RelativeHumidityTool

/** @suppress {undefinedVars, duplicate} @this{Object} */
function RelativeHumidityTool() {
  this.ptr = _emscripten_bind_RelativeHumidityTool_RelativeHumidityTool_0();
  getCache(RelativeHumidityTool)[this.ptr] = this;
};

RelativeHumidityTool.prototype = Object.create(WrapperObject.prototype);
RelativeHumidityTool.prototype.constructor = RelativeHumidityTool;
RelativeHumidityTool.prototype.__class__ = RelativeHumidityTool;
RelativeHumidityTool.__cache__ = {};
Module['RelativeHumidityTool'] = RelativeHumidityTool;
/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['calculate'] = RelativeHumidityTool.prototype.calculate = function() {
  var self = this.ptr;
  _emscripten_bind_RelativeHumidityTool_calculate_0(self);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getDryBulbTemperature'] = RelativeHumidityTool.prototype.getDryBulbTemperature = function(temperatureUnits) {
  var self = this.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getDryBulbTemperature_1(self, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getSiteElevation'] = RelativeHumidityTool.prototype.getSiteElevation = function(lengthUnits) {
  var self = this.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getSiteElevation_1(self, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getWetBulbTemperature'] = RelativeHumidityTool.prototype.getWetBulbTemperature = function(temperatureUnits) {
  var self = this.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getWetBulbTemperature_1(self, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getDewPointTemperature'] = RelativeHumidityTool.prototype.getDewPointTemperature = function(temperatureUnits) {
  var self = this.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getDewPointTemperature_1(self, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getRelativeHumidity'] = RelativeHumidityTool.prototype.getRelativeHumidity = function(fractionUnits) {
  var self = this.ptr;
  if (fractionUnits && typeof fractionUnits === 'object') fractionUnits = fractionUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getRelativeHumidity_1(self, fractionUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['getWetBulbDepression'] = RelativeHumidityTool.prototype.getWetBulbDepression = function(temperatureUnits) {
  var self = this.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  return _emscripten_bind_RelativeHumidityTool_getWetBulbDepression_1(self, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['setDryBulbTemperature'] = RelativeHumidityTool.prototype.setDryBulbTemperature = function(dryBulbTemperature, temperatureUnits) {
  var self = this.ptr;
  if (dryBulbTemperature && typeof dryBulbTemperature === 'object') dryBulbTemperature = dryBulbTemperature.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  _emscripten_bind_RelativeHumidityTool_setDryBulbTemperature_2(self, dryBulbTemperature, temperatureUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['setSiteElevation'] = RelativeHumidityTool.prototype.setSiteElevation = function(siteElevation, lengthUnits) {
  var self = this.ptr;
  if (siteElevation && typeof siteElevation === 'object') siteElevation = siteElevation.ptr;
  if (lengthUnits && typeof lengthUnits === 'object') lengthUnits = lengthUnits.ptr;
  _emscripten_bind_RelativeHumidityTool_setSiteElevation_2(self, siteElevation, lengthUnits);
};

/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['setWetBulbTemperature'] = RelativeHumidityTool.prototype.setWetBulbTemperature = function(wetBulbTemperature, temperatureUnits) {
  var self = this.ptr;
  if (wetBulbTemperature && typeof wetBulbTemperature === 'object') wetBulbTemperature = wetBulbTemperature.ptr;
  if (temperatureUnits && typeof temperatureUnits === 'object') temperatureUnits = temperatureUnits.ptr;
  _emscripten_bind_RelativeHumidityTool_setWetBulbTemperature_2(self, wetBulbTemperature, temperatureUnits);
};


/** @suppress {undefinedVars, duplicate} @this{Object} */
RelativeHumidityTool.prototype['__destroy__'] = RelativeHumidityTool.prototype.__destroy__ = function() {
  var self = this.ptr;
  _emscripten_bind_RelativeHumidityTool___destroy___0(self);
};

(function() {
  function setupEnums() {
    
// $AreaUnits_AreaUnitsEnum

    Module['AreaUnits']['SquareFeet'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareFeet();

    Module['AreaUnits']['Acres'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_Acres();

    Module['AreaUnits']['Hectares'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_Hectares();

    Module['AreaUnits']['SquareMeters'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMeters();

    Module['AreaUnits']['SquareMiles'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareMiles();

    Module['AreaUnits']['SquareKilometers'] = _emscripten_enum_AreaUnits_AreaUnitsEnum_SquareKilometers();

    
// $BasalAreaUnits_BasalAreaUnitsEnum

    Module['BasalAreaUnits']['SquareFeetPerAcre'] = _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareFeetPerAcre();

    Module['BasalAreaUnits']['SquareMetersPerHectare'] = _emscripten_enum_BasalAreaUnits_BasalAreaUnitsEnum_SquareMetersPerHectare();

    
// $FractionUnits_FractionUnitsEnum

    Module['FractionUnits']['Fraction'] = _emscripten_enum_FractionUnits_FractionUnitsEnum_Fraction();

    Module['FractionUnits']['Percent'] = _emscripten_enum_FractionUnits_FractionUnitsEnum_Percent();

    
// $LengthUnits_LengthUnitsEnum

    Module['LengthUnits']['Feet'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Feet();

    Module['LengthUnits']['Inches'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Inches();

    Module['LengthUnits']['Millimeters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Millimeters();

    Module['LengthUnits']['Centimeters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Centimeters();

    Module['LengthUnits']['Meters'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Meters();

    Module['LengthUnits']['Chains'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Chains();

    Module['LengthUnits']['Miles'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Miles();

    Module['LengthUnits']['Kilometers'] = _emscripten_enum_LengthUnits_LengthUnitsEnum_Kilometers();

    
// $LoadingUnits_LoadingUnitsEnum

    Module['LoadingUnits']['PoundsPerSquareFoot'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_PoundsPerSquareFoot();

    Module['LoadingUnits']['TonsPerAcre'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonsPerAcre();

    Module['LoadingUnits']['TonnesPerHectare'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_TonnesPerHectare();

    Module['LoadingUnits']['KilogramsPerSquareMeter'] = _emscripten_enum_LoadingUnits_LoadingUnitsEnum_KilogramsPerSquareMeter();

    
// $SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum

    Module['SurfaceAreaToVolumeUnits']['SquareFeetOverCubicFeet'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareFeetOverCubicFeet();

    Module['SurfaceAreaToVolumeUnits']['SquareMetersOverCubicMeters'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareMetersOverCubicMeters();

    Module['SurfaceAreaToVolumeUnits']['SquareInchesOverCubicInches'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareInchesOverCubicInches();

    Module['SurfaceAreaToVolumeUnits']['SquareCentimetersOverCubicCentimeters'] = _emscripten_enum_SurfaceAreaToVolumeUnits_SurfaceAreaToVolumeUnitsEnum_SquareCentimetersOverCubicCentimeters();

    
// $SpeedUnits_SpeedUnitsEnum

    Module['SpeedUnits']['FeetPerMinute'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_FeetPerMinute();

    Module['SpeedUnits']['ChainsPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_ChainsPerHour();

    Module['SpeedUnits']['MetersPerSecond'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerSecond();

    Module['SpeedUnits']['MetersPerMinute'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MetersPerMinute();

    Module['SpeedUnits']['MilesPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_MilesPerHour();

    Module['SpeedUnits']['KilometersPerHour'] = _emscripten_enum_SpeedUnits_SpeedUnitsEnum_KilometersPerHour();

    
// $PressureUnits_PressureUnitsEnum

    Module['PressureUnits']['Pascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Pascal();

    Module['PressureUnits']['HectoPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_HectoPascal();

    Module['PressureUnits']['KiloPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_KiloPascal();

    Module['PressureUnits']['MegaPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_MegaPascal();

    Module['PressureUnits']['GigaPascal'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_GigaPascal();

    Module['PressureUnits']['Bar'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Bar();

    Module['PressureUnits']['Atmosphere'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_Atmosphere();

    Module['PressureUnits']['TechnicalAtmosphere'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_TechnicalAtmosphere();

    Module['PressureUnits']['PoundPerSquareInch'] = _emscripten_enum_PressureUnits_PressureUnitsEnum_PoundPerSquareInch();

    
// $SlopeUnits_SlopeUnitsEnum

    Module['SlopeUnits']['Degrees'] = _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Degrees();

    Module['SlopeUnits']['Percent'] = _emscripten_enum_SlopeUnits_SlopeUnitsEnum_Percent();

    
// $DensityUnits_DensityUnitsEnum

    Module['DensityUnits']['PoundsPerCubicFoot'] = _emscripten_enum_DensityUnits_DensityUnitsEnum_PoundsPerCubicFoot();

    Module['DensityUnits']['KilogramsPerCubicMeter'] = _emscripten_enum_DensityUnits_DensityUnitsEnum_KilogramsPerCubicMeter();

    
// $HeatOfCombustionUnits_HeatOfCombustionUnitsEnum

    Module['HeatOfCombustionUnits']['BtusPerPound'] = _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_BtusPerPound();

    Module['HeatOfCombustionUnits']['KilojoulesPerKilogram'] = _emscripten_enum_HeatOfCombustionUnits_HeatOfCombustionUnitsEnum_KilojoulesPerKilogram();

    
// $HeatSinkUnits_HeatSinkUnitsEnum

    Module['HeatSinkUnits']['BtusPerCubicFoot'] = _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_BtusPerCubicFoot();

    Module['HeatSinkUnits']['KilojoulesPerCubicMeter'] = _emscripten_enum_HeatSinkUnits_HeatSinkUnitsEnum_KilojoulesPerCubicMeter();

    
// $HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum

    Module['HeatPerUnitAreaUnits']['BtusPerSquareFoot'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_BtusPerSquareFoot();

    Module['HeatPerUnitAreaUnits']['KilojoulesPerSquareMeter'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilojoulesPerSquareMeter();

    Module['HeatPerUnitAreaUnits']['KilowattSecondsPerSquareMeter'] = _emscripten_enum_HeatPerUnitAreaUnits_HeatPerUnitAreaUnitsEnum_KilowattSecondsPerSquareMeter();

    
// $HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum

    Module['HeatSourceAndReactionIntensityUnits']['BtusPerSquareFootPerMinute'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerMinute();

    Module['HeatSourceAndReactionIntensityUnits']['BtusPerSquareFootPerSecond'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_BtusPerSquareFootPerSecond();

    Module['HeatSourceAndReactionIntensityUnits']['KilojoulesPerSquareMeterPerSecond'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerSecond();

    Module['HeatSourceAndReactionIntensityUnits']['KilojoulesPerSquareMeterPerMinute'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilojoulesPerSquareMeterPerMinute();

    Module['HeatSourceAndReactionIntensityUnits']['KilowattsPerSquareMeter'] = _emscripten_enum_HeatSourceAndReactionIntensityUnits_HeatSourceAndReactionIntensityUnitsEnum_KilowattsPerSquareMeter();

    
// $FirelineIntensityUnits_FirelineIntensityUnitsEnum

    Module['FirelineIntensityUnits']['BtusPerFootPerSecond'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerSecond();

    Module['FirelineIntensityUnits']['BtusPerFootPerMinute'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_BtusPerFootPerMinute();

    Module['FirelineIntensityUnits']['KilojoulesPerMeterPerSecond'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerSecond();

    Module['FirelineIntensityUnits']['KilojoulesPerMeterPerMinute'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilojoulesPerMeterPerMinute();

    Module['FirelineIntensityUnits']['KilowattsPerMeter'] = _emscripten_enum_FirelineIntensityUnits_FirelineIntensityUnitsEnum_KilowattsPerMeter();

    
// $TemperatureUnits_TemperatureUnitsEnum

    Module['TemperatureUnits']['Fahrenheit'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Fahrenheit();

    Module['TemperatureUnits']['Celsius'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Celsius();

    Module['TemperatureUnits']['Kelvin'] = _emscripten_enum_TemperatureUnits_TemperatureUnitsEnum_Kelvin();

    
// $TimeUnits_TimeUnitsEnum

    Module['TimeUnits']['Minutes'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Minutes();

    Module['TimeUnits']['Seconds'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Seconds();

    Module['TimeUnits']['Hours'] = _emscripten_enum_TimeUnits_TimeUnitsEnum_Hours();

    
// $ContainTactic_ContainTacticEnum

    Module['HeadAttack'] = _emscripten_enum_ContainTactic_ContainTacticEnum_HeadAttack();

    Module['RearAttack'] = _emscripten_enum_ContainTactic_ContainTacticEnum_RearAttack();

    
// $ContainStatus_ContainStatusEnum

    Module['Unreported'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Unreported();

    Module['Reported'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Reported();

    Module['Attacked'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Attacked();

    Module['Contained'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Contained();

    Module['Overrun'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Overrun();

    Module['Exhausted'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Exhausted();

    Module['Overflow'] = _emscripten_enum_ContainStatus_ContainStatusEnum_Overflow();

    Module['SizeLimitExceeded'] = _emscripten_enum_ContainStatus_ContainStatusEnum_SizeLimitExceeded();

    Module['TimeLimitExceeded'] = _emscripten_enum_ContainStatus_ContainStatusEnum_TimeLimitExceeded();

    
// $ContainFlank_ContainFlankEnum

    Module['LeftFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_LeftFlank();

    Module['RightFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_RightFlank();

    Module['BothFlanks'] = _emscripten_enum_ContainFlank_ContainFlankEnum_BothFlanks();

    Module['NeitherFlank'] = _emscripten_enum_ContainFlank_ContainFlankEnum_NeitherFlank();

    
// $IgnitionFuelBedType_IgnitionFuelBedTypeEnum

    Module['PonderosaPineLitter'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PonderosaPineLitter();

    Module['PunkyWoodRottenChunky'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodRottenChunky();

    Module['PunkyWoodPowderDeep'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkyWoodPowderDeep();

    Module['PunkWoodPowderShallow'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PunkWoodPowderShallow();

    Module['LodgepolePineDuff'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_LodgepolePineDuff();

    Module['DouglasFirDuff'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_DouglasFirDuff();

    Module['HighAltitudeMixed'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_HighAltitudeMixed();

    Module['PeatMoss'] = _emscripten_enum_IgnitionFuelBedType_IgnitionFuelBedTypeEnum_PeatMoss();

    
// $LightningCharge_LightningChargeEnum

    Module['Negative'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Negative();

    Module['Positive'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Positive();

    Module['Unknown'] = _emscripten_enum_LightningCharge_LightningChargeEnum_Unknown();

    
// $SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum

    Module['CLOSED'] = _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_CLOSED();

    Module['OPEN'] = _emscripten_enum_SpotDownWindCanopyMode_SpotDownWindCanopyModeEnum_OPEN();

    
// $SpotTreeSpecies_SpotTreeSpeciesEnum

    Module['ENGELMANN_SPRUCE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_ENGELMANN_SPRUCE();

    Module['DOUGLAS_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_DOUGLAS_FIR();

    Module['SUBALPINE_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SUBALPINE_FIR();

    Module['WESTERN_HEMLOCK'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_HEMLOCK();

    Module['PONDEROSA_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_PONDEROSA_PINE();

    Module['LODGEPOLE_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LODGEPOLE_PINE();

    Module['WESTERN_WHITE_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_WESTERN_WHITE_PINE();

    Module['GRAND_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_GRAND_FIR();

    Module['BALSAM_FIR'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_BALSAM_FIR();

    Module['SLASH_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SLASH_PINE();

    Module['LONGLEAF_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LONGLEAF_PINE();

    Module['POND_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_POND_PINE();

    Module['SHORTLEAF_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_SHORTLEAF_PINE();

    Module['LOBLOLLY_PINE'] = _emscripten_enum_SpotTreeSpecies_SpotTreeSpeciesEnum_LOBLOLLY_PINE();

    
// $SpotFireLocation_SpotFireLocationEnum

    Module['MIDSLOPE_WINDWARD'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_WINDWARD();

    Module['VALLEY_BOTTOM'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_VALLEY_BOTTOM();

    Module['MIDSLOPE_LEEWARD'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_MIDSLOPE_LEEWARD();

    Module['RIDGE_TOP'] = _emscripten_enum_SpotFireLocation_SpotFireLocationEnum_RIDGE_TOP();

    
// $FuelLifeState_FuelLifeStateEnum

    Module['Dead'] = _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Dead();

    Module['Live'] = _emscripten_enum_FuelLifeState_FuelLifeStateEnum_Live();

    
// $FuelConstantsEnum_FuelConstantsEnum

    Module['MaxLifeStates'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLifeStates();

    Module['MaxLiveSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxLiveSizeClasses();

    Module['MaxDeadSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxDeadSizeClasses();

    Module['MaxParticles'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxParticles();

    Module['MaxSavrSizeClasses'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxSavrSizeClasses();

    Module['MaxFuelModels'] = _emscripten_enum_FuelConstantsEnum_FuelConstantsEnum_MaxFuelModels();

    
// $AspenFireSeverity_AspenFireSeverityEnum

    Module['Low'] = _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Low();

    Module['Moderate'] = _emscripten_enum_AspenFireSeverity_AspenFireSeverityEnum_Moderate();

    
// $ChaparralFuelType_ChaparralFuelTypeEnum

    Module['NotSet'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_NotSet();

    Module['Chamise'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_Chamise();

    Module['MixedBrush'] = _emscripten_enum_ChaparralFuelType_ChaparralFuelTypeEnum_MixedBrush();

    
// $ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum

    Module['DirectFuelLoad'] = _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_DirectFuelLoad();

    Module['FuelLoadFromDepthAndChaparralType'] = _emscripten_enum_ChaparralFuelLoadInputMode_ChaparralFuelInputLoadModeEnum_FuelLoadFromDepthAndChaparralType();

    
// $MoistureInputMode_MoistureInputModeEnum

    Module['BySizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_BySizeClass();

    Module['AllAggregate'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_AllAggregate();

    Module['DeadAggregateAndLiveSizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_DeadAggregateAndLiveSizeClass();

    Module['LiveAggregateAndDeadSizeClass'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_LiveAggregateAndDeadSizeClass();

    Module['MoistureScenario'] = _emscripten_enum_MoistureInputMode_MoistureInputModeEnum_MoistureScenario();

    
// $MoistureClassInput_MoistureClassInputEnum

    Module['OneHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_OneHour();

    Module['TenHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_TenHour();

    Module['HundredHour'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_HundredHour();

    Module['LiveHerbaceous'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveHerbaceous();

    Module['LiveWoody'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveWoody();

    Module['DeadAggregate'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_DeadAggregate();

    Module['LiveAggregate'] = _emscripten_enum_MoistureClassInput_MoistureClassInputEnum_LiveAggregate();

    
// $SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum

    Module['FromIgnitionPoint'] = _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromIgnitionPoint();

    Module['FromPerimeter'] = _emscripten_enum_SurfaceFireSpreadDirectionMode_SurfaceFireSpreadDirectionModeEnum_FromPerimeter();

    
// $TwoFuelModelsMethod_TwoFuelModelsMethodEnum

    Module['NoMethod'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_NoMethod();

    Module['Arithmetic'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Arithmetic();

    Module['Harmonic'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_Harmonic();

    Module['TwoDimensional'] = _emscripten_enum_TwoFuelModelsMethod_TwoFuelModelsMethodEnum_TwoDimensional();

    
// $WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum

    Module['Unsheltered'] = _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Unsheltered();

    Module['Sheltered'] = _emscripten_enum_WindAdjustmentFactorShelterMethod_WindAdjustmentFactorShelterMethodEnum_Sheltered();

    
// $WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum

    Module['UserInput'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UserInput();

    Module['UseCrownRatio'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_UseCrownRatio();

    Module['DontUseCrownRatio'] = _emscripten_enum_WindAdjustmentFactorCalculationMethod_WindAdjustmentFactorCalculationMethodEnum_DontUseCrownRatio();

    
// $WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum

    Module['RelativeToUpslope'] = _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToUpslope();

    Module['RelativeToNorth'] = _emscripten_enum_WindAndSpreadOrientationMode_WindAndSpreadOrientationModeEnum_RelativeToNorth();

    
// $WindHeightInputMode_WindHeightInputModeEnum

    Module['DirectMidflame'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_DirectMidflame();

    Module['TwentyFoot'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TwentyFoot();

    Module['TenMeter'] = _emscripten_enum_WindHeightInputMode_WindHeightInputModeEnum_TenMeter();

    
// $WindUpslopeAlignmentMode

    Module['NotAligned'] = _emscripten_enum_WindUpslopeAlignmentMode_NotAligned();

    Module['Aligned'] = _emscripten_enum_WindUpslopeAlignmentMode_Aligned();

    
// $SurfaceRunInDirectionOf

    Module['MaxSpread'] = _emscripten_enum_SurfaceRunInDirectionOf_MaxSpread();

    Module['DirectionOfInterest'] = _emscripten_enum_SurfaceRunInDirectionOf_DirectionOfInterest();

    Module['HeadingBackingFlanking'] = _emscripten_enum_SurfaceRunInDirectionOf_HeadingBackingFlanking();

    
// $FireType_FireTypeEnum

    Module['Surface'] = _emscripten_enum_FireType_FireTypeEnum_Surface();

    Module['Torching'] = _emscripten_enum_FireType_FireTypeEnum_Torching();

    Module['ConditionalCrownFire'] = _emscripten_enum_FireType_FireTypeEnum_ConditionalCrownFire();

    Module['Crowning'] = _emscripten_enum_FireType_FireTypeEnum_Crowning();

    
// $BeetleDamage

    Module['not_set'] = _emscripten_enum_BeetleDamage_not_set();

    Module['no'] = _emscripten_enum_BeetleDamage_no();

    Module['yes'] = _emscripten_enum_BeetleDamage_yes();

    
// $CrownFireCalculationMethod

    Module['rothermel'] = _emscripten_enum_CrownFireCalculationMethod_rothermel();

    Module['scott_and_reinhardt'] = _emscripten_enum_CrownFireCalculationMethod_scott_and_reinhardt();

    
// $CrownDamageEquationCode

    Module['not_set'] = _emscripten_enum_CrownDamageEquationCode_not_set();

    Module['white_fir'] = _emscripten_enum_CrownDamageEquationCode_white_fir();

    Module['subalpine_fir'] = _emscripten_enum_CrownDamageEquationCode_subalpine_fir();

    Module['incense_cedar'] = _emscripten_enum_CrownDamageEquationCode_incense_cedar();

    Module['western_larch'] = _emscripten_enum_CrownDamageEquationCode_western_larch();

    Module['whitebark_pine'] = _emscripten_enum_CrownDamageEquationCode_whitebark_pine();

    Module['engelmann_spruce'] = _emscripten_enum_CrownDamageEquationCode_engelmann_spruce();

    Module['sugar_pine'] = _emscripten_enum_CrownDamageEquationCode_sugar_pine();

    Module['red_fir'] = _emscripten_enum_CrownDamageEquationCode_red_fir();

    Module['ponderosa_pine'] = _emscripten_enum_CrownDamageEquationCode_ponderosa_pine();

    Module['ponderosa_kill'] = _emscripten_enum_CrownDamageEquationCode_ponderosa_kill();

    Module['douglas_fir'] = _emscripten_enum_CrownDamageEquationCode_douglas_fir();

    
// $CrownDamageType

    Module['not_set'] = _emscripten_enum_CrownDamageType_not_set();

    Module['crown_length'] = _emscripten_enum_CrownDamageType_crown_length();

    Module['crown_volume'] = _emscripten_enum_CrownDamageType_crown_volume();

    Module['crown_kill'] = _emscripten_enum_CrownDamageType_crown_kill();

    
// $EquationType

    Module['not_set'] = _emscripten_enum_EquationType_not_set();

    Module['crown_scorch'] = _emscripten_enum_EquationType_crown_scorch();

    Module['bole_char'] = _emscripten_enum_EquationType_bole_char();

    Module['crown_damage'] = _emscripten_enum_EquationType_crown_damage();

    
// $FireSeverity

    Module['not_set'] = _emscripten_enum_FireSeverity_not_set();

    Module['empty'] = _emscripten_enum_FireSeverity_empty();

    Module['low'] = _emscripten_enum_FireSeverity_low();

    
// $FlameLengthOrScorchHeightSwitch

    Module['flame_length'] = _emscripten_enum_FlameLengthOrScorchHeightSwitch_flame_length();

    Module['scorch_height'] = _emscripten_enum_FlameLengthOrScorchHeightSwitch_scorch_height();

    
// $GACC

    Module['NotSet'] = _emscripten_enum_GACC_NotSet();

    Module['Alaska'] = _emscripten_enum_GACC_Alaska();

    Module['California'] = _emscripten_enum_GACC_California();

    Module['EasternArea'] = _emscripten_enum_GACC_EasternArea();

    Module['GreatBasin'] = _emscripten_enum_GACC_GreatBasin();

    Module['NorthernRockies'] = _emscripten_enum_GACC_NorthernRockies();

    Module['Northwest'] = _emscripten_enum_GACC_Northwest();

    Module['RockeyMountain'] = _emscripten_enum_GACC_RockeyMountain();

    Module['SouthernArea'] = _emscripten_enum_GACC_SouthernArea();

    Module['Southwest'] = _emscripten_enum_GACC_Southwest();

    
// $RequiredFieldNames

    Module['region'] = _emscripten_enum_RequiredFieldNames_region();

    Module['flame_length_or_scorch_height_switch'] = _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_switch();

    Module['flame_length_or_scorch_height_value'] = _emscripten_enum_RequiredFieldNames_flame_length_or_scorch_height_value();

    Module['equation_type'] = _emscripten_enum_RequiredFieldNames_equation_type();

    Module['dbh'] = _emscripten_enum_RequiredFieldNames_dbh();

    Module['tree_height'] = _emscripten_enum_RequiredFieldNames_tree_height();

    Module['crown_ratio'] = _emscripten_enum_RequiredFieldNames_crown_ratio();

    Module['crown_damage'] = _emscripten_enum_RequiredFieldNames_crown_damage();

    Module['cambium_kill_rating'] = _emscripten_enum_RequiredFieldNames_cambium_kill_rating();

    Module['beetle_damage'] = _emscripten_enum_RequiredFieldNames_beetle_damage();

    Module['bole_char_height'] = _emscripten_enum_RequiredFieldNames_bole_char_height();

    Module['bark_thickness'] = _emscripten_enum_RequiredFieldNames_bark_thickness();

    Module['fire_severity'] = _emscripten_enum_RequiredFieldNames_fire_severity();

    Module['num_inputs'] = _emscripten_enum_RequiredFieldNames_num_inputs();

    
// $FDFMToolAspectIndex_AspectIndexEnum

    Module['NORTH'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_NORTH();

    Module['EAST'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_EAST();

    Module['SOUTH'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_SOUTH();

    Module['WEST'] = _emscripten_enum_FDFMToolAspectIndex_AspectIndexEnum_WEST();

    
// $FDFMToolDryBulbIndex_DryBulbIndexEnum

    Module['TEN_TO_TWENTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_TEN_TO_TWENTY_NINE_DEGREES_F();

    Module['THRITY_TO_FOURTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_THRITY_TO_FOURTY_NINE_DEGREES_F();

    Module['FIFTY_TO_SIXTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_FIFTY_TO_SIXTY_NINE_DEGREES_F();

    Module['SEVENTY_TO_EIGHTY_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_SEVENTY_TO_EIGHTY_NINE_DEGREES_F();

    Module['NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_NINETY_TO_ONE_HUNDRED_NINE_DEGREES_F();

    Module['GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F'] = _emscripten_enum_FDFMToolDryBulbIndex_DryBulbIndexEnum_GREATER_THAN_ONE_HUNDRED_NINE_DEGREES_F();

    
// $FDFMToolElevationIndex_ElevationIndexEnum

    Module['BELOW_1000_TO_2000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_BELOW_1000_TO_2000_FT();

    Module['LEVEL_WITHIN_1000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_LEVEL_WITHIN_1000_FT();

    Module['ABOVE_1000_TO_2000_FT'] = _emscripten_enum_FDFMToolElevationIndex_ElevationIndexEnum_ABOVE_1000_TO_2000_FT();

    
// $FDFMToolMonthIndex_MonthIndexEnum

    Module['MAY_JUNE_JULY'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_MAY_JUNE_JULY();

    Module['FEB_MAR_APR_AUG_SEP_OCT'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_FEB_MAR_APR_AUG_SEP_OCT();

    Module['NOV_DEC_JAN'] = _emscripten_enum_FDFMToolMonthIndex_MonthIndexEnum_NOV_DEC_JAN();

    
// $FDFMToolRHIndex_RHIndexEnum

    Module['ZERO_TO_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ZERO_TO_FOUR_PERCENT();

    Module['FIVE_TO_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIVE_TO_NINE_PERCENT();

    Module['TEN_TO_FOURTEEN_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TEN_TO_FOURTEEN_PERCENT();

    Module['FIFTEEN_TO_NINETEEN_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTEEN_TO_NINETEEN_PERCENT();

    Module['TWENTY_TO_TWENTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_TO_TWENTY_FOUR_PERCENT();

    Module['TWENTY_FIVE_TO_TWENTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_TWENTY_FIVE_TO_TWENTY_NINE_PERCENT();

    Module['THIRTY_TO_THIRTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_TO_THIRTY_FOUR_PERCENT();

    Module['THIRTY_FIVE_TO_THIRTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_THIRTY_FIVE_TO_THIRTY_NINE_PERCENT();

    Module['FORTY_TO_FORTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_TO_FORTY_FOUR_PERCENT();

    Module['FORTY_FIVE_TO_FORTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FORTY_FIVE_TO_FORTY_NINE_PERCENT();

    Module['FIFTY_TO_FIFTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_TO_FIFTY_FOUR_PERCENT();

    Module['FIFTY_FIVE_TO_FIFTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_FIFTY_FIVE_TO_FIFTY_NINE_PERCENT();

    Module['SIXTY_TO_SIXTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_TO_SIXTY_FOUR_PERCENT();

    Module['SIXTY_FIVE_TO_SIXTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SIXTY_FIVE_TO_SIXTY_NINE_PERCENT();

    Module['SEVENTY_TO_SEVENTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_TO_SEVENTY_FOUR_PERCENT();

    Module['SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_SEVENTY_FIVE_TO_SEVENTY_NINE_PERCENT();

    Module['EIGHTY_TO_EIGHTY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_TO_EIGHTY_FOUR_PERCENT();

    Module['EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_EIGHTY_FIVE_TO_EIGHTY_NINE_PERCENT();

    Module['NINETY_TO_NINETY_FOUR_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_TO_NINETY_FOUR_PERCENT();

    Module['NINETY_FIVE_TO_NINETY_NINE_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_NINETY_FIVE_TO_NINETY_NINE_PERCENT();

    Module['ONE_HUNDRED_PERCENT'] = _emscripten_enum_FDFMToolRHIndex_RHIndexEnum_ONE_HUNDRED_PERCENT();

    
// $FDFMToolShadingIndex_ShadingIndexEnum

    Module['EXPOSED'] = _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_EXPOSED();

    Module['SHADED'] = _emscripten_enum_FDFMToolShadingIndex_ShadingIndexEnum_SHADED();

    
// $FDFMToolSlopeIndex_SlopeIndexEnum

    Module['ZERO_TO_THIRTY_PERCENT'] = _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_ZERO_TO_THIRTY_PERCENT();

    Module['GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT'] = _emscripten_enum_FDFMToolSlopeIndex_SlopeIndexEnum_GREATER_THAN_OR_EQUAL_TO_THIRTY_ONE_PERCENT();

    
// $FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum

    Module['EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHT_HUNDRED_HOURS_TO_NINE_HUNDRED_FIFTY_NINE();

    Module['TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TEN_HUNDRED_HOURS_TO_ELEVEN__HUNDRED_FIFTY_NINE();

    Module['TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_TWELVE_HUNDRED_HOURS_TO_THIRTEEN_HUNDRED_FIFTY_NINE();

    Module['FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_FOURTEEN_HUNDRED_HOURS_TO_FIFTEEN_HUNDRED_FIFTY_NINE();

    Module['SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_SIXTEEN_HUNDRED_HOURS_TO_SIXTEEN_HUNDRED_FIFTY_NINE();

    Module['EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET'] = _emscripten_enum_FDFMToolTimeOfDayIndex_TimeOfDayIndexEnum_EIGHTTEEN_HUNDRED_HOURS_TO_SUNSET();

    
// $RepresentativeFraction_RepresentativeFractionEnum

    Module['NINTEEN_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_NINTEEN_HUNDRED_EIGHTY();

    Module['THREE_THOUSAND_NINEHUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THREE_THOUSAND_NINEHUNDRED_SIXTY();

    Module['SEVEN_THOUSAND_NINEHUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SEVEN_THOUSAND_NINEHUNDRED_TWENTY();

    Module['TEN_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TEN_THOUSAND();

    Module['FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTEEN_THOUSAND_EIGHT_HUNDRED_FORTY();

    Module['TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_ONE_THOUSAND_ONE_HUNDRED_TWENTY();

    Module['TWENTY_FOUR_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWENTY_FOUR_THOUSAND();

    Module['THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_THRITY_ONE_THOUSAND_SIX_HUNDRED_EIGHTY();

    Module['FIFTY_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIFTY_THOUSAND();

    Module['SIXTY_TWO_THOUSAND_FIVE_HUNDRED'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_TWO_THOUSAND_FIVE_HUNDRED();

    Module['SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_SIXTY_THREE_THOUSAND_THREE_HUNDRED_SIXTY();

    Module['ONE_HUNDRED_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_THOUSAND();

    Module['ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_HUNDRED_TWENTY_SIX_THOUSAND_SEVEN_HUNDRED_TWENTY();

    Module['TWO_HUNDRED_FIFTY_THOUSAND'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THOUSAND();

    Module['TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_TWO_HUNDRED_FIFTY_THREE_THOUSAND_FOUR_HUNDRED_FORTY();

    Module['FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_FIVE_HUNDRED_SIX_THOUSAND_EIGHT_HUNDRED_EIGHTY();

    Module['ONE_MILLION'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION();

    Module['ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY'] = _emscripten_enum_RepresentativeFraction_RepresentativeFractionEnum_ONE_MILLION_THIRTEEN_THOUSAND_SEVEN_HUNDRED_SIXTY();

    
// $HorizontalDistanceIndex_HorizontalDistanceIndexEnum

    Module['UPSLOPE_ZERO_DEGREES'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_UPSLOPE_ZERO_DEGREES();

    Module['FIFTEEN_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FIFTEEN_DEGREES_FROM_UPSLOPE();

    Module['THIRTY_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_THIRTY_DEGREES_FROM_UPSLOPE();

    Module['FORTY_FIVE_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_FORTY_FIVE_DEGREES_FROM_UPSLOPE();

    Module['SIXTY_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SIXTY_DEGREES_FROM_UPSLOPE();

    Module['SEVENTY_FIVE_DEGREES_FROM_UPSLOPE'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_SEVENTY_FIVE_DEGREES_FROM_UPSLOPE();

    Module['CROSS_SLOPE_NINETY_DEGREES'] = _emscripten_enum_HorizontalDistanceIndex_HorizontalDistanceIndexEnum_CROSS_SLOPE_NINETY_DEGREES();

  }
  if (runtimeInitialized) setupEnums();
  else addOnInit(setupEnums);
})();
// end include: /Users/rsheperd/code/sig/behave-app/behave-lib/include/js/glue.js

