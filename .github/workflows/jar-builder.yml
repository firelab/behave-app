name: Build and Sign JAR

on:
  push:
    tags:
    - '*'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@13.1
        with:
          cli: 'latest'

      - name: Setup Babashka
        uses: turtlequeue/setup-babashka@v1.7.0
        with:
          babashka-version: 1.3.189

      - name: Set the version
        run: |
          VERSION=$(echo ${{ github.ref }} | sed -e 's/refs\/tags\///g')
          echo "version=$VERSION" >> "$GITHUB_ENV"

      - name: Set the date
        run: |
          DATE=$( echo $(date '+%Y-%m-%d'))
          echo "date=$DATE" >> "$GITHUB_ENV"

      - name: Set release name
        run: |
          RELEASE=$(echo "$version ($date)")
          echo "release=$RELEASE" >> "$GITHUB_ENV"

      - name: Build JAR
        env:
          VMS_URL: ${{ secrets.VMS_URL }}
          VMS_AUTH_TOKEN: ${{ secrets.VMS_SECRET_TOKEN }}
        run: |
          cd projects/behave
          clojure -X:download-vms :url "$VMS_URL" :auth-token "$VMS_AUTH_TOKEN"
          bb build-js
          mv resources/config.standalone.edn resources/config.edn
          echo "{:version $version}" > resources/version.edn
          bb uber

      - name: Verify assets
        run: ls -l projects/behave/target/*.jar

      # - name: Sign JAR
      #   uses: addnab/docker-run-action@v3
      #   with:
      #     image: rjsheperd/jarsigner:latest
      #     shell: bash
      #     options: |
      #       -e SM_API_KEY=${{ secrets.SM_API_KEY }}
      #       -e SM_KEYPAIR=${{ secrets.SM_KEYPAIR }}
      #       -e SM_HOST=${{ secrets.SM_HOST }}
      #       -e SM_CLIENT_CERT_FILE_BASE_64=${{ secrets.SM_CLIENT_CERT_FILE_BASE_64 }}
      #       -e SM_CLIENT_CERT_PASSWORD=${{secrets.SM_CLIENT_CERT_PASSWORD }}
      #       -v ${{ github.workspace }}:/app/code
      #     run: |
      #       # Decode cert
      #       echo $SM_CLIENT_CERT_FILE_BASE_64 | base64 -d > behave.p12
      #       export SM_CLIENT_CERT_FILE=/app/behave.p12

      #       # Get JAR file
      #       JAR=$(ls /app/code/projects/behave/target/*.jar)
      #       echo $JAR

      #       # Sign JAR
      #       ./sign.sh $JAR

      - name: Rename Jar
        run: |
          cd projects/behave/target
          mv $(ls *.jar) behave-$version.jar

      - uses: ncipollo/release-action@v1
        with:
          name: ${{ env.release }}
          artifacts: "projects/behave/target/*-${{ env.version }}.jar"
          artifactContentType: "application/java-archive"
          tag: ${{ github.ref }}
          makeLatest: true
